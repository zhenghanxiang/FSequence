/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/antlr4/dist/antlr4.web.mjs":
/*!*************************************************!*\
  !*** ./node_modules/antlr4/dist/antlr4.web.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ATN: () => (/* binding */ Ge),\n/* harmony export */   ATNDeserializer: () => (/* binding */ We),\n/* harmony export */   BailErrorStrategy: () => (/* binding */ je),\n/* harmony export */   CharStream: () => (/* binding */ $e),\n/* harmony export */   CharStreams: () => (/* binding */ Xe),\n/* harmony export */   CommonToken: () => (/* binding */ Je),\n/* harmony export */   CommonTokenStream: () => (/* binding */ Ze),\n/* harmony export */   DFA: () => (/* binding */ Qe),\n/* harmony export */   DefaultErrorStrategy: () => (/* binding */ tn),\n/* harmony export */   DiagnosticErrorListener: () => (/* binding */ en),\n/* harmony export */   ErrorListener: () => (/* binding */ nn),\n/* harmony export */   FailedPredicateException: () => (/* binding */ sn),\n/* harmony export */   InputMismatchException: () => (/* binding */ rn),\n/* harmony export */   InputStream: () => (/* binding */ on),\n/* harmony export */   Interval: () => (/* binding */ an),\n/* harmony export */   IntervalSet: () => (/* binding */ ln),\n/* harmony export */   LL1Analyzer: () => (/* binding */ hn),\n/* harmony export */   Lexer: () => (/* binding */ cn),\n/* harmony export */   LexerATNSimulator: () => (/* binding */ un),\n/* harmony export */   NoViableAltException: () => (/* binding */ dn),\n/* harmony export */   ParseTreeListener: () => (/* binding */ gn),\n/* harmony export */   ParseTreeVisitor: () => (/* binding */ pn),\n/* harmony export */   ParseTreeWalker: () => (/* binding */ fn),\n/* harmony export */   Parser: () => (/* binding */ xn),\n/* harmony export */   ParserATNSimulator: () => (/* binding */ Tn),\n/* harmony export */   ParserRuleContext: () => (/* binding */ Sn),\n/* harmony export */   PredictionContextCache: () => (/* binding */ mn),\n/* harmony export */   PredictionMode: () => (/* binding */ En),\n/* harmony export */   RecognitionException: () => (/* binding */ _n),\n/* harmony export */   RuleContext: () => (/* binding */ Cn),\n/* harmony export */   RuleNode: () => (/* binding */ An),\n/* harmony export */   TerminalNode: () => (/* binding */ Nn),\n/* harmony export */   Token: () => (/* binding */ kn),\n/* harmony export */   TokenStreamRewriter: () => (/* binding */ In),\n/* harmony export */   arrayToString: () => (/* binding */ yn),\n/* harmony export */   \"default\": () => (/* binding */ Ln)\n/* harmony export */ });\nvar t={763:()=>{}},e={};function n(s){var i=e[s];if(void 0!==i)return i.exports;var r=e[s]={exports:{}};return t[s](r,r.exports,n),r.exports}n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var s={};n.d(s,{MG:()=>$,fr:()=>Lt,sR:()=>Ae,Zo:()=>ke,iH:()=>Re,rt:()=>Pt,jB:()=>be,M8:()=>le,$t:()=>Ce,aq:()=>me,pG:()=>Ot,eP:()=>Te,KU:()=>xe,zW:()=>Ie,IX:()=>E,mY:()=>_,a7:()=>j,JG:()=>Ut,ay:()=>Xt,X2:()=>ee,WU:()=>de,Uw:()=>ge,gw:()=>pe,iX:()=>Fe,re:()=>se,Pg:()=>Be,tD:()=>ie,R$:()=>te,Dj:()=>Ft,m7:()=>U,NZ:()=>P,xo:()=>b,ou:()=>i,qC:()=>ze,mD:()=>d,Ay:()=>Ye});class i{constructor(){this.source=null,this.type=null,this.channel=null,this.start=null,this.stop=null,this.tokenIndex=null,this.line=null,this.column=null,this._text=null}getTokenSource(){return this.source[0]}getInputStream(){return this.source[1]}get text(){return this._text}set text(t){this._text=t}}function r(t,e){if(!Array.isArray(t)||!Array.isArray(e))return!1;if(t===e)return!0;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(!(t[n]===e[n]||t[n].equals&&t[n].equals(e[n])))return!1;return!0}i.INVALID_TYPE=0,i.EPSILON=-2,i.MIN_USER_TOKEN_TYPE=1,i.EOF=-1,i.DEFAULT_CHANNEL=0,i.HIDDEN_CHANNEL=1;const o=Math.round(Math.random()*Math.pow(2,32));function a(t){if(!t)return 0;const e=typeof t,n=\"string\"===e?t:!(\"object\"!==e||!t.toString)&&t.toString();if(!n)return 0;let s,i;const r=3&n.length,a=n.length-r;let l=o;const h=3432918353,c=461845907;let u=0;for(;u<a;)i=255&n.charCodeAt(u)|(255&n.charCodeAt(++u))<<8|(255&n.charCodeAt(++u))<<16|(255&n.charCodeAt(++u))<<24,++u,i=(65535&i)*h+(((i>>>16)*h&65535)<<16)&4294967295,i=i<<15|i>>>17,i=(65535&i)*c+(((i>>>16)*c&65535)<<16)&4294967295,l^=i,l=l<<13|l>>>19,s=5*(65535&l)+((5*(l>>>16)&65535)<<16)&4294967295,l=27492+(65535&s)+((58964+(s>>>16)&65535)<<16);switch(i=0,r){case 3:i^=(255&n.charCodeAt(u+2))<<16;case 2:i^=(255&n.charCodeAt(u+1))<<8;case 1:i^=255&n.charCodeAt(u),i=(65535&i)*h+(((i>>>16)*h&65535)<<16)&4294967295,i=i<<15|i>>>17,i=(65535&i)*c+(((i>>>16)*c&65535)<<16)&4294967295,l^=i}return l^=n.length,l^=l>>>16,l=2246822507*(65535&l)+((2246822507*(l>>>16)&65535)<<16)&4294967295,l^=l>>>13,l=3266489909*(65535&l)+((3266489909*(l>>>16)&65535)<<16)&4294967295,l^=l>>>16,l>>>0}class l{constructor(){this.count=0,this.hash=0}update(){for(let t=0;t<arguments.length;t++){const e=arguments[t];if(null!=e)if(Array.isArray(e))this.update.apply(this,e);else{let t=0;switch(typeof e){case\"undefined\":case\"function\":continue;case\"number\":case\"boolean\":t=e;break;case\"string\":t=a(e);break;default:e.updateHashCode?e.updateHashCode(this):console.log(\"No updateHashCode for \"+e.toString());continue}t*=3432918353,t=t<<15|t>>>17,t*=461845907,this.count=this.count+1;let n=this.hash^t;n=n<<13|n>>>19,n=5*n+3864292196,this.hash=n}}}finish(){let t=this.hash^4*this.count;return t^=t>>>16,t*=2246822507,t^=t>>>13,t*=3266489909,t^=t>>>16,t}static hashStuff(){const t=new l;return t.update.apply(t,arguments),t.finish()}}function h(t){return t?\"string\"==typeof t?a(t):t.hashCode():-1}function c(t,e){return t&&t.equals?t.equals(e):t===e}function u(t){return null===t?\"null\":t}function d(t){return Array.isArray(t)?\"[\"+t.map(u).join(\", \")+\"]\":\"null\"}class g{constructor(t,e){this.buckets=new Array(16),this.threshold=Math.floor(12),this.itemCount=0,this.hashFunction=t||h,this.equalsFunction=e||c}get(t){if(null==t)return t;const e=this._getBucket(t);if(!e)return null;for(const n of e)if(this.equalsFunction(n,t))return n;return null}add(t){return this.getOrAdd(t)===t}getOrAdd(t){this._expand();const e=this._getSlot(t);let n=this.buckets[e];if(!n)return n=[t],this.buckets[e]=n,this.itemCount++,t;for(const e of n)if(this.equalsFunction(e,t))return e;return n.push(t),this.itemCount++,t}has(t){return null!=this.get(t)}values(){return this.buckets.filter((t=>null!=t)).flat(1)}toString(){return d(this.values())}get length(){return this.itemCount}_getSlot(t){return this.hashFunction(t)&this.buckets.length-1}_getBucket(t){return this.buckets[this._getSlot(t)]}_expand(){if(this.itemCount<=this.threshold)return;const t=this.buckets,e=2*this.buckets.length;this.buckets=new Array(e),this.threshold=Math.floor(.75*e);for(const e of t)if(e)for(const t of e){const e=this._getSlot(t);let n=this.buckets[e];n||(n=[],this.buckets[e]=n),n.push(t)}}}class p{hashCode(){const t=new l;return this.updateHashCode(t),t.finish()}evaluate(t,e){}evalPrecedence(t,e){return this}static andContext(t,e){if(null===t||t===p.NONE)return e;if(null===e||e===p.NONE)return t;const n=new f(t,e);return 1===n.opnds.length?n.opnds[0]:n}static orContext(t,e){if(null===t)return e;if(null===e)return t;if(t===p.NONE||e===p.NONE)return p.NONE;const n=new x(t,e);return 1===n.opnds.length?n.opnds[0]:n}}class f extends p{constructor(t,e){super();const n=new g;t instanceof f?t.opnds.map((function(t){n.add(t)})):n.add(t),e instanceof f?e.opnds.map((function(t){n.add(t)})):n.add(e);const s=T(n);if(s.length>0){let t=null;s.map((function(e){(null===t||e.precedence<t.precedence)&&(t=e)})),n.add(t)}this.opnds=Array.from(n.values())}equals(t){return this===t||t instanceof f&&r(this.opnds,t.opnds)}updateHashCode(t){t.update(this.opnds,\"AND\")}evaluate(t,e){for(let n=0;n<this.opnds.length;n++)if(!this.opnds[n].evaluate(t,e))return!1;return!0}evalPrecedence(t,e){let n=!1;const s=[];for(let i=0;i<this.opnds.length;i++){const r=this.opnds[i],o=r.evalPrecedence(t,e);if(n|=o!==r,null===o)return null;o!==p.NONE&&s.push(o)}if(!n)return this;if(0===s.length)return p.NONE;let i=null;return s.map((function(t){i=null===i?t:p.andContext(i,t)})),i}toString(){const t=this.opnds.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join(\"&&\")}}class x extends p{constructor(t,e){super();const n=new g;t instanceof x?t.opnds.map((function(t){n.add(t)})):n.add(t),e instanceof x?e.opnds.map((function(t){n.add(t)})):n.add(e);const s=T(n);if(s.length>0){const t=s.sort((function(t,e){return t.compareTo(e)})),e=t[t.length-1];n.add(e)}this.opnds=Array.from(n.values())}equals(t){return this===t||t instanceof x&&r(this.opnds,t.opnds)}updateHashCode(t){t.update(this.opnds,\"OR\")}evaluate(t,e){for(let n=0;n<this.opnds.length;n++)if(this.opnds[n].evaluate(t,e))return!0;return!1}evalPrecedence(t,e){let n=!1;const s=[];for(let i=0;i<this.opnds.length;i++){const r=this.opnds[i],o=r.evalPrecedence(t,e);if(n|=o!==r,o===p.NONE)return p.NONE;null!==o&&s.push(o)}if(!n)return this;if(0===s.length)return null;return s.map((function(t){return t})),null}toString(){const t=this.opnds.map((t=>t.toString()));return(t.length>3?t.slice(3):t).join(\"||\")}}function T(t){const e=[];return t.values().map((function(t){t instanceof p.PrecedencePredicate&&e.push(t)})),e}function S(t,e){if(null===t){const t={state:null,alt:null,context:null,semanticContext:null};return e&&(t.reachesIntoOuterContext=0),t}{const n={};return n.state=t.state||null,n.alt=void 0===t.alt?null:t.alt,n.context=t.context||null,n.semanticContext=t.semanticContext||null,e&&(n.reachesIntoOuterContext=t.reachesIntoOuterContext||0,n.precedenceFilterSuppressed=t.precedenceFilterSuppressed||!1),n}}class m{constructor(t,e){this.checkContext(t,e),t=S(t),e=S(e,!0),this.state=null!==t.state?t.state:e.state,this.alt=null!==t.alt?t.alt:e.alt,this.context=null!==t.context?t.context:e.context,this.semanticContext=null!==t.semanticContext?t.semanticContext:null!==e.semanticContext?e.semanticContext:p.NONE,this.reachesIntoOuterContext=e.reachesIntoOuterContext,this.precedenceFilterSuppressed=e.precedenceFilterSuppressed}checkContext(t,e){null!==t.context&&void 0!==t.context||null!==e&&null!==e.context&&void 0!==e.context||(this.context=null)}hashCode(){const t=new l;return this.updateHashCode(t),t.finish()}updateHashCode(t){t.update(this.state.stateNumber,this.alt,this.context,this.semanticContext)}equals(t){return this===t||t instanceof m&&this.state.stateNumber===t.state.stateNumber&&this.alt===t.alt&&(null===this.context?null===t.context:this.context.equals(t.context))&&this.semanticContext.equals(t.semanticContext)&&this.precedenceFilterSuppressed===t.precedenceFilterSuppressed}hashCodeForConfigSet(){const t=new l;return t.update(this.state.stateNumber,this.alt,this.semanticContext),t.finish()}equalsForConfigSet(t){return this===t||t instanceof m&&this.state.stateNumber===t.state.stateNumber&&this.alt===t.alt&&this.semanticContext.equals(t.semanticContext)}toString(){return\"(\"+this.state+\",\"+this.alt+(null!==this.context?\",[\"+this.context.toString()+\"]\":\"\")+(this.semanticContext!==p.NONE?\",\"+this.semanticContext.toString():\"\")+(this.reachesIntoOuterContext>0?\",up=\"+this.reachesIntoOuterContext:\"\")+\")\"}}class E{constructor(t,e){this.start=t,this.stop=e}clone(){return new E(this.start,this.stop)}contains(t){return t>=this.start&&t<this.stop}toString(){return this.start===this.stop-1?this.start.toString():this.start.toString()+\"..\"+(this.stop-1).toString()}get length(){return this.stop-this.start}}E.INVALID_INTERVAL=new E(-1,-2);class _{constructor(){this.intervals=null,this.readOnly=!1}first(t){return null===this.intervals||0===this.intervals.length?i.INVALID_TYPE:this.intervals[0].start}addOne(t){this.addInterval(new E(t,t+1))}addRange(t,e){this.addInterval(new E(t,e+1))}addInterval(t){if(null===this.intervals)this.intervals=[],this.intervals.push(t.clone());else{for(let e=0;e<this.intervals.length;e++){const n=this.intervals[e];if(t.stop<n.start)return void this.intervals.splice(e,0,t);if(t.stop===n.start)return void(this.intervals[e]=new E(t.start,n.stop));if(t.start<=n.stop)return this.intervals[e]=new E(Math.min(n.start,t.start),Math.max(n.stop,t.stop)),void this.reduce(e)}this.intervals.push(t.clone())}}addSet(t){return null!==t.intervals&&t.intervals.forEach((t=>this.addInterval(t)),this),this}reduce(t){if(t<this.intervals.length-1){const e=this.intervals[t],n=this.intervals[t+1];e.stop>=n.stop?(this.intervals.splice(t+1,1),this.reduce(t)):e.stop>=n.start&&(this.intervals[t]=new E(e.start,n.stop),this.intervals.splice(t+1,1))}}complement(t,e){const n=new _;return n.addInterval(new E(t,e+1)),null!==this.intervals&&this.intervals.forEach((t=>n.removeRange(t))),n}contains(t){if(null===this.intervals)return!1;for(let e=0;e<this.intervals.length;e++)if(this.intervals[e].contains(t))return!0;return!1}removeRange(t){if(t.start===t.stop-1)this.removeOne(t.start);else if(null!==this.intervals){let e=0;for(let n=0;n<this.intervals.length;n++){const n=this.intervals[e];if(t.stop<=n.start)return;if(t.start>n.start&&t.stop<n.stop){this.intervals[e]=new E(n.start,t.start);const s=new E(t.stop,n.stop);return void this.intervals.splice(e,0,s)}t.start<=n.start&&t.stop>=n.stop?(this.intervals.splice(e,1),e-=1):t.start<n.stop?this.intervals[e]=new E(n.start,t.start):t.stop<n.stop&&(this.intervals[e]=new E(t.stop,n.stop)),e+=1}}}removeOne(t){if(null!==this.intervals)for(let e=0;e<this.intervals.length;e++){const n=this.intervals[e];if(t<n.start)return;if(t===n.start&&t===n.stop-1)return void this.intervals.splice(e,1);if(t===n.start)return void(this.intervals[e]=new E(n.start+1,n.stop));if(t===n.stop-1)return void(this.intervals[e]=new E(n.start,n.stop-1));if(t<n.stop-1){const s=new E(n.start,t);return n.start=t+1,void this.intervals.splice(e,0,s)}}}toString(t,e,n){return t=t||null,e=e||null,n=n||!1,null===this.intervals?\"{}\":null!==t||null!==e?this.toTokenString(t,e):n?this.toCharString():this.toIndexString()}toCharString(){const t=[];for(let e=0;e<this.intervals.length;e++){const n=this.intervals[e];n.stop===n.start+1?n.start===i.EOF?t.push(\"<EOF>\"):t.push(\"'\"+String.fromCharCode(n.start)+\"'\"):t.push(\"'\"+String.fromCharCode(n.start)+\"'..'\"+String.fromCharCode(n.stop-1)+\"'\")}return t.length>1?\"{\"+t.join(\", \")+\"}\":t[0]}toIndexString(){const t=[];for(let e=0;e<this.intervals.length;e++){const n=this.intervals[e];n.stop===n.start+1?n.start===i.EOF?t.push(\"<EOF>\"):t.push(n.start.toString()):t.push(n.start.toString()+\"..\"+(n.stop-1).toString())}return t.length>1?\"{\"+t.join(\", \")+\"}\":t[0]}toTokenString(t,e){const n=[];for(let s=0;s<this.intervals.length;s++){const i=this.intervals[s];for(let s=i.start;s<i.stop;s++)n.push(this.elementName(t,e,s))}return n.length>1?\"{\"+n.join(\", \")+\"}\":n[0]}elementName(t,e,n){return n===i.EOF?\"<EOF>\":n===i.EPSILON?\"<EPSILON>\":t[n]||e[n]}get length(){return this.intervals.map((t=>t.length)).reduce(((t,e)=>t+e))}}class C{constructor(){this.atn=null,this.stateNumber=C.INVALID_STATE_NUMBER,this.stateType=null,this.ruleIndex=0,this.epsilonOnlyTransitions=!1,this.transitions=[],this.nextTokenWithinRule=null}toString(){return this.stateNumber}equals(t){return t instanceof C&&this.stateNumber===t.stateNumber}isNonGreedyExitState(){return!1}addTransition(t,e){void 0===e&&(e=-1),0===this.transitions.length?this.epsilonOnlyTransitions=t.isEpsilon:this.epsilonOnlyTransitions!==t.isEpsilon&&(this.epsilonOnlyTransitions=!1),-1===e?this.transitions.push(t):this.transitions.splice(e,1,t)}}C.INVALID_TYPE=0,C.BASIC=1,C.RULE_START=2,C.BLOCK_START=3,C.PLUS_BLOCK_START=4,C.STAR_BLOCK_START=5,C.TOKEN_START=6,C.RULE_STOP=7,C.BLOCK_END=8,C.STAR_LOOP_BACK=9,C.STAR_LOOP_ENTRY=10,C.PLUS_LOOP_BACK=11,C.LOOP_END=12,C.serializationNames=[\"INVALID\",\"BASIC\",\"RULE_START\",\"BLOCK_START\",\"PLUS_BLOCK_START\",\"STAR_BLOCK_START\",\"TOKEN_START\",\"RULE_STOP\",\"BLOCK_END\",\"STAR_LOOP_BACK\",\"STAR_LOOP_ENTRY\",\"PLUS_LOOP_BACK\",\"LOOP_END\"],C.INVALID_STATE_NUMBER=-1;class A extends C{constructor(){return super(),this.stateType=C.RULE_STOP,this}}class N{constructor(t){if(null==t)throw\"target cannot be null.\";this.target=t,this.isEpsilon=!1,this.label=null}}N.EPSILON=1,N.RANGE=2,N.RULE=3,N.PREDICATE=4,N.ATOM=5,N.ACTION=6,N.SET=7,N.NOT_SET=8,N.WILDCARD=9,N.PRECEDENCE=10,N.serializationNames=[\"INVALID\",\"EPSILON\",\"RANGE\",\"RULE\",\"PREDICATE\",\"ATOM\",\"ACTION\",\"SET\",\"NOT_SET\",\"WILDCARD\",\"PRECEDENCE\"],N.serializationTypes={EpsilonTransition:N.EPSILON,RangeTransition:N.RANGE,RuleTransition:N.RULE,PredicateTransition:N.PREDICATE,AtomTransition:N.ATOM,ActionTransition:N.ACTION,SetTransition:N.SET,NotSetTransition:N.NOT_SET,WildcardTransition:N.WILDCARD,PrecedencePredicateTransition:N.PRECEDENCE};class k extends N{constructor(t,e,n,s){super(t),this.ruleIndex=e,this.precedence=n,this.followState=s,this.serializationType=N.RULE,this.isEpsilon=!0}matches(t,e,n){return!1}}class I extends N{constructor(t,e){super(t),this.serializationType=N.SET,null!=e?this.label=e:(this.label=new _,this.label.addOne(i.INVALID_TYPE))}matches(t,e,n){return this.label.contains(t)}toString(){return this.label.toString()}}class y extends I{constructor(t,e){super(t,e),this.serializationType=N.NOT_SET}matches(t,e,n){return t>=e&&t<=n&&!super.matches(t,e,n)}toString(){return\"~\"+super.toString()}}class L extends N{constructor(t){super(t),this.serializationType=N.WILDCARD}matches(t,e,n){return t>=e&&t<=n}toString(){return\".\"}}class O extends N{constructor(t){super(t)}}class R{}class w extends R{}class v extends w{}class P extends v{get ruleContext(){throw new Error(\"missing interface implementation\")}}class b extends v{}class D extends b{}const F={toStringTree:function(t,e,n){e=e||null,null!==(n=n||null)&&(e=n.ruleNames);let s=F.getNodeText(t,e);s=function(t){return t=t.replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\")}(s);const i=t.getChildCount();if(0===i)return s;let r=\"(\"+s+\" \";i>0&&(s=F.toStringTree(t.getChild(0),e),r=r.concat(s));for(let n=1;n<i;n++)s=F.toStringTree(t.getChild(n),e),r=r.concat(\" \"+s);return r=r.concat(\")\"),r},getNodeText:function(t,e,n){if(e=e||null,null!==(n=n||null)&&(e=n.ruleNames),null!==e){if(t instanceof P){const n=t.ruleContext.getAltNumber();return 0!=n?e[t.ruleIndex]+\":\"+n:e[t.ruleIndex]}if(t instanceof D)return t.toString();if(t instanceof b&&null!==t.symbol)return t.symbol.text}const s=t.getPayload();return s instanceof i?s.text:t.getPayload().toString()},getChildren:function(t){const e=[];for(let n=0;n<t.getChildCount();n++)e.push(t.getChild(n));return e},getAncestors:function(t){let e=[];for(t=t.getParent();null!==t;)e=[t].concat(e),t=t.getParent();return e},findAllTokenNodes:function(t,e){return F.findAllNodes(t,e,!0)},findAllRuleNodes:function(t,e){return F.findAllNodes(t,e,!1)},findAllNodes:function(t,e,n){const s=[];return F._findAllNodes(t,e,n,s),s},_findAllNodes:function(t,e,n,s){n&&t instanceof b?t.symbol.type===e&&s.push(t):!n&&t instanceof P&&t.ruleIndex===e&&s.push(t);for(let i=0;i<t.getChildCount();i++)F._findAllNodes(t.getChild(i),e,n,s)},descendants:function(t){let e=[t];for(let n=0;n<t.getChildCount();n++)e=e.concat(F.descendants(t.getChild(n)));return e}},M=F;class U extends P{constructor(t,e){super(),this.parentCtx=t||null,this.invokingState=e||-1}depth(){let t=0,e=this;for(;null!==e;)e=e.parentCtx,t+=1;return t}isEmpty(){return-1===this.invokingState}getSourceInterval(){return E.INVALID_INTERVAL}get ruleContext(){return this}getPayload(){return this}getText(){return 0===this.getChildCount()?\"\":this.children.map((function(t){return t.getText()})).join(\"\")}getAltNumber(){return 0}setAltNumber(t){}getChild(t){return null}getChildCount(){return 0}accept(t){return t.visitChildren(this)}toStringTree(t,e){return M.toStringTree(this,t,e)}toString(t,e){t=t||null,e=e||null;let n=this,s=\"[\";for(;null!==n&&n!==e;){if(null===t)n.isEmpty()||(s+=n.invokingState);else{const e=n.ruleIndex;s+=e>=0&&e<t.length?t[e]:\"\"+e}null===n.parentCtx||null===t&&n.parentCtx.isEmpty()||(s+=\" \"),n=n.parentCtx}return s+=\"]\",s}}class B{constructor(t){this.cachedHashCode=t}isEmpty(){return this===B.EMPTY}hasEmptyPath(){return this.getReturnState(this.length-1)===B.EMPTY_RETURN_STATE}hashCode(){return this.cachedHashCode}updateHashCode(t){t.update(this.cachedHashCode)}}B.EMPTY=null,B.EMPTY_RETURN_STATE=2147483647,B.globalNodeCount=1,B.id=B.globalNodeCount,B.trace_atn_sim=!1;class z extends B{constructor(t,e){const n=new l;return n.update(t,e),super(n.finish()),this.parents=t,this.returnStates=e,this}isEmpty(){return this.returnStates[0]===B.EMPTY_RETURN_STATE}getParent(t){return this.parents[t]}getReturnState(t){return this.returnStates[t]}equals(t){return this===t||t instanceof z&&this.hashCode()===t.hashCode()&&r(this.returnStates,t.returnStates)&&r(this.parents,t.parents)}toString(){if(this.isEmpty())return\"[]\";{let t=\"[\";for(let e=0;e<this.returnStates.length;e++)e>0&&(t+=\", \"),this.returnStates[e]!==B.EMPTY_RETURN_STATE?(t+=this.returnStates[e],null!==this.parents[e]?t=t+\" \"+this.parents[e]:t+=\"null\"):t+=\"$\";return t+\"]\"}}get length(){return this.returnStates.length}}class V extends B{constructor(t,e){let n=0;const s=new l;null!==t?s.update(t,e):s.update(1),n=s.finish(),super(n),this.parentCtx=t,this.returnState=e}getParent(t){return this.parentCtx}getReturnState(t){return this.returnState}equals(t){return this===t||t instanceof V&&this.hashCode()===t.hashCode()&&this.returnState===t.returnState&&(null==this.parentCtx?null==t.parentCtx:this.parentCtx.equals(t.parentCtx))}toString(){const t=null===this.parentCtx?\"\":this.parentCtx.toString();return 0===t.length?this.returnState===B.EMPTY_RETURN_STATE?\"$\":\"\"+this.returnState:this.returnState+\" \"+t}get length(){return 1}static create(t,e){return e===B.EMPTY_RETURN_STATE&&null===t?B.EMPTY:new V(t,e)}}class q extends V{constructor(){super(null,B.EMPTY_RETURN_STATE)}isEmpty(){return!0}getParent(t){return null}getReturnState(t){return this.returnState}equals(t){return this===t}toString(){return\"$\"}}B.EMPTY=new q;class H{constructor(t,e){this.buckets=new Array(16),this.threshold=Math.floor(12),this.itemCount=0,this.hashFunction=t||h,this.equalsFunction=e||c}set(t,e){this._expand();const n=this._getSlot(t);let s=this.buckets[n];if(!s)return s=[[t,e]],this.buckets[n]=s,this.itemCount++,e;const i=s.find((e=>this.equalsFunction(e[0],t)),this);if(i){const t=i[1];return i[1]=e,t}return s.push([t,e]),this.itemCount++,e}containsKey(t){const e=this._getBucket(t);return!!e&&!!e.find((e=>this.equalsFunction(e[0],t)),this)}get(t){const e=this._getBucket(t);if(!e)return null;const n=e.find((e=>this.equalsFunction(e[0],t)),this);return n?n[1]:null}entries(){return this.buckets.filter((t=>null!=t)).flat(1)}getKeys(){return this.entries().map((t=>t[0]))}getValues(){return this.entries().map((t=>t[1]))}toString(){return\"[\"+this.entries().map((t=>\"{\"+t[0]+\":\"+t[1]+\"}\")).join(\", \")+\"]\"}get length(){return this.itemCount}_getSlot(t){return this.hashFunction(t)&this.buckets.length-1}_getBucket(t){return this.buckets[this._getSlot(t)]}_expand(){if(this.itemCount<=this.threshold)return;const t=this.buckets,e=2*this.buckets.length;this.buckets=new Array(e),this.threshold=Math.floor(.75*e);for(const e of t)if(e)for(const t of e){const e=this._getSlot(t[0]);let n=this.buckets[e];n||(n=[],this.buckets[e]=n),n.push(t)}}}function K(t,e){if(null==e&&(e=U.EMPTY),null===e.parentCtx||e===U.EMPTY)return B.EMPTY;const n=K(t,e.parentCtx),s=t.states[e.invokingState].transitions[0];return V.create(n,s.followState.stateNumber)}function Y(t,e,n){if(t.isEmpty())return t;let s=n.get(t)||null;if(null!==s)return s;if(s=e.get(t),null!==s)return n.set(t,s),s;let i=!1,r=[];for(let s=0;s<r.length;s++){const o=Y(t.getParent(s),e,n);if(i||o!==t.getParent(s)){if(!i){r=[];for(let e=0;e<t.length;e++)r[e]=t.getParent(e);i=!0}r[s]=o}}if(!i)return e.add(t),n.set(t,t),t;let o=null;return o=0===r.length?B.EMPTY:1===r.length?V.create(r[0],t.getReturnState(0)):new z(r,t.returnStates),e.add(o),n.set(o,o),n.set(t,o),o}function G(t,e,n,s){if(t===e)return t;if(t instanceof V&&e instanceof V)return function(t,e,n,s){if(null!==s){let n=s.get(t,e);if(null!==n)return n;if(n=s.get(e,t),null!==n)return n}const i=function(t,e,n){if(n){if(t===B.EMPTY)return B.EMPTY;if(e===B.EMPTY)return B.EMPTY}else{if(t===B.EMPTY&&e===B.EMPTY)return B.EMPTY;if(t===B.EMPTY){const t=[e.returnState,B.EMPTY_RETURN_STATE],n=[e.parentCtx,null];return new z(n,t)}if(e===B.EMPTY){const e=[t.returnState,B.EMPTY_RETURN_STATE],n=[t.parentCtx,null];return new z(n,e)}}return null}(t,e,n);if(null!==i)return null!==s&&s.set(t,e,i),i;if(t.returnState===e.returnState){const i=G(t.parentCtx,e.parentCtx,n,s);if(i===t.parentCtx)return t;if(i===e.parentCtx)return e;const r=V.create(i,t.returnState);return null!==s&&s.set(t,e,r),r}{let n=null;if((t===e||null!==t.parentCtx&&t.parentCtx===e.parentCtx)&&(n=t.parentCtx),null!==n){const i=[t.returnState,e.returnState];t.returnState>e.returnState&&(i[0]=e.returnState,i[1]=t.returnState);const r=new z([n,n],i);return null!==s&&s.set(t,e,r),r}const i=[t.returnState,e.returnState];let r=[t.parentCtx,e.parentCtx];t.returnState>e.returnState&&(i[0]=e.returnState,i[1]=t.returnState,r=[e.parentCtx,t.parentCtx]);const o=new z(r,i);return null!==s&&s.set(t,e,o),o}}(t,e,n,s);if(n){if(t instanceof q)return t;if(e instanceof q)return e}return t instanceof V&&(t=new z([t.getParent()],[t.returnState])),e instanceof V&&(e=new z([e.getParent()],[e.returnState])),function(t,e,n,s){if(null!==s){let n=s.get(t,e);if(null!==n)return B.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> previous\"),n;if(n=s.get(e,t),null!==n)return B.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> previous\"),n}let i=0,r=0,o=0,a=new Array(t.returnStates.length+e.returnStates.length).fill(0),l=new Array(t.returnStates.length+e.returnStates.length).fill(null);for(;i<t.returnStates.length&&r<e.returnStates.length;){const h=t.parents[i],c=e.parents[r];if(t.returnStates[i]===e.returnStates[r]){const e=t.returnStates[i];e===B.EMPTY_RETURN_STATE&&null===h&&null===c||null!==h&&null!==c&&h===c?(l[o]=h,a[o]=e):(l[o]=G(h,c,n,s),a[o]=e),i+=1,r+=1}else t.returnStates[i]<e.returnStates[r]?(l[o]=h,a[o]=t.returnStates[i],i+=1):(l[o]=c,a[o]=e.returnStates[r],r+=1);o+=1}if(i<t.returnStates.length)for(let e=i;e<t.returnStates.length;e++)l[o]=t.parents[e],a[o]=t.returnStates[e],o+=1;else for(let t=r;t<e.returnStates.length;t++)l[o]=e.parents[t],a[o]=e.returnStates[t],o+=1;if(o<l.length){if(1===o){const n=V.create(l[0],a[0]);return null!==s&&s.set(t,e,n),n}l=l.slice(0,o),a=a.slice(0,o)}const h=new z(l,a);return h.equals(t)?(null!==s&&s.set(t,e,t),B.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> a\"),t):h.equals(e)?(null!==s&&s.set(t,e,e),B.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> b\"),e):(function(t){const e=new H;for(let n=0;n<t.length;n++){const s=t[n];e.containsKey(s)||e.set(s,s)}for(let n=0;n<t.length;n++)t[n]=e.get(t[n])}(l),null!==s&&s.set(t,e,h),B.trace_atn_sim&&console.log(\"mergeArrays a=\"+t+\",b=\"+e+\" -> \"+h),h)}(t,e,n,s)}class W{constructor(){this.data=new Uint32Array(1)}set(t){W._checkIndex(t),this._resize(t),this.data[t>>>5]|=1<<t%32}get(t){W._checkIndex(t);const e=t>>>5;return!(e>=this.data.length||!(this.data[e]&1<<t%32))}clear(t){W._checkIndex(t);const e=t>>>5;e<this.data.length&&(this.data[e]&=~(1<<t))}or(t){const e=Math.min(this.data.length,t.data.length);for(let n=0;n<e;++n)this.data[n]|=t.data[n];if(this.data.length<t.data.length){this._resize((t.data.length<<5)-1);const n=t.data.length;for(let s=e;s<n;++s)this.data[s]=t.data[s]}}values(){const t=new Array(this.length);let e=0;const n=this.data.length;for(let s=0;s<n;++s){let n=this.data[s];for(;0!==n;){const i=n&-n;t[e++]=(s<<5)+W._bitCount(i-1),n^=i}}return t}minValue(){for(let t=0;t<this.data.length;++t){let e=this.data[t];if(0!==e){let n=0;for(;!(1&e);)n++,e>>=1;return n+32*t}}return 0}hashCode(){return l.hashStuff(this.values())}equals(t){return t instanceof W&&r(this.data,t.data)}toString(){return\"{\"+this.values().join(\", \")+\"}\"}get length(){return this.data.map((t=>W._bitCount(t))).reduce(((t,e)=>t+e),0)}_resize(t){const e=t+32>>>5;if(e<=this.data.length)return;const n=new Uint32Array(e);n.set(this.data),n.fill(0,this.data.length),this.data=n}static _checkIndex(t){if(t<0)throw new RangeError(\"index cannot be negative\")}static _bitCount(t){return t=(t=(858993459&(t-=t>>1&1431655765))+(t>>2&858993459))+(t>>4)&252645135,t+=t>>8,0+(t+=t>>16)&63}}class j{constructor(t){this.atn=t}getDecisionLookahead(t){if(null===t)return null;const e=t.transitions.length,n=[];for(let s=0;s<e;s++){n[s]=new _;const e=new g,i=!1;this._LOOK(t.transition(s).target,null,B.EMPTY,n[s],e,new W,i,!1),(0===n[s].length||n[s].contains(j.HIT_PRED))&&(n[s]=null)}return n}LOOK(t,e,n){const s=new _,i=null!==(n=n||null)?K(t.atn,n):null;return this._LOOK(t,e,i,s,new g,new W,!0,!0),s}_LOOK(t,e,n,s,r,o,a,l){const h=new m({state:t,alt:0,context:n},null);if(!r.has(h)){if(r.add(h),t===e){if(null===n)return void s.addOne(i.EPSILON);if(n.isEmpty()&&l)return void s.addOne(i.EOF)}if(t instanceof A){if(null===n)return void s.addOne(i.EPSILON);if(n.isEmpty()&&l)return void s.addOne(i.EOF);if(n!==B.EMPTY){const i=o.get(t.ruleIndex);try{o.clear(t.ruleIndex);for(let t=0;t<n.length;t++){const i=this.atn.states[n.getReturnState(t)];this._LOOK(i,e,n.getParent(t),s,r,o,a,l)}}finally{i&&o.set(t.ruleIndex)}return}}for(let h=0;h<t.transitions.length;h++){const c=t.transitions[h];if(c.constructor===k){if(o.get(c.target.ruleIndex))continue;const t=V.create(n,c.followState.stateNumber);try{o.set(c.target.ruleIndex),this._LOOK(c.target,e,t,s,r,o,a,l)}finally{o.clear(c.target.ruleIndex)}}else if(c instanceof O)a?this._LOOK(c.target,e,n,s,r,o,a,l):s.addOne(j.HIT_PRED);else if(c.isEpsilon)this._LOOK(c.target,e,n,s,r,o,a,l);else if(c.constructor===L)s.addRange(i.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);else{let t=c.label;null!==t&&(c instanceof y&&(t=t.complement(i.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),s.addSet(t))}}}}}j.HIT_PRED=i.INVALID_TYPE;class ${constructor(t,e){this.grammarType=t,this.maxTokenType=e,this.states=[],this.decisionToState=[],this.ruleToStartState=[],this.ruleToStopState=null,this.modeNameToStartState={},this.ruleToTokenType=null,this.lexerActions=null,this.modeToStartState=[]}nextTokensInContext(t,e){return new j(this).LOOK(t,null,e)}nextTokensNoContext(t){return null!==t.nextTokenWithinRule||(t.nextTokenWithinRule=this.nextTokensInContext(t,null),t.nextTokenWithinRule.readOnly=!0),t.nextTokenWithinRule}nextTokens(t,e){return void 0===e?this.nextTokensNoContext(t):this.nextTokensInContext(t,e)}addState(t){null!==t&&(t.atn=this,t.stateNumber=this.states.length),this.states.push(t)}removeState(t){this.states[t.stateNumber]=null}defineDecisionState(t){return this.decisionToState.push(t),t.decision=this.decisionToState.length-1,t.decision}getDecisionState(t){return 0===this.decisionToState.length?null:this.decisionToState[t]}getExpectedTokens(t,e){if(t<0||t>=this.states.length)throw\"Invalid state number.\";const n=this.states[t];let s=this.nextTokens(n);if(!s.contains(i.EPSILON))return s;const r=new _;for(r.addSet(s),r.removeOne(i.EPSILON);null!==e&&e.invokingState>=0&&s.contains(i.EPSILON);){const t=this.states[e.invokingState].transitions[0];s=this.nextTokens(t.followState),r.addSet(s),r.removeOne(i.EPSILON),e=e.parentCtx}return s.contains(i.EPSILON)&&r.addOne(i.EOF),r}}$.INVALID_ALT_NUMBER=0;class X extends C{constructor(){super(),this.stateType=C.BASIC}}class J extends C{constructor(){return super(),this.decision=-1,this.nonGreedy=!1,this}}class Z extends J{constructor(){return super(),this.endState=null,this}}class Q extends C{constructor(){return super(),this.stateType=C.BLOCK_END,this.startState=null,this}}class tt extends C{constructor(){return super(),this.stateType=C.LOOP_END,this.loopBackState=null,this}}class et extends C{constructor(){return super(),this.stateType=C.RULE_START,this.stopState=null,this.isPrecedenceRule=!1,this}}class nt extends J{constructor(){return super(),this.stateType=C.TOKEN_START,this}}class st extends J{constructor(){return super(),this.stateType=C.PLUS_LOOP_BACK,this}}class it extends C{constructor(){return super(),this.stateType=C.STAR_LOOP_BACK,this}}class rt extends J{constructor(){return super(),this.stateType=C.STAR_LOOP_ENTRY,this.loopBackState=null,this.isPrecedenceDecision=null,this}}class ot extends Z{constructor(){return super(),this.stateType=C.PLUS_BLOCK_START,this.loopBackState=null,this}}class at extends Z{constructor(){return super(),this.stateType=C.STAR_BLOCK_START,this}}class lt extends Z{constructor(){return super(),this.stateType=C.BLOCK_START,this}}class ht extends N{constructor(t,e){super(t),this.label_=e,this.label=this.makeLabel(),this.serializationType=N.ATOM}makeLabel(){const t=new _;return t.addOne(this.label_),t}matches(t,e,n){return this.label_===t}toString(){return this.label_}}class ct extends N{constructor(t,e,n){super(t),this.serializationType=N.RANGE,this.start=e,this.stop=n,this.label=this.makeLabel()}makeLabel(){const t=new _;return t.addRange(this.start,this.stop),t}matches(t,e,n){return t>=this.start&&t<=this.stop}toString(){return\"'\"+String.fromCharCode(this.start)+\"'..'\"+String.fromCharCode(this.stop)+\"'\"}}class ut extends N{constructor(t,e,n,s){super(t),this.serializationType=N.ACTION,this.ruleIndex=e,this.actionIndex=void 0===n?-1:n,this.isCtxDependent=void 0!==s&&s,this.isEpsilon=!0}matches(t,e,n){return!1}toString(){return\"action_\"+this.ruleIndex+\":\"+this.actionIndex}}class dt extends N{constructor(t,e){super(t),this.serializationType=N.EPSILON,this.isEpsilon=!0,this.outermostPrecedenceReturn=e}matches(t,e,n){return!1}toString(){return\"epsilon\"}}class gt extends p{constructor(t,e,n){super(),this.ruleIndex=void 0===t?-1:t,this.predIndex=void 0===e?-1:e,this.isCtxDependent=void 0!==n&&n}evaluate(t,e){const n=this.isCtxDependent?e:null;return t.sempred(n,this.ruleIndex,this.predIndex)}updateHashCode(t){t.update(this.ruleIndex,this.predIndex,this.isCtxDependent)}equals(t){return this===t||t instanceof gt&&this.ruleIndex===t.ruleIndex&&this.predIndex===t.predIndex&&this.isCtxDependent===t.isCtxDependent}toString(){return\"{\"+this.ruleIndex+\":\"+this.predIndex+\"}?\"}}p.NONE=new gt;class pt extends O{constructor(t,e,n,s){super(t),this.serializationType=N.PREDICATE,this.ruleIndex=e,this.predIndex=n,this.isCtxDependent=s,this.isEpsilon=!0}matches(t,e,n){return!1}getPredicate(){return new gt(this.ruleIndex,this.predIndex,this.isCtxDependent)}toString(){return\"pred_\"+this.ruleIndex+\":\"+this.predIndex}}class ft extends p{constructor(t){super(),this.precedence=void 0===t?0:t}evaluate(t,e){return t.precpred(e,this.precedence)}evalPrecedence(t,e){return t.precpred(e,this.precedence)?p.NONE:null}compareTo(t){return this.precedence-t.precedence}updateHashCode(t){t.update(this.precedence)}equals(t){return this===t||t instanceof ft&&this.precedence===t.precedence}toString(){return\"{\"+this.precedence+\">=prec}?\"}}p.PrecedencePredicate=ft;class xt extends O{constructor(t,e){super(t),this.serializationType=N.PRECEDENCE,this.precedence=e,this.isEpsilon=!0}matches(t,e,n){return!1}getPredicate(){return new ft(this.precedence)}toString(){return this.precedence+\" >= _p\"}}class Tt{constructor(t){void 0===t&&(t=null),this.readOnly=!1,this.verifyATN=null===t||t.verifyATN,this.generateRuleBypassTransitions=null!==t&&t.generateRuleBypassTransitions}}Tt.defaultOptions=new Tt,Tt.defaultOptions.readOnly=!0;class St{constructor(t){this.actionType=t,this.isPositionDependent=!1}hashCode(){const t=new l;return this.updateHashCode(t),t.finish()}updateHashCode(t){t.update(this.actionType)}equals(t){return this===t}}class mt extends St{constructor(){super(6)}execute(t){t.skip()}toString(){return\"skip\"}}mt.INSTANCE=new mt;class Et extends St{constructor(t){super(0),this.channel=t}execute(t){t._channel=this.channel}updateHashCode(t){t.update(this.actionType,this.channel)}equals(t){return this===t||t instanceof Et&&this.channel===t.channel}toString(){return\"channel(\"+this.channel+\")\"}}class _t extends St{constructor(t,e){super(1),this.ruleIndex=t,this.actionIndex=e,this.isPositionDependent=!0}execute(t){t.action(null,this.ruleIndex,this.actionIndex)}updateHashCode(t){t.update(this.actionType,this.ruleIndex,this.actionIndex)}equals(t){return this===t||t instanceof _t&&this.ruleIndex===t.ruleIndex&&this.actionIndex===t.actionIndex}}class Ct extends St{constructor(){super(3)}execute(t){t.more()}toString(){return\"more\"}}Ct.INSTANCE=new Ct;class At extends St{constructor(t){super(7),this.type=t}execute(t){t.type=this.type}updateHashCode(t){t.update(this.actionType,this.type)}equals(t){return this===t||t instanceof At&&this.type===t.type}toString(){return\"type(\"+this.type+\")\"}}class Nt extends St{constructor(t){super(5),this.mode=t}execute(t){t.pushMode(this.mode)}updateHashCode(t){t.update(this.actionType,this.mode)}equals(t){return this===t||t instanceof Nt&&this.mode===t.mode}toString(){return\"pushMode(\"+this.mode+\")\"}}class kt extends St{constructor(){super(4)}execute(t){t.popMode()}toString(){return\"popMode\"}}kt.INSTANCE=new kt;class It extends St{constructor(t){super(2),this.mode=t}execute(t){t.setMode(this.mode)}updateHashCode(t){t.update(this.actionType,this.mode)}equals(t){return this===t||t instanceof It&&this.mode===t.mode}toString(){return\"mode(\"+this.mode+\")\"}}function yt(t,e){const n=[];return n[t-1]=e,n.map((function(t){return e}))}class Lt{constructor(t){null==t&&(t=Tt.defaultOptions),this.deserializationOptions=t,this.stateFactories=null,this.actionFactories=null}deserialize(t){const e=this.reset(t);this.checkVersion(e),e&&this.skipUUID();const n=this.readATN();this.readStates(n,e),this.readRules(n,e),this.readModes(n);const s=[];return this.readSets(n,s,this.readInt.bind(this)),e&&this.readSets(n,s,this.readInt32.bind(this)),this.readEdges(n,s),this.readDecisions(n),this.readLexerActions(n,e),this.markPrecedenceDecisions(n),this.verifyATN(n),this.deserializationOptions.generateRuleBypassTransitions&&1===n.grammarType&&(this.generateRuleBypassTransitions(n),this.verifyATN(n)),n}reset(t){if(3===(t.charCodeAt?t.charCodeAt(0):t[0])){const e=function(t){const e=t.charCodeAt(0);return e>1?e-2:e+65534},n=t.split(\"\").map(e);return n[0]=t.charCodeAt(0),this.data=n,this.pos=0,!0}return this.data=t,this.pos=0,!1}skipUUID(){let t=0;for(;t++<8;)this.readInt()}checkVersion(t){const e=this.readInt();if(!t&&4!==e)throw\"Could not deserialize ATN with version \"+e+\" (expected 4).\"}readATN(){const t=this.readInt(),e=this.readInt();return new $(t,e)}readStates(t,e){let n,s,i;const r=[],o=[],a=this.readInt();for(let n=0;n<a;n++){const n=this.readInt();if(n===C.INVALID_TYPE){t.addState(null);continue}let s=this.readInt();e&&65535===s&&(s=-1);const i=this.stateFactory(n,s);if(n===C.LOOP_END){const t=this.readInt();r.push([i,t])}else if(i instanceof Z){const t=this.readInt();o.push([i,t])}t.addState(i)}for(n=0;n<r.length;n++)s=r[n],s[0].loopBackState=t.states[s[1]];for(n=0;n<o.length;n++)s=o[n],s[0].endState=t.states[s[1]];let l=this.readInt();for(n=0;n<l;n++)i=this.readInt(),t.states[i].nonGreedy=!0;let h=this.readInt();for(n=0;n<h;n++)i=this.readInt(),t.states[i].isPrecedenceRule=!0}readRules(t,e){let n;const s=this.readInt();for(0===t.grammarType&&(t.ruleToTokenType=yt(s,0)),t.ruleToStartState=yt(s,0),n=0;n<s;n++){const s=this.readInt();if(t.ruleToStartState[n]=t.states[s],0===t.grammarType){let s=this.readInt();e&&65535===s&&(s=i.EOF),t.ruleToTokenType[n]=s}}for(t.ruleToStopState=yt(s,0),n=0;n<t.states.length;n++){const e=t.states[n];e instanceof A&&(t.ruleToStopState[e.ruleIndex]=e,t.ruleToStartState[e.ruleIndex].stopState=e)}}readModes(t){const e=this.readInt();for(let n=0;n<e;n++){let e=this.readInt();t.modeToStartState.push(t.states[e])}}readSets(t,e,n){const s=this.readInt();for(let t=0;t<s;t++){const t=new _;e.push(t);const s=this.readInt();0!==this.readInt()&&t.addOne(-1);for(let e=0;e<s;e++){const e=n(),s=n();t.addRange(e,s)}}}readEdges(t,e){let n,s,i,r,o;const a=this.readInt();for(n=0;n<a;n++){const n=this.readInt(),s=this.readInt(),i=this.readInt(),o=this.readInt(),a=this.readInt(),l=this.readInt();r=this.edgeFactory(t,i,n,s,o,a,l,e),t.states[n].addTransition(r)}for(n=0;n<t.states.length;n++)for(i=t.states[n],s=0;s<i.transitions.length;s++){const e=i.transitions[s];if(!(e instanceof k))continue;let n=-1;t.ruleToStartState[e.target.ruleIndex].isPrecedenceRule&&0===e.precedence&&(n=e.target.ruleIndex),r=new dt(e.followState,n),t.ruleToStopState[e.target.ruleIndex].addTransition(r)}for(n=0;n<t.states.length;n++){if(i=t.states[n],i instanceof Z){if(null===i.endState)throw\"IllegalState\";if(null!==i.endState.startState)throw\"IllegalState\";i.endState.startState=i}if(i instanceof st)for(s=0;s<i.transitions.length;s++)o=i.transitions[s].target,o instanceof ot&&(o.loopBackState=i);else if(i instanceof it)for(s=0;s<i.transitions.length;s++)o=i.transitions[s].target,o instanceof rt&&(o.loopBackState=i)}}readDecisions(t){const e=this.readInt();for(let n=0;n<e;n++){const e=this.readInt(),s=t.states[e];t.decisionToState.push(s),s.decision=n}}readLexerActions(t,e){if(0===t.grammarType){const n=this.readInt();t.lexerActions=yt(n,null);for(let s=0;s<n;s++){const n=this.readInt();let i=this.readInt();e&&65535===i&&(i=-1);let r=this.readInt();e&&65535===r&&(r=-1),t.lexerActions[s]=this.lexerActionFactory(n,i,r)}}}generateRuleBypassTransitions(t){let e;const n=t.ruleToStartState.length;for(e=0;e<n;e++)t.ruleToTokenType[e]=t.maxTokenType+e+1;for(e=0;e<n;e++)this.generateRuleBypassTransition(t,e)}generateRuleBypassTransition(t,e){let n,s;const i=new lt;i.ruleIndex=e,t.addState(i);const r=new Q;r.ruleIndex=e,t.addState(r),i.endState=r,t.defineDecisionState(i),r.startState=i;let o=null,a=null;if(t.ruleToStartState[e].isPrecedenceRule){for(a=null,n=0;n<t.states.length;n++)if(s=t.states[n],this.stateIsEndStateFor(s,e)){a=s,o=s.loopBackState.transitions[0];break}if(null===o)throw\"Couldn't identify final state of the precedence rule prefix section.\"}else a=t.ruleToStopState[e];for(n=0;n<t.states.length;n++){s=t.states[n];for(let t=0;t<s.transitions.length;t++){const e=s.transitions[t];e!==o&&e.target===a&&(e.target=r)}}const l=t.ruleToStartState[e],h=l.transitions.length;for(;h>0;)i.addTransition(l.transitions[h-1]),l.transitions=l.transitions.slice(-1);t.ruleToStartState[e].addTransition(new dt(i)),r.addTransition(new dt(a));const c=new X;t.addState(c),c.addTransition(new ht(r,t.ruleToTokenType[e])),i.addTransition(new dt(c))}stateIsEndStateFor(t,e){if(t.ruleIndex!==e)return null;if(!(t instanceof rt))return null;const n=t.transitions[t.transitions.length-1].target;return n instanceof tt&&n.epsilonOnlyTransitions&&n.transitions[0].target instanceof A?t:null}markPrecedenceDecisions(t){for(let e=0;e<t.states.length;e++){const n=t.states[e];if(n instanceof rt&&t.ruleToStartState[n.ruleIndex].isPrecedenceRule){const t=n.transitions[n.transitions.length-1].target;t instanceof tt&&t.epsilonOnlyTransitions&&t.transitions[0].target instanceof A&&(n.isPrecedenceDecision=!0)}}}verifyATN(t){if(this.deserializationOptions.verifyATN)for(let e=0;e<t.states.length;e++){const n=t.states[e];if(null!==n)if(this.checkCondition(n.epsilonOnlyTransitions||n.transitions.length<=1),n instanceof ot)this.checkCondition(null!==n.loopBackState);else if(n instanceof rt)if(this.checkCondition(null!==n.loopBackState),this.checkCondition(2===n.transitions.length),n.transitions[0].target instanceof at)this.checkCondition(n.transitions[1].target instanceof tt),this.checkCondition(!n.nonGreedy);else{if(!(n.transitions[0].target instanceof tt))throw\"IllegalState\";this.checkCondition(n.transitions[1].target instanceof at),this.checkCondition(n.nonGreedy)}else n instanceof it?(this.checkCondition(1===n.transitions.length),this.checkCondition(n.transitions[0].target instanceof rt)):n instanceof tt?this.checkCondition(null!==n.loopBackState):n instanceof et?this.checkCondition(null!==n.stopState):n instanceof Z?this.checkCondition(null!==n.endState):n instanceof Q?this.checkCondition(null!==n.startState):n instanceof J?this.checkCondition(n.transitions.length<=1||n.decision>=0):this.checkCondition(n.transitions.length<=1||n instanceof A)}}checkCondition(t,e){if(!t)throw null==e&&(e=\"IllegalState\"),e}readInt(){return this.data[this.pos++]}readInt32(){return this.readInt()|this.readInt()<<16}edgeFactory(t,e,n,s,r,o,a,l){const h=t.states[s];switch(e){case N.EPSILON:return new dt(h);case N.RANGE:return new ct(h,0!==a?i.EOF:r,o);case N.RULE:return new k(t.states[r],o,a,h);case N.PREDICATE:return new pt(h,r,o,0!==a);case N.PRECEDENCE:return new xt(h,r);case N.ATOM:return new ht(h,0!==a?i.EOF:r);case N.ACTION:return new ut(h,r,o,0!==a);case N.SET:return new I(h,l[r]);case N.NOT_SET:return new y(h,l[r]);case N.WILDCARD:return new L(h);default:throw\"The specified transition type: \"+e+\" is not valid.\"}}stateFactory(t,e){if(null===this.stateFactories){const t=[];t[C.INVALID_TYPE]=null,t[C.BASIC]=()=>new X,t[C.RULE_START]=()=>new et,t[C.BLOCK_START]=()=>new lt,t[C.PLUS_BLOCK_START]=()=>new ot,t[C.STAR_BLOCK_START]=()=>new at,t[C.TOKEN_START]=()=>new nt,t[C.RULE_STOP]=()=>new A,t[C.BLOCK_END]=()=>new Q,t[C.STAR_LOOP_BACK]=()=>new it,t[C.STAR_LOOP_ENTRY]=()=>new rt,t[C.PLUS_LOOP_BACK]=()=>new st,t[C.LOOP_END]=()=>new tt,this.stateFactories=t}if(t>this.stateFactories.length||null===this.stateFactories[t])throw\"The specified state type \"+t+\" is not valid.\";{const n=this.stateFactories[t]();if(null!==n)return n.ruleIndex=e,n}}lexerActionFactory(t,e,n){if(null===this.actionFactories){const t=[];t[0]=(t,e)=>new Et(t),t[1]=(t,e)=>new _t(t,e),t[2]=(t,e)=>new It(t),t[3]=(t,e)=>Ct.INSTANCE,t[4]=(t,e)=>kt.INSTANCE,t[5]=(t,e)=>new Nt(t),t[6]=(t,e)=>mt.INSTANCE,t[7]=(t,e)=>new At(t),this.actionFactories=t}if(t>this.actionFactories.length||null===this.actionFactories[t])throw\"The specified lexer action type \"+t+\" is not valid.\";return this.actionFactories[t](e,n)}}class Ot{syntaxError(t,e,n,s,i,r){}reportAmbiguity(t,e,n,s,i,r,o){}reportAttemptingFullContext(t,e,n,s,i,r){}reportContextSensitivity(t,e,n,s,i,r){}}class Rt extends Ot{constructor(){super()}syntaxError(t,e,n,s,i,r){console.error(\"line \"+n+\":\"+s+\" \"+i)}}Rt.INSTANCE=new Rt;class wt extends Ot{constructor(t){if(super(),null===t)throw\"delegates\";return this.delegates=t,this}syntaxError(t,e,n,s,i,r){this.delegates.map((o=>o.syntaxError(t,e,n,s,i,r)))}reportAmbiguity(t,e,n,s,i,r,o){this.delegates.map((a=>a.reportAmbiguity(t,e,n,s,i,r,o)))}reportAttemptingFullContext(t,e,n,s,i,r){this.delegates.map((o=>o.reportAttemptingFullContext(t,e,n,s,i,r)))}reportContextSensitivity(t,e,n,s,i,r){this.delegates.map((o=>o.reportContextSensitivity(t,e,n,s,i,r)))}}class vt{constructor(){this._listeners=[Rt.INSTANCE],this._interp=null,this._stateNumber=-1}checkVersion(t){const e=\"4.13.2\";e!==t&&console.log(\"ANTLR runtime and generated code versions disagree: \"+e+\"!=\"+t)}addErrorListener(t){this._listeners.push(t)}removeErrorListeners(){this._listeners=[]}getLiteralNames(){return Object.getPrototypeOf(this).constructor.literalNames||[]}getSymbolicNames(){return Object.getPrototypeOf(this).constructor.symbolicNames||[]}getTokenNames(){if(!this.tokenNames){const t=this.getLiteralNames(),e=this.getSymbolicNames(),n=t.length>e.length?t.length:e.length;this.tokenNames=[];for(let s=0;s<n;s++)this.tokenNames[s]=t[s]||e[s]||\"<INVALID\"}return this.tokenNames}getTokenTypeMap(){const t=this.getTokenNames();if(null===t)throw\"The current recognizer does not provide a list of token names.\";let e=this.tokenTypeMapCache[t];return void 0===e&&(e=t.reduce((function(t,e,n){t[e]=n})),e.EOF=i.EOF,this.tokenTypeMapCache[t]=e),e}getRuleIndexMap(){const t=this.ruleNames;if(null===t)throw\"The current recognizer does not provide a list of rule names.\";let e=this.ruleIndexMapCache[t];return void 0===e&&(e=t.reduce((function(t,e,n){t[e]=n})),this.ruleIndexMapCache[t]=e),e}getTokenType(t){const e=this.getTokenTypeMap()[t];return void 0!==e?e:i.INVALID_TYPE}getErrorHeader(t){return\"line \"+t.getOffendingToken().line+\":\"+t.getOffendingToken().column}getTokenErrorDisplay(t){if(null===t)return\"<no token>\";let e=t.text;return null===e&&(e=t.type===i.EOF?\"<EOF>\":\"<\"+t.type+\">\"),e=e.replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace(\"\\t\",\"\\\\t\"),\"'\"+e+\"'\"}getErrorListenerDispatch(){return console.warn(\"Calling deprecated method in Recognizer class: getErrorListenerDispatch()\"),this.getErrorListener()}getErrorListener(){return new wt(this._listeners)}sempred(t,e,n){return!0}precpred(t,e){return!0}get atn(){return this._interp.atn}get state(){return this._stateNumber}set state(t){this._stateNumber=t}}vt.tokenTypeMapCache={},vt.ruleIndexMapCache={};class Pt extends i{constructor(t,e,n,s,r){super(),this.source=void 0!==t?t:Pt.EMPTY_SOURCE,this.type=void 0!==e?e:null,this.channel=void 0!==n?n:i.DEFAULT_CHANNEL,this.start=void 0!==s?s:-1,this.stop=void 0!==r?r:-1,this.tokenIndex=-1,null!==this.source[0]?(this.line=t[0].line,this.column=t[0].column):this.column=-1}clone(){const t=new Pt(this.source,this.type,this.channel,this.start,this.stop);return t.tokenIndex=this.tokenIndex,t.line=this.line,t.column=this.column,t.text=this.text,t}cloneWithType(t){const e=new Pt(this.source,t,this.channel,this.start,this.stop);return e.tokenIndex=this.tokenIndex,e.line=this.line,e.column=this.column,t===i.EOF&&(e.text=\"\"),e}toString(){let t=this.text;return t=null!==t?t.replace(/\\n/g,\"\\\\n\").replace(/\\r/g,\"\\\\r\").replace(/\\t/g,\"\\\\t\"):\"<no text>\",\"[@\"+this.tokenIndex+\",\"+this.start+\":\"+this.stop+\"='\"+t+\"',<\"+this.type+\">\"+(this.channel>0?\",channel=\"+this.channel:\"\")+\",\"+this.line+\":\"+this.column+\"]\"}get text(){if(null!==this._text)return this._text;const t=this.getInputStream();if(null===t)return null;const e=t.size;return this.start<e&&this.stop<e?t.getText(this.start,this.stop):\"<EOF>\"}set text(t){this._text=t}}Pt.EMPTY_SOURCE=[null,null];class bt{}class Dt extends bt{constructor(t){super(),this.copyText=void 0!==t&&t}create(t,e,n,s,i,r,o,a){const l=new Pt(t,e,s,i,r);return l.line=o,l.column=a,null!==n?l.text=n:this.copyText&&null!==t[1]&&(l.text=t[1].getText(i,r)),l}createThin(t,e){const n=new Pt(null,t);return n.text=e,n}}Dt.DEFAULT=new Dt;class Ft extends Error{constructor(t){super(t.message),Error.captureStackTrace&&Error.captureStackTrace(this,Ft),this.message=t.message,this.recognizer=t.recognizer,this.input=t.input,this.ctx=t.ctx,this.offendingToken=null,this.offendingState=-1,null!==this.recognizer&&(this.offendingState=this.recognizer.state)}getExpectedTokens(){return null!==this.recognizer?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null}toString(){return this.message}}class Mt extends Ft{constructor(t,e,n,s){super({message:\"\",recognizer:t,input:e,ctx:null}),this.startIndex=n,this.deadEndConfigs=s}toString(){let t=\"\";return this.startIndex>=0&&this.startIndex<this.input.size&&(t=this.input.getText(new E(this.startIndex,this.startIndex))),\"LexerNoViableAltException\"+t}}class Ut extends vt{constructor(t){super(),this._input=t,this._factory=Dt.DEFAULT,this._tokenFactorySourcePair=[this,t],this._interp=null,this._token=null,this._tokenStartCharIndex=-1,this._tokenStartLine=-1,this._tokenStartColumn=-1,this._hitEOF=!1,this._channel=i.DEFAULT_CHANNEL,this._type=i.INVALID_TYPE,this._modeStack=[],this._mode=Ut.DEFAULT_MODE,this._text=null}reset(){null!==this._input&&this._input.seek(0),this._token=null,this._type=i.INVALID_TYPE,this._channel=i.DEFAULT_CHANNEL,this._tokenStartCharIndex=-1,this._tokenStartColumn=-1,this._tokenStartLine=-1,this._text=null,this._hitEOF=!1,this._mode=Ut.DEFAULT_MODE,this._modeStack=[],this._interp.reset()}nextToken(){if(null===this._input)throw\"nextToken requires a non-null input stream.\";const t=this._input.mark();try{for(;;){if(this._hitEOF)return this.emitEOF(),this._token;this._token=null,this._channel=i.DEFAULT_CHANNEL,this._tokenStartCharIndex=this._input.index,this._tokenStartColumn=this._interp.column,this._tokenStartLine=this._interp.line,this._text=null;let t=!1;for(;;){this._type=i.INVALID_TYPE;let e=Ut.SKIP;try{e=this._interp.match(this._input,this._mode)}catch(t){if(!(t instanceof Ft))throw console.log(t.stack),t;this.notifyListeners(t),this.recover(t)}if(this._input.LA(1)===i.EOF&&(this._hitEOF=!0),this._type===i.INVALID_TYPE&&(this._type=e),this._type===Ut.SKIP){t=!0;break}if(this._type!==Ut.MORE)break}if(!t)return null===this._token&&this.emit(),this._token}}finally{this._input.release(t)}}skip(){this._type=Ut.SKIP}more(){this._type=Ut.MORE}mode(t){console.warn(\"Calling deprecated method in Lexer class: mode(...)\"),this.setMode(t)}setMode(t){this._mode=t}getMode(){return this._mode}getModeStack(){return this._modeStack}pushMode(t){this._interp.debug&&console.log(\"pushMode \"+t),this._modeStack.push(this._mode),this.setMode(t)}popMode(){if(0===this._modeStack.length)throw\"Empty Stack\";return this._interp.debug&&console.log(\"popMode back to \"+this._modeStack.slice(0,-1)),this.setMode(this._modeStack.pop()),this._mode}emitToken(t){this._token=t}emit(){const t=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.getCharIndex()-1,this._tokenStartLine,this._tokenStartColumn);return this.emitToken(t),t}emitEOF(){const t=this.column,e=this.line,n=this._factory.create(this._tokenFactorySourcePair,i.EOF,null,i.DEFAULT_CHANNEL,this._input.index,this._input.index-1,e,t);return this.emitToken(n),n}getCharIndex(){return this._input.index}getAllTokens(){const t=[];let e=this.nextToken();for(;e.type!==i.EOF;)t.push(e),e=this.nextToken();return t}notifyListeners(t){const e=this._tokenStartCharIndex,n=this._input.index,s=this._input.getText(e,n),i=\"token recognition error at: '\"+this.getErrorDisplay(s)+\"'\";this.getErrorListener().syntaxError(this,null,this._tokenStartLine,this._tokenStartColumn,i,t)}getErrorDisplay(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n]);return e.join(\"\")}getErrorDisplayForChar(t){return t.charCodeAt(0)===i.EOF?\"<EOF>\":\"\\n\"===t?\"\\\\n\":\"\\t\"===t?\"\\\\t\":\"\\r\"===t?\"\\\\r\":t}getCharErrorDisplay(t){return\"'\"+this.getErrorDisplayForChar(t)+\"'\"}recover(t){this._input.LA(1)!==i.EOF&&(t instanceof Mt?this._interp.consume(this._input):this._input.consume())}get inputStream(){return this._input}set inputStream(t){this._input=null,this._tokenFactorySourcePair=[this,this._input],this.reset(),this._input=t,this._tokenFactorySourcePair=[this,this._input]}get sourceName(){return this._input.sourceName}get type(){return this._type}set type(t){this._type=t}get line(){return this._interp.line}set line(t){this._interp.line=t}get column(){return this._interp.column}set column(t){this._interp.column=t}get text(){return null!==this._text?this._text:this._interp.getText(this._input)}set text(t){this._text=t}}function Bt(t){return t.hashCodeForConfigSet()}function zt(t,e){return t===e||null!==t&&null!==e&&t.equalsForConfigSet(e)}Ut.DEFAULT_MODE=0,Ut.MORE=-2,Ut.SKIP=-3,Ut.DEFAULT_TOKEN_CHANNEL=i.DEFAULT_CHANNEL,Ut.HIDDEN=i.HIDDEN_CHANNEL,Ut.MIN_CHAR_VALUE=0,Ut.MAX_CHAR_VALUE=1114111;class Vt{constructor(t){this.configLookup=new g(Bt,zt),this.fullCtx=void 0===t||t,this.readOnly=!1,this.configs=[],this.uniqueAlt=0,this.conflictingAlts=null,this.hasSemanticContext=!1,this.dipsIntoOuterContext=!1,this.cachedHashCode=-1}add(t,e){if(void 0===e&&(e=null),this.readOnly)throw\"This set is readonly\";t.semanticContext!==p.NONE&&(this.hasSemanticContext=!0),t.reachesIntoOuterContext>0&&(this.dipsIntoOuterContext=!0);const n=this.configLookup.getOrAdd(t);if(n===t)return this.cachedHashCode=-1,this.configs.push(t),!0;const s=!this.fullCtx,i=G(n.context,t.context,s,e);return n.reachesIntoOuterContext=Math.max(n.reachesIntoOuterContext,t.reachesIntoOuterContext),t.precedenceFilterSuppressed&&(n.precedenceFilterSuppressed=!0),n.context=i,!0}getStates(){const t=new g;for(let e=0;e<this.configs.length;e++)t.add(this.configs[e].state);return t}getPredicates(){const t=[];for(let e=0;e<this.configs.length;e++){const n=this.configs[e].semanticContext;n!==p.NONE&&t.push(n.semanticContext)}return t}optimizeConfigs(t){if(this.readOnly)throw\"This set is readonly\";if(0!==this.configLookup.length)for(let e=0;e<this.configs.length;e++){const n=this.configs[e];n.context=t.getCachedContext(n.context)}}addAll(t){for(let e=0;e<t.length;e++)this.add(t[e]);return!1}equals(t){return this===t||t instanceof Vt&&r(this.configs,t.configs)&&this.fullCtx===t.fullCtx&&this.uniqueAlt===t.uniqueAlt&&this.conflictingAlts===t.conflictingAlts&&this.hasSemanticContext===t.hasSemanticContext&&this.dipsIntoOuterContext===t.dipsIntoOuterContext}hashCode(){const t=new l;return t.update(this.configs),t.finish()}updateHashCode(t){this.readOnly?(-1===this.cachedHashCode&&(this.cachedHashCode=this.hashCode()),t.update(this.cachedHashCode)):t.update(this.hashCode())}isEmpty(){return 0===this.configs.length}contains(t){if(null===this.configLookup)throw\"This method is not implemented for readonly sets.\";return this.configLookup.contains(t)}containsFast(t){if(null===this.configLookup)throw\"This method is not implemented for readonly sets.\";return this.configLookup.containsFast(t)}clear(){if(this.readOnly)throw\"This set is readonly\";this.configs=[],this.cachedHashCode=-1,this.configLookup=new g}setReadonly(t){this.readOnly=t,t&&(this.configLookup=null)}toString(){return d(this.configs)+(this.hasSemanticContext?\",hasSemanticContext=\"+this.hasSemanticContext:\"\")+(this.uniqueAlt!==$.INVALID_ALT_NUMBER?\",uniqueAlt=\"+this.uniqueAlt:\"\")+(null!==this.conflictingAlts?\",conflictingAlts=\"+this.conflictingAlts:\"\")+(this.dipsIntoOuterContext?\",dipsIntoOuterContext\":\"\")}get items(){return this.configs}get length(){return this.configs.length}}class qt{constructor(t,e){return null===t&&(t=-1),null===e&&(e=new Vt),this.stateNumber=t,this.configs=e,this.edges=null,this.isAcceptState=!1,this.prediction=0,this.lexerActionExecutor=null,this.requiresFullContext=!1,this.predicates=null,this}getAltSet(){const t=new g;if(null!==this.configs)for(let e=0;e<this.configs.length;e++){const n=this.configs[e];t.add(n.alt)}return 0===t.length?null:t}equals(t){return this===t||t instanceof qt&&this.configs.equals(t.configs)}toString(){let t=this.stateNumber+\":\"+this.configs;return this.isAcceptState&&(t+=\"=>\",null!==this.predicates?t+=this.predicates:t+=this.prediction),t}hashCode(){const t=new l;return t.update(this.configs),t.finish()}}class Ht{constructor(t,e){return this.atn=t,this.sharedContextCache=e,this}getCachedContext(t){if(null===this.sharedContextCache)return t;const e=new H;return Y(t,this.sharedContextCache,e)}}Ht.ERROR=new qt(2147483647,new Vt);class Kt extends Vt{constructor(){super(),this.configLookup=new g}}class Yt extends m{constructor(t,e){super(t,e);const n=t.lexerActionExecutor||null;return this.lexerActionExecutor=n||(null!==e?e.lexerActionExecutor:null),this.passedThroughNonGreedyDecision=null!==e&&this.checkNonGreedyDecision(e,this.state),this.hashCodeForConfigSet=Yt.prototype.hashCode,this.equalsForConfigSet=Yt.prototype.equals,this}updateHashCode(t){t.update(this.state.stateNumber,this.alt,this.context,this.semanticContext,this.passedThroughNonGreedyDecision,this.lexerActionExecutor)}equals(t){return this===t||t instanceof Yt&&this.passedThroughNonGreedyDecision===t.passedThroughNonGreedyDecision&&(this.lexerActionExecutor?this.lexerActionExecutor.equals(t.lexerActionExecutor):!t.lexerActionExecutor)&&super.equals(t)}checkNonGreedyDecision(t,e){return t.passedThroughNonGreedyDecision||e instanceof J&&e.nonGreedy}}class Gt extends St{constructor(t,e){super(e.actionType),this.offset=t,this.action=e,this.isPositionDependent=!0}execute(t){this.action.execute(t)}updateHashCode(t){t.update(this.actionType,this.offset,this.action)}equals(t){return this===t||t instanceof Gt&&this.offset===t.offset&&this.action===t.action}}class Wt{constructor(t){return this.lexerActions=null===t?[]:t,this.cachedHashCode=l.hashStuff(t),this}fixOffsetBeforeMatch(t){let e=null;for(let n=0;n<this.lexerActions.length;n++)!this.lexerActions[n].isPositionDependent||this.lexerActions[n]instanceof Gt||(null===e&&(e=this.lexerActions.concat([])),e[n]=new Gt(t,this.lexerActions[n]));return null===e?this:new Wt(e)}execute(t,e,n){let s=!1;const i=e.index;try{for(let r=0;r<this.lexerActions.length;r++){let o=this.lexerActions[r];if(o instanceof Gt){const t=o.offset;e.seek(n+t),o=o.action,s=n+t!==i}else o.isPositionDependent&&(e.seek(i),s=!1);o.execute(t)}}finally{s&&e.seek(i)}}hashCode(){return this.cachedHashCode}updateHashCode(t){t.update(this.cachedHashCode)}equals(t){if(this===t)return!0;if(t instanceof Wt){if(this.cachedHashCode!=t.cachedHashCode)return!1;if(this.lexerActions.length!=t.lexerActions.length)return!1;{const e=this.lexerActions.length;for(let n=0;n<e;++n)if(!this.lexerActions[n].equals(t.lexerActions[n]))return!1;return!0}}return!1}static append(t,e){if(null===t)return new Wt([e]);const n=t.lexerActions.concat([e]);return new Wt(n)}}function jt(t){t.index=-1,t.line=0,t.column=-1,t.dfaState=null}class $t{constructor(){jt(this)}reset(){jt(this)}}class Xt extends Ht{constructor(t,e,n,s){super(e,s),this.decisionToDFA=n,this.recog=t,this.startIndex=-1,this.line=1,this.column=0,this.mode=Ut.DEFAULT_MODE,this.prevAccept=new $t}copyState(t){this.column=t.column,this.line=t.line,this.mode=t.mode,this.startIndex=t.startIndex}match(t,e){this.mode=e;const n=t.mark();try{this.startIndex=t.index,this.prevAccept.reset();const n=this.decisionToDFA[e];return null===n.s0?this.matchATN(t):this.execATN(t,n.s0)}finally{t.release(n)}}reset(){this.prevAccept.reset(),this.startIndex=-1,this.line=1,this.column=0,this.mode=Ut.DEFAULT_MODE}matchATN(t){const e=this.atn.modeToStartState[this.mode];Xt.debug&&console.log(\"matchATN mode \"+this.mode+\" start: \"+e);const n=this.mode,s=this.computeStartState(t,e),i=s.hasSemanticContext;s.hasSemanticContext=!1;const r=this.addDFAState(s);i||(this.decisionToDFA[this.mode].s0=r);const o=this.execATN(t,r);return Xt.debug&&console.log(\"DFA after matchATN: \"+this.decisionToDFA[n].toLexerString()),o}execATN(t,e){Xt.debug&&console.log(\"start state closure=\"+e.configs),e.isAcceptState&&this.captureSimState(this.prevAccept,t,e);let n=t.LA(1),s=e;for(;;){Xt.debug&&console.log(\"execATN loop starting closure: \"+s.configs);let e=this.getExistingTargetState(s,n);if(null===e&&(e=this.computeTargetState(t,s,n)),e===Ht.ERROR)break;if(n!==i.EOF&&this.consume(t),e.isAcceptState&&(this.captureSimState(this.prevAccept,t,e),n===i.EOF))break;n=t.LA(1),s=e}return this.failOrAccept(this.prevAccept,t,s.configs,n)}getExistingTargetState(t,e){if(null===t.edges||e<Xt.MIN_DFA_EDGE||e>Xt.MAX_DFA_EDGE)return null;let n=t.edges[e-Xt.MIN_DFA_EDGE];return void 0===n&&(n=null),Xt.debug&&null!==n&&console.log(\"reuse state \"+t.stateNumber+\" edge to \"+n.stateNumber),n}computeTargetState(t,e,n){const s=new Kt;return this.getReachableConfigSet(t,e.configs,s,n),0===s.items.length?(s.hasSemanticContext||this.addDFAEdge(e,n,Ht.ERROR),Ht.ERROR):this.addDFAEdge(e,n,null,s)}failOrAccept(t,e,n,s){if(null!==this.prevAccept.dfaState){const n=t.dfaState.lexerActionExecutor;return this.accept(e,n,this.startIndex,t.index,t.line,t.column),t.dfaState.prediction}if(s===i.EOF&&e.index===this.startIndex)return i.EOF;throw new Mt(this.recog,e,this.startIndex,n)}getReachableConfigSet(t,e,n,s){let r=$.INVALID_ALT_NUMBER;for(let o=0;o<e.items.length;o++){const a=e.items[o],l=a.alt===r;if(!l||!a.passedThroughNonGreedyDecision){Xt.debug&&console.log(\"testing %s at %s\\n\",this.getTokenName(s),a.toString(this.recog,!0));for(let e=0;e<a.state.transitions.length;e++){const o=a.state.transitions[e],h=this.getReachableTarget(o,s);if(null!==h){let e=a.lexerActionExecutor;null!==e&&(e=e.fixOffsetBeforeMatch(t.index-this.startIndex));const o=s===i.EOF,c=new Yt({state:h,lexerActionExecutor:e},a);this.closure(t,c,n,l,!0,o)&&(r=a.alt)}}}}}accept(t,e,n,s,i,r){Xt.debug&&console.log(\"ACTION %s\\n\",e),t.seek(s),this.line=i,this.column=r,null!==e&&null!==this.recog&&e.execute(this.recog,t,n)}getReachableTarget(t,e){return t.matches(e,0,Ut.MAX_CHAR_VALUE)?t.target:null}computeStartState(t,e){const n=B.EMPTY,s=new Kt;for(let i=0;i<e.transitions.length;i++){const r=e.transitions[i].target,o=new Yt({state:r,alt:i+1,context:n},null);this.closure(t,o,s,!1,!1,!1)}return s}closure(t,e,n,s,i,r){let o=null;if(Xt.debug&&console.log(\"closure(\"+e.toString(this.recog,!0)+\")\"),e.state instanceof A){if(Xt.debug&&(null!==this.recog?console.log(\"closure at %s rule stop %s\\n\",this.recog.ruleNames[e.state.ruleIndex],e):console.log(\"closure at rule stop %s\\n\",e)),null===e.context||e.context.hasEmptyPath()){if(null===e.context||e.context.isEmpty())return n.add(e),!0;n.add(new Yt({state:e.state,context:B.EMPTY},e)),s=!0}if(null!==e.context&&!e.context.isEmpty())for(let a=0;a<e.context.length;a++)if(e.context.getReturnState(a)!==B.EMPTY_RETURN_STATE){const l=e.context.getParent(a),h=this.atn.states[e.context.getReturnState(a)];o=new Yt({state:h,context:l},e),s=this.closure(t,o,n,s,i,r)}return s}e.state.epsilonOnlyTransitions||s&&e.passedThroughNonGreedyDecision||n.add(e);for(let a=0;a<e.state.transitions.length;a++){const l=e.state.transitions[a];o=this.getEpsilonTarget(t,e,l,n,i,r),null!==o&&(s=this.closure(t,o,n,s,i,r))}return s}getEpsilonTarget(t,e,n,s,r,o){let a=null;if(n.serializationType===N.RULE){const t=V.create(e.context,n.followState.stateNumber);a=new Yt({state:n.target,context:t},e)}else{if(n.serializationType===N.PRECEDENCE)throw\"Precedence predicates are not supported in lexers.\";if(n.serializationType===N.PREDICATE)Xt.debug&&console.log(\"EVAL rule \"+n.ruleIndex+\":\"+n.predIndex),s.hasSemanticContext=!0,this.evaluatePredicate(t,n.ruleIndex,n.predIndex,r)&&(a=new Yt({state:n.target},e));else if(n.serializationType===N.ACTION)if(null===e.context||e.context.hasEmptyPath()){const t=Wt.append(e.lexerActionExecutor,this.atn.lexerActions[n.actionIndex]);a=new Yt({state:n.target,lexerActionExecutor:t},e)}else a=new Yt({state:n.target},e);else n.serializationType===N.EPSILON?a=new Yt({state:n.target},e):n.serializationType!==N.ATOM&&n.serializationType!==N.RANGE&&n.serializationType!==N.SET||o&&n.matches(i.EOF,0,Ut.MAX_CHAR_VALUE)&&(a=new Yt({state:n.target},e))}return a}evaluatePredicate(t,e,n,s){if(null===this.recog)return!0;if(!s)return this.recog.sempred(null,e,n);const i=this.column,r=this.line,o=t.index,a=t.mark();try{return this.consume(t),this.recog.sempred(null,e,n)}finally{this.column=i,this.line=r,t.seek(o),t.release(a)}}captureSimState(t,e,n){t.index=e.index,t.line=this.line,t.column=this.column,t.dfaState=n}addDFAEdge(t,e,n,s){if(void 0===n&&(n=null),void 0===s&&(s=null),null===n&&null!==s){const t=s.hasSemanticContext;if(s.hasSemanticContext=!1,n=this.addDFAState(s),t)return n}return e<Xt.MIN_DFA_EDGE||e>Xt.MAX_DFA_EDGE||(Xt.debug&&console.log(\"EDGE \"+t+\" -> \"+n+\" upon \"+e),null===t.edges&&(t.edges=[]),t.edges[e-Xt.MIN_DFA_EDGE]=n),n}addDFAState(t){const e=new qt(null,t);let n=null;for(let e=0;e<t.items.length;e++){const s=t.items[e];if(s.state instanceof A){n=s;break}}null!==n&&(e.isAcceptState=!0,e.lexerActionExecutor=n.lexerActionExecutor,e.prediction=this.atn.ruleToTokenType[n.state.ruleIndex]);const s=this.decisionToDFA[this.mode],i=s.states.get(e);if(null!==i)return i;const r=e;return r.stateNumber=s.states.length,t.setReadonly(!0),r.configs=t,s.states.add(r),r}getDFA(t){return this.decisionToDFA[t]}getText(t){return t.getText(this.startIndex,t.index-1)}consume(t){t.LA(1)===\"\\n\".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,t.consume()}getTokenName(t){return-1===t?\"EOF\":\"'\"+String.fromCharCode(t)+\"'\"}}Xt.debug=!1,Xt.dfa_debug=!1,Xt.MIN_DFA_EDGE=0,Xt.MAX_DFA_EDGE=127;class Jt{constructor(t,e){this.alt=e,this.pred=t}toString(){return\"(\"+this.pred+\", \"+this.alt+\")\"}}class Zt{constructor(){this.data={}}get(t){return this.data[\"k-\"+t]||null}set(t,e){this.data[\"k-\"+t]=e}values(){return Object.keys(this.data).filter((t=>t.startsWith(\"k-\"))).map((t=>this.data[t]),this)}}const Qt={SLL:0,LL:1,LL_EXACT_AMBIG_DETECTION:2,hasSLLConflictTerminatingPrediction:function(t,e){if(Qt.allConfigsInRuleStopStates(e))return!0;if(t===Qt.SLL&&e.hasSemanticContext){const t=new Vt;for(let n=0;n<e.items.length;n++){let s=e.items[n];s=new m({semanticContext:p.NONE},s),t.add(s)}e=t}const n=Qt.getConflictingAltSubsets(e);return Qt.hasConflictingAltSet(n)&&!Qt.hasStateAssociatedWithOneAlt(e)},hasConfigInRuleStopState:function(t){for(let e=0;e<t.items.length;e++)if(t.items[e].state instanceof A)return!0;return!1},allConfigsInRuleStopStates:function(t){for(let e=0;e<t.items.length;e++)if(!(t.items[e].state instanceof A))return!1;return!0},resolvesToJustOneViableAlt:function(t){return Qt.getSingleViableAlt(t)},allSubsetsConflict:function(t){return!Qt.hasNonConflictingAltSet(t)},hasNonConflictingAltSet:function(t){for(let e=0;e<t.length;e++)if(1===t[e].length)return!0;return!1},hasConflictingAltSet:function(t){for(let e=0;e<t.length;e++)if(t[e].length>1)return!0;return!1},allSubsetsEqual:function(t){let e=null;for(let n=0;n<t.length;n++){const s=t[n];if(null===e)e=s;else if(s!==e)return!1}return!0},getUniqueAlt:function(t){const e=Qt.getAlts(t);return 1===e.length?e.minValue():$.INVALID_ALT_NUMBER},getAlts:function(t){const e=new W;return t.map((function(t){e.or(t)})),e},getConflictingAltSubsets:function(t){const e=new H;return e.hashFunction=function(t){l.hashStuff(t.state.stateNumber,t.context)},e.equalsFunction=function(t,e){return t.state.stateNumber===e.state.stateNumber&&t.context.equals(e.context)},t.items.map((function(t){let n=e.get(t);null===n&&(n=new W,e.set(t,n)),n.set(t.alt)})),e.getValues()},getStateToAltMap:function(t){const e=new Zt;return t.items.map((function(t){let n=e.get(t.state);null===n&&(n=new W,e.set(t.state,n)),n.set(t.alt)})),e},hasStateAssociatedWithOneAlt:function(t){const e=Qt.getStateToAltMap(t).values();for(let t=0;t<e.length;t++)if(1===e[t].length)return!0;return!1},getSingleViableAlt:function(t){let e=null;for(let n=0;n<t.length;n++){const s=t[n].minValue();if(null===e)e=s;else if(e!==s)return $.INVALID_ALT_NUMBER}return e}},te=Qt;class ee extends Ft{constructor(t,e,n,s,i,r){r=r||t._ctx,s=s||t.getCurrentToken(),n=n||t.getCurrentToken(),e=e||t.getInputStream(),super({message:\"\",recognizer:t,input:e,ctx:r}),this.deadEndConfigs=i,this.startToken=n,this.offendingToken=s}}class ne{constructor(t){this.defaultMapCtor=t||H,this.cacheMap=new this.defaultMapCtor}get(t,e){const n=this.cacheMap.get(t)||null;return null===n?null:n.get(e)||null}set(t,e,n){let s=this.cacheMap.get(t)||null;null===s&&(s=new this.defaultMapCtor,this.cacheMap.set(t,s)),s.set(e,n)}}class se extends Ht{constructor(t,e,n,s){super(e,s),this.parser=t,this.decisionToDFA=n,this.predictionMode=te.LL,this._input=null,this._startIndex=0,this._outerContext=null,this._dfa=null,this.mergeCache=null,this.debug=!1,this.debug_closure=!1,this.debug_add=!1,this.trace_atn_sim=!1,this.dfa_debug=!1,this.retry_debug=!1}reset(){}adaptivePredict(t,e,n){(this.debug||this.trace_atn_sim)&&console.log(\"adaptivePredict decision \"+e+\" exec LA(1)==\"+this.getLookaheadName(t)+\" line \"+t.LT(1).line+\":\"+t.LT(1).column),this._input=t,this._startIndex=t.index,this._outerContext=n;const s=this.decisionToDFA[e];this._dfa=s;const i=t.mark(),r=t.index;try{let e;if(e=s.precedenceDfa?s.getPrecedenceStartState(this.parser.getPrecedence()):s.s0,null===e){null===n&&(n=U.EMPTY),this.debug&&console.log(\"predictATN decision \"+s.decision+\" exec LA(1)==\"+this.getLookaheadName(t)+\", outerContext=\"+n.toString(this.parser.ruleNames));const i=!1;let r=this.computeStartState(s.atnStartState,U.EMPTY,i);s.precedenceDfa?(s.s0.configs=r,r=this.applyPrecedenceFilter(r),e=this.addDFAState(s,new qt(null,r)),s.setPrecedenceStartState(this.parser.getPrecedence(),e)):(e=this.addDFAState(s,new qt(null,r)),s.s0=e)}const i=this.execATN(s,e,t,r,n);return this.debug&&console.log(\"DFA after predictATN: \"+s.toString(this.parser.literalNames,this.parser.symbolicNames)),i}finally{this._dfa=null,this.mergeCache=null,t.seek(r),t.release(i)}}execATN(t,e,n,s,r){let o;(this.debug||this.trace_atn_sim)&&console.log(\"execATN decision \"+t.decision+\", DFA state \"+e+\", LA(1)==\"+this.getLookaheadName(n)+\" line \"+n.LT(1).line+\":\"+n.LT(1).column);let a=e;this.debug&&console.log(\"s0 = \"+e);let l=n.LA(1);for(;;){let e=this.getExistingTargetState(a,l);if(null===e&&(e=this.computeTargetState(t,a,l)),e===Ht.ERROR){const t=this.noViableAlt(n,r,a.configs,s);if(n.seek(s),o=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(a.configs,r),o!==$.INVALID_ALT_NUMBER)return o;throw t}if(e.requiresFullContext&&this.predictionMode!==te.SLL){let i=null;if(null!==e.predicates){this.debug&&console.log(\"DFA state has preds in DFA sim LL failover\");const t=n.index;if(t!==s&&n.seek(s),i=this.evalSemanticContext(e.predicates,r,!0),1===i.length)return this.debug&&console.log(\"Full LL avoided\"),i.minValue();t!==s&&n.seek(t)}this.dfa_debug&&console.log(\"ctx sensitive state \"+r+\" in \"+e);const a=!0,l=this.computeStartState(t.atnStartState,r,a);return this.reportAttemptingFullContext(t,i,e.configs,s,n.index),o=this.execATNWithFullContext(t,e,l,n,s,r),o}if(e.isAcceptState){if(null===e.predicates)return e.prediction;const i=n.index;n.seek(s);const o=this.evalSemanticContext(e.predicates,r,!0);if(0===o.length)throw this.noViableAlt(n,r,e.configs,s);return 1===o.length||this.reportAmbiguity(t,e,s,i,!1,o,e.configs),o.minValue()}a=e,l!==i.EOF&&(n.consume(),l=n.LA(1))}}getExistingTargetState(t,e){const n=t.edges;return null===n?null:n[e+1]||null}computeTargetState(t,e,n){const s=this.computeReachSet(e.configs,n,!1);if(null===s)return this.addDFAEdge(t,e,n,Ht.ERROR),Ht.ERROR;let i=new qt(null,s);const r=this.getUniqueAlt(s);if(this.debug){const t=te.getConflictingAltSubsets(s);console.log(\"SLL altSubSets=\"+d(t)+\", configs=\"+s+\", predict=\"+r+\", allSubsetsConflict=\"+te.allSubsetsConflict(t)+\", conflictingAlts=\"+this.getConflictingAlts(s))}return r!==$.INVALID_ALT_NUMBER?(i.isAcceptState=!0,i.configs.uniqueAlt=r,i.prediction=r):te.hasSLLConflictTerminatingPrediction(this.predictionMode,s)&&(i.configs.conflictingAlts=this.getConflictingAlts(s),i.requiresFullContext=!0,i.isAcceptState=!0,i.prediction=i.configs.conflictingAlts.minValue()),i.isAcceptState&&i.configs.hasSemanticContext&&(this.predicateDFAState(i,this.atn.getDecisionState(t.decision)),null!==i.predicates&&(i.prediction=$.INVALID_ALT_NUMBER)),i=this.addDFAEdge(t,e,n,i),i}predicateDFAState(t,e){const n=e.transitions.length,s=this.getConflictingAltsOrUniqueAlt(t.configs),i=this.getPredsForAmbigAlts(s,t.configs,n);null!==i?(t.predicates=this.getPredicatePredictions(s,i),t.prediction=$.INVALID_ALT_NUMBER):t.prediction=s.minValue()}execATNWithFullContext(t,e,n,s,r,o){(this.debug||this.trace_atn_sim)&&console.log(\"execATNWithFullContext \"+n);let a,l=!1,h=n;s.seek(r);let c=s.LA(1),u=-1;for(;;){if(a=this.computeReachSet(h,c,!0),null===a){const t=this.noViableAlt(s,o,h,r);s.seek(r);const e=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(h,o);if(e!==$.INVALID_ALT_NUMBER)return e;throw t}const t=te.getConflictingAltSubsets(a);if(this.debug&&console.log(\"LL altSubSets=\"+t+\", predict=\"+te.getUniqueAlt(t)+\", resolvesToJustOneViableAlt=\"+te.resolvesToJustOneViableAlt(t)),a.uniqueAlt=this.getUniqueAlt(a),a.uniqueAlt!==$.INVALID_ALT_NUMBER){u=a.uniqueAlt;break}if(this.predictionMode!==te.LL_EXACT_AMBIG_DETECTION){if(u=te.resolvesToJustOneViableAlt(t),u!==$.INVALID_ALT_NUMBER)break}else if(te.allSubsetsConflict(t)&&te.allSubsetsEqual(t)){l=!0,u=te.getSingleViableAlt(t);break}h=a,c!==i.EOF&&(s.consume(),c=s.LA(1))}return a.uniqueAlt!==$.INVALID_ALT_NUMBER?(this.reportContextSensitivity(t,u,a,r,s.index),u):(this.reportAmbiguity(t,e,r,s.index,l,null,a),u)}computeReachSet(t,e,n){this.debug&&console.log(\"in computeReachSet, starting closure: \"+t),null===this.mergeCache&&(this.mergeCache=new ne);const s=new Vt(n);let r=null;for(let o=0;o<t.items.length;o++){const a=t.items[o];if(this.debug&&console.log(\"testing \"+this.getTokenName(e)+\" at \"+a),a.state instanceof A)(n||e===i.EOF)&&(null===r&&(r=[]),r.push(a),this.debug_add&&console.log(\"added \"+a+\" to skippedStopStates\"));else for(let t=0;t<a.state.transitions.length;t++){const n=a.state.transitions[t],i=this.getReachableTarget(n,e);if(null!==i){const t=new m({state:i},a);s.add(t,this.mergeCache),this.debug_add&&console.log(\"added \"+t+\" to intermediate\")}}}let o=null;if(null===r&&e!==i.EOF&&(1===s.items.length||this.getUniqueAlt(s)!==$.INVALID_ALT_NUMBER)&&(o=s),null===o){o=new Vt(n);const t=new g,r=e===i.EOF;for(let e=0;e<s.items.length;e++)this.closure(s.items[e],o,t,!1,n,r)}if(e===i.EOF&&(o=this.removeAllConfigsNotInRuleStopState(o,o===s)),!(null===r||n&&te.hasConfigInRuleStopState(o)))for(let t=0;t<r.length;t++)o.add(r[t],this.mergeCache);return this.trace_atn_sim&&console.log(\"computeReachSet \"+t+\" -> \"+o),0===o.items.length?null:o}removeAllConfigsNotInRuleStopState(t,e){if(te.allConfigsInRuleStopStates(t))return t;const n=new Vt(t.fullCtx);for(let s=0;s<t.items.length;s++){const r=t.items[s];if(r.state instanceof A)n.add(r,this.mergeCache);else if(e&&r.state.epsilonOnlyTransitions&&this.atn.nextTokens(r.state).contains(i.EPSILON)){const t=this.atn.ruleToStopState[r.state.ruleIndex];n.add(new m({state:t},r),this.mergeCache)}}return n}computeStartState(t,e,n){const s=K(this.atn,e),i=new Vt(n);this.trace_atn_sim&&console.log(\"computeStartState from ATN state \"+t+\" initialContext=\"+s.toString(this.parser));for(let e=0;e<t.transitions.length;e++){const r=t.transitions[e].target,o=new m({state:r,alt:e+1,context:s},null),a=new g;this.closure(o,i,a,!0,n,!1)}return i}applyPrecedenceFilter(t){let e;const n=[],s=new Vt(t.fullCtx);for(let i=0;i<t.items.length;i++){if(e=t.items[i],1!==e.alt)continue;const r=e.semanticContext.evalPrecedence(this.parser,this._outerContext);null!==r&&(n[e.state.stateNumber]=e.context,r!==e.semanticContext?s.add(new m({semanticContext:r},e),this.mergeCache):s.add(e,this.mergeCache))}for(let i=0;i<t.items.length;i++)if(e=t.items[i],1!==e.alt){if(!e.precedenceFilterSuppressed){const t=n[e.state.stateNumber]||null;if(null!==t&&t.equals(e.context))continue}s.add(e,this.mergeCache)}return s}getReachableTarget(t,e){return t.matches(e,0,this.atn.maxTokenType)?t.target:null}getPredsForAmbigAlts(t,e,n){let s=[];for(let n=0;n<e.items.length;n++){const i=e.items[n];t.get(i.alt)&&(s[i.alt]=p.orContext(s[i.alt]||null,i.semanticContext))}let i=0;for(let t=1;t<n+1;t++){const e=s[t]||null;null===e?s[t]=p.NONE:e!==p.NONE&&(i+=1)}return 0===i&&(s=null),this.debug&&console.log(\"getPredsForAmbigAlts result \"+d(s)),s}getPredicatePredictions(t,e){const n=[];let s=!1;for(let i=1;i<e.length;i++){const r=e[i];null!==t&&t.get(i)&&n.push(new Jt(r,i)),r!==p.NONE&&(s=!0)}return s?n:null}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(t,e){const n=this.splitAccordingToSemanticValidity(t,e),s=n[0],i=n[1];let r=this.getAltThatFinishedDecisionEntryRule(s);return r!==$.INVALID_ALT_NUMBER||i.items.length>0&&(r=this.getAltThatFinishedDecisionEntryRule(i),r!==$.INVALID_ALT_NUMBER)?r:$.INVALID_ALT_NUMBER}getAltThatFinishedDecisionEntryRule(t){const e=[];for(let n=0;n<t.items.length;n++){const s=t.items[n];(s.reachesIntoOuterContext>0||s.state instanceof A&&s.context.hasEmptyPath())&&e.indexOf(s.alt)<0&&e.push(s.alt)}return 0===e.length?$.INVALID_ALT_NUMBER:Math.min.apply(null,e)}splitAccordingToSemanticValidity(t,e){const n=new Vt(t.fullCtx),s=new Vt(t.fullCtx);for(let i=0;i<t.items.length;i++){const r=t.items[i];r.semanticContext!==p.NONE?r.semanticContext.evaluate(this.parser,e)?n.add(r):s.add(r):n.add(r)}return[n,s]}evalSemanticContext(t,e,n){const s=new W;for(let i=0;i<t.length;i++){const r=t[i];if(r.pred===p.NONE){if(s.set(r.alt),!n)break;continue}const o=r.pred.evaluate(this.parser,e);if((this.debug||this.dfa_debug)&&console.log(\"eval pred \"+r+\"=\"+o),o&&((this.debug||this.dfa_debug)&&console.log(\"PREDICT \"+r.alt),s.set(r.alt),!n))break}return s}closure(t,e,n,s,i,r){this.closureCheckingStopState(t,e,n,s,i,0,r)}closureCheckingStopState(t,e,n,s,i,r,o){if((this.trace_atn_sim||this.debug_closure)&&console.log(\"closure(\"+t.toString(this.parser,!0)+\")\"),t.state instanceof A){if(!t.context.isEmpty()){for(let a=0;a<t.context.length;a++){if(t.context.getReturnState(a)===B.EMPTY_RETURN_STATE){if(i){e.add(new m({state:t.state,context:B.EMPTY},t),this.mergeCache);continue}this.debug&&console.log(\"FALLING off rule \"+this.getRuleName(t.state.ruleIndex)),this.closure_(t,e,n,s,i,r,o);continue}const l=this.atn.states[t.context.getReturnState(a)],h=t.context.getParent(a),c={state:l,alt:t.alt,context:h,semanticContext:t.semanticContext},u=new m(c,null);u.reachesIntoOuterContext=t.reachesIntoOuterContext,this.closureCheckingStopState(u,e,n,s,i,r-1,o)}return}if(i)return void e.add(t,this.mergeCache);this.debug&&console.log(\"FALLING off rule \"+this.getRuleName(t.state.ruleIndex))}this.closure_(t,e,n,s,i,r,o)}closure_(t,e,n,s,i,r,o){const a=t.state;a.epsilonOnlyTransitions||e.add(t,this.mergeCache);for(let l=0;l<a.transitions.length;l++){if(0===l&&this.canDropLoopEntryEdgeInLeftRecursiveRule(t))continue;const h=a.transitions[l],c=s&&!(h instanceof ut),u=this.getEpsilonTarget(t,h,c,0===r,i,o);if(null!==u){let s=r;if(t.state instanceof A){if(null!==this._dfa&&this._dfa.precedenceDfa&&h.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex&&(u.precedenceFilterSuppressed=!0),u.reachesIntoOuterContext+=1,n.getOrAdd(u)!==u)continue;e.dipsIntoOuterContext=!0,s-=1,this.debug&&console.log(\"dips into outer ctx: \"+u)}else{if(!h.isEpsilon&&n.getOrAdd(u)!==u)continue;h instanceof k&&s>=0&&(s+=1)}this.closureCheckingStopState(u,e,n,c,i,s,o)}}}canDropLoopEntryEdgeInLeftRecursiveRule(t){const e=t.state;if(e.stateType!==C.STAR_LOOP_ENTRY)return!1;if(e.stateType!==C.STAR_LOOP_ENTRY||!e.isPrecedenceDecision||t.context.isEmpty()||t.context.hasEmptyPath())return!1;const n=t.context.length;for(let s=0;s<n;s++)if(this.atn.states[t.context.getReturnState(s)].ruleIndex!==e.ruleIndex)return!1;const s=e.transitions[0].target.endState.stateNumber,i=this.atn.states[s];for(let s=0;s<n;s++){const n=t.context.getReturnState(s),r=this.atn.states[n];if(1!==r.transitions.length||!r.transitions[0].isEpsilon)return!1;const o=r.transitions[0].target;if(!(r.stateType===C.BLOCK_END&&o===e||r===i||o===i||o.stateType===C.BLOCK_END&&1===o.transitions.length&&o.transitions[0].isEpsilon&&o.transitions[0].target===e))return!1}return!0}getRuleName(t){return null!==this.parser&&t>=0?this.parser.ruleNames[t]:\"<rule \"+t+\">\"}getEpsilonTarget(t,e,n,s,r,o){switch(e.serializationType){case N.RULE:return this.ruleTransition(t,e);case N.PRECEDENCE:return this.precedenceTransition(t,e,n,s,r);case N.PREDICATE:return this.predTransition(t,e,n,s,r);case N.ACTION:return this.actionTransition(t,e);case N.EPSILON:return new m({state:e.target},t);case N.ATOM:case N.RANGE:case N.SET:return o&&e.matches(i.EOF,0,1)?new m({state:e.target},t):null;default:return null}}actionTransition(t,e){if(this.debug){const t=-1===e.actionIndex?65535:e.actionIndex;console.log(\"ACTION edge \"+e.ruleIndex+\":\"+t)}return new m({state:e.target},t)}precedenceTransition(t,e,n,s,i){this.debug&&(console.log(\"PRED (collectPredicates=\"+n+\") \"+e.precedence+\">=_p, ctx dependent=true\"),null!==this.parser&&console.log(\"context surrounding pred is \"+d(this.parser.getRuleInvocationStack())));let r=null;if(n&&s)if(i){const n=this._input.index;this._input.seek(this._startIndex);const s=e.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(n),s&&(r=new m({state:e.target},t))}else{const n=p.andContext(t.semanticContext,e.getPredicate());r=new m({state:e.target,semanticContext:n},t)}else r=new m({state:e.target},t);return this.debug&&console.log(\"config from pred transition=\"+r),r}predTransition(t,e,n,s,i){this.debug&&(console.log(\"PRED (collectPredicates=\"+n+\") \"+e.ruleIndex+\":\"+e.predIndex+\", ctx dependent=\"+e.isCtxDependent),null!==this.parser&&console.log(\"context surrounding pred is \"+d(this.parser.getRuleInvocationStack())));let r=null;if(n&&(e.isCtxDependent&&s||!e.isCtxDependent))if(i){const n=this._input.index;this._input.seek(this._startIndex);const s=e.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(n),s&&(r=new m({state:e.target},t))}else{const n=p.andContext(t.semanticContext,e.getPredicate());r=new m({state:e.target,semanticContext:n},t)}else r=new m({state:e.target},t);return this.debug&&console.log(\"config from pred transition=\"+r),r}ruleTransition(t,e){this.debug&&console.log(\"CALL rule \"+this.getRuleName(e.target.ruleIndex)+\", ctx=\"+t.context);const n=e.followState,s=V.create(t.context,n.stateNumber);return new m({state:e.target,context:s},t)}getConflictingAlts(t){const e=te.getConflictingAltSubsets(t);return te.getAlts(e)}getConflictingAltsOrUniqueAlt(t){let e=null;return t.uniqueAlt!==$.INVALID_ALT_NUMBER?(e=new W,e.set(t.uniqueAlt)):e=t.conflictingAlts,e}getTokenName(t){if(t===i.EOF)return\"EOF\";if(null!==this.parser&&null!==this.parser.literalNames){if(!(t>=this.parser.literalNames.length&&t>=this.parser.symbolicNames.length))return(this.parser.literalNames[t]||this.parser.symbolicNames[t])+\"<\"+t+\">\";console.log(t+\" ttype out of range: \"+this.parser.literalNames),console.log(\"\"+this.parser.getInputStream().getTokens())}return\"\"+t}getLookaheadName(t){return this.getTokenName(t.LA(1))}dumpDeadEndConfigs(t){console.log(\"dead end configs: \");const e=t.getDeadEndConfigs();for(let t=0;t<e.length;t++){const n=e[t];let s=\"no edges\";if(n.state.transitions.length>0){const t=n.state.transitions[0];t instanceof ht?s=\"Atom \"+this.getTokenName(t.label):t instanceof I&&(s=(t instanceof y?\"~\":\"\")+\"Set \"+t.set)}console.error(n.toString(this.parser,!0)+\":\"+s)}}noViableAlt(t,e,n,s){return new ee(this.parser,t,t.get(s),t.LT(1),n,e)}getUniqueAlt(t){let e=$.INVALID_ALT_NUMBER;for(let n=0;n<t.items.length;n++){const s=t.items[n];if(e===$.INVALID_ALT_NUMBER)e=s.alt;else if(s.alt!==e)return $.INVALID_ALT_NUMBER}return e}addDFAEdge(t,e,n,s){if(this.debug&&console.log(\"EDGE \"+e+\" -> \"+s+\" upon \"+this.getTokenName(n)),null===s)return null;if(s=this.addDFAState(t,s),null===e||n<-1||n>this.atn.maxTokenType)return s;if(null===e.edges&&(e.edges=[]),e.edges[n+1]=s,this.debug){const e=null===this.parser?null:this.parser.literalNames,n=null===this.parser?null:this.parser.symbolicNames;console.log(\"DFA=\\n\"+t.toString(e,n))}return s}addDFAState(t,e){if(e===Ht.ERROR)return e;const n=t.states.get(e);return null!==n?(this.trace_atn_sim&&console.log(\"addDFAState \"+e+\" exists\"),n):(e.stateNumber=t.states.length,e.configs.readOnly||(e.configs.optimizeConfigs(this),e.configs.setReadonly(!0)),this.trace_atn_sim&&console.log(\"addDFAState new \"+e),t.states.add(e),this.debug&&console.log(\"adding new DFA state: \"+e),e)}reportAttemptingFullContext(t,e,n,s,i){if(this.debug||this.retry_debug){const e=new E(s,i+1);console.log(\"reportAttemptingFullContext decision=\"+t.decision+\":\"+n+\", input=\"+this.parser.getTokenStream().getText(e))}null!==this.parser&&this.parser.getErrorListener().reportAttemptingFullContext(this.parser,t,s,i,e,n)}reportContextSensitivity(t,e,n,s,i){if(this.debug||this.retry_debug){const e=new E(s,i+1);console.log(\"reportContextSensitivity decision=\"+t.decision+\":\"+n+\", input=\"+this.parser.getTokenStream().getText(e))}null!==this.parser&&this.parser.getErrorListener().reportContextSensitivity(this.parser,t,s,i,e,n)}reportAmbiguity(t,e,n,s,i,r,o){if(this.debug||this.retry_debug){const t=new E(n,s+1);console.log(\"reportAmbiguity \"+r+\":\"+o+\", input=\"+this.parser.getTokenStream().getText(t))}null!==this.parser&&this.parser.getErrorListener().reportAmbiguity(this.parser,t,n,s,i,r,o)}}class ie{constructor(){this.cache=new H}add(t){if(t===B.EMPTY)return B.EMPTY;const e=this.cache.get(t)||null;return null!==e?e:(this.cache.set(t,t),t)}get(t){return this.cache.get(t)||null}get length(){return this.cache.length}}const re={ATN:$,ATNDeserializer:Lt,LexerATNSimulator:Xt,ParserATNSimulator:se,PredictionMode:te,PredictionContextCache:ie};class oe{constructor(t,e,n){this.dfa=t,this.literalNames=e||[],this.symbolicNames=n||[]}toString(){if(null===this.dfa.s0)return null;let t=\"\";const e=this.dfa.sortedStates();for(let n=0;n<e.length;n++){const s=e[n];if(null!==s.edges){const e=s.edges.length;for(let n=0;n<e;n++){const e=s.edges[n]||null;null!==e&&2147483647!==e.stateNumber&&(t=t.concat(this.getStateString(s)),t=t.concat(\"-\"),t=t.concat(this.getEdgeLabel(n)),t=t.concat(\"->\"),t=t.concat(this.getStateString(e)),t=t.concat(\"\\n\"))}}}return 0===t.length?null:t}getEdgeLabel(t){return 0===t?\"EOF\":null!==this.literalNames||null!==this.symbolicNames?this.literalNames[t-1]||this.symbolicNames[t-1]:String.fromCharCode(t-1)}getStateString(t){const e=(t.isAcceptState?\":\":\"\")+\"s\"+t.stateNumber+(t.requiresFullContext?\"^\":\"\");return t.isAcceptState?null!==t.predicates?e+\"=>\"+d(t.predicates):e+\"=>\"+t.prediction.toString():e}}class ae extends oe{constructor(t){super(t,null)}getEdgeLabel(t){return\"'\"+String.fromCharCode(t)+\"'\"}}class le{constructor(t,e){if(void 0===e&&(e=0),this.atnStartState=t,this.decision=e,this._states=new g,this.s0=null,this.precedenceDfa=!1,t instanceof rt&&t.isPrecedenceDecision){this.precedenceDfa=!0;const t=new qt(null,new Vt);t.edges=[],t.isAcceptState=!1,t.requiresFullContext=!1,this.s0=t}}getPrecedenceStartState(t){if(!this.precedenceDfa)throw\"Only precedence DFAs may contain a precedence start state.\";return t<0||t>=this.s0.edges.length?null:this.s0.edges[t]||null}setPrecedenceStartState(t,e){if(!this.precedenceDfa)throw\"Only precedence DFAs may contain a precedence start state.\";t<0||(this.s0.edges[t]=e)}setPrecedenceDfa(t){if(this.precedenceDfa!==t){if(this._states=new g,t){const t=new qt(null,new Vt);t.edges=[],t.isAcceptState=!1,t.requiresFullContext=!1,this.s0=t}else this.s0=null;this.precedenceDfa=t}}sortedStates(){return this._states.values().sort((function(t,e){return t.stateNumber-e.stateNumber}))}toString(t,e){return t=t||null,e=e||null,null===this.s0?\"\":new oe(this,t,e).toString()}toLexerString(){return null===this.s0?\"\":new ae(this).toString()}get states(){return this._states}}const he={DFA:le,DFASerializer:oe,LexerDFASerializer:ae,PredPrediction:Jt},ce={PredictionContext:B},ue={Interval:E,IntervalSet:_};class de{visitTerminal(t){}visitErrorNode(t){}enterEveryRule(t){}exitEveryRule(t){}}class ge{visit(t){return Array.isArray(t)?t.map((function(t){return t.accept(this)}),this):t.accept(this)}visitChildren(t){return t.children?this.visit(t.children):null}visitTerminal(t){}visitErrorNode(t){}}class pe{walk(t,e){if(e instanceof D||void 0!==e.isErrorNode&&e.isErrorNode())t.visitErrorNode(e);else if(e instanceof b)t.visitTerminal(e);else{this.enterRule(t,e);for(let n=0;n<e.getChildCount();n++){const s=e.getChild(n);this.walk(t,s)}this.exitRule(t,e)}}enterRule(t,e){const n=e.ruleContext;t.enterEveryRule(n),n.enterRule(t)}exitRule(t,e){const n=e.ruleContext;n.exitRule(t),t.exitEveryRule(n)}}pe.DEFAULT=new pe;const fe={Trees:M,RuleNode:P,ErrorNode:D,TerminalNode:b,ParseTreeListener:de,ParseTreeVisitor:ge,ParseTreeWalker:pe};class xe extends Ft{constructor(t){super({message:\"\",recognizer:t,input:t.getInputStream(),ctx:t._ctx}),this.offendingToken=t.getCurrentToken()}}class Te extends Ft{constructor(t,e,n){super({message:Se(e,n||null),recognizer:t,input:t.getInputStream(),ctx:t._ctx});const s=t._interp.atn.states[t.state].transitions[0];s instanceof pt?(this.ruleIndex=s.ruleIndex,this.predicateIndex=s.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=e,this.offendingToken=t.getCurrentToken()}}function Se(t,e){return null!==e?e:\"failed predicate: {\"+t+\"}?\"}class me extends Ot{constructor(t){super(),t=t||!0,this.exactOnly=t}reportAmbiguity(t,e,n,s,i,r,o){if(this.exactOnly&&!i)return;const a=\"reportAmbiguity d=\"+this.getDecisionDescription(t,e)+\": ambigAlts=\"+this.getConflictingAlts(r,o)+\", input='\"+t.getTokenStream().getText(new E(n,s))+\"'\";t.notifyErrorListeners(a)}reportAttemptingFullContext(t,e,n,s,i,r){const o=\"reportAttemptingFullContext d=\"+this.getDecisionDescription(t,e)+\", input='\"+t.getTokenStream().getText(new E(n,s))+\"'\";t.notifyErrorListeners(o)}reportContextSensitivity(t,e,n,s,i,r){const o=\"reportContextSensitivity d=\"+this.getDecisionDescription(t,e)+\", input='\"+t.getTokenStream().getText(new E(n,s))+\"'\";t.notifyErrorListeners(o)}getDecisionDescription(t,e){const n=e.decision,s=e.atnStartState.ruleIndex,i=t.ruleNames;if(s<0||s>=i.length)return\"\"+n;const r=i[s]||null;return null===r||0===r.length?\"\"+n:`${n} (${r})`}getConflictingAlts(t,e){if(null!==t)return t;const n=new W;for(let t=0;t<e.items.length;t++)n.set(e.items[t].alt);return`{${n.values().join(\", \")}}`}}class Ee extends Error{constructor(){super(),Error.captureStackTrace(this,Ee)}}class _e{reset(t){}recoverInline(t){}recover(t,e){}sync(t){}inErrorRecoveryMode(t){}reportError(t){}}class Ce extends _e{constructor(){super(),this.errorRecoveryMode=!1,this.lastErrorIndex=-1,this.lastErrorStates=null,this.nextTokensContext=null,this.nextTokenState=0}reset(t){this.endErrorCondition(t)}beginErrorCondition(t){this.errorRecoveryMode=!0}inErrorRecoveryMode(t){return this.errorRecoveryMode}endErrorCondition(t){this.errorRecoveryMode=!1,this.lastErrorStates=null,this.lastErrorIndex=-1}reportMatch(t){this.endErrorCondition(t)}reportError(t,e){this.inErrorRecoveryMode(t)||(this.beginErrorCondition(t),e instanceof ee?this.reportNoViableAlternative(t,e):e instanceof xe?this.reportInputMismatch(t,e):e instanceof Te?this.reportFailedPredicate(t,e):(console.log(\"unknown recognition error type: \"+e.constructor.name),console.log(e.stack),t.notifyErrorListeners(e.getOffendingToken(),e.getMessage(),e)))}recover(t,e){this.lastErrorIndex===t.getInputStream().index&&null!==this.lastErrorStates&&this.lastErrorStates.indexOf(t.state)>=0&&t.consume(),this.lastErrorIndex=t._input.index,null===this.lastErrorStates&&(this.lastErrorStates=[]),this.lastErrorStates.push(t.state);const n=this.getErrorRecoverySet(t);this.consumeUntil(t,n)}sync(t){if(this.inErrorRecoveryMode(t))return;const e=t._interp.atn.states[t.state],n=t.getTokenStream().LA(1),s=t.atn.nextTokens(e);if(s.contains(n))return this.nextTokensContext=null,void(this.nextTokenState=C.INVALID_STATE_NUMBER);if(s.contains(i.EPSILON))null===this.nextTokensContext&&(this.nextTokensContext=t._ctx,this.nextTokensState=t._stateNumber);else switch(e.stateType){case C.BLOCK_START:case C.STAR_BLOCK_START:case C.PLUS_BLOCK_START:case C.STAR_LOOP_ENTRY:if(null!==this.singleTokenDeletion(t))return;throw new xe(t);case C.PLUS_LOOP_BACK:case C.STAR_LOOP_BACK:{this.reportUnwantedToken(t);const e=new _;e.addSet(t.getExpectedTokens());const n=e.addSet(this.getErrorRecoverySet(t));this.consumeUntil(t,n)}}}reportNoViableAlternative(t,e){const n=t.getTokenStream();let s;s=null!==n?e.startToken.type===i.EOF?\"<EOF>\":n.getText(new E(e.startToken.tokenIndex,e.offendingToken.tokenIndex)):\"<unknown input>\";const r=\"no viable alternative at input \"+this.escapeWSAndQuote(s);t.notifyErrorListeners(r,e.offendingToken,e)}reportInputMismatch(t,e){const n=\"mismatched input \"+this.getTokenErrorDisplay(e.offendingToken)+\" expecting \"+e.getExpectedTokens().toString(t.literalNames,t.symbolicNames);t.notifyErrorListeners(n,e.offendingToken,e)}reportFailedPredicate(t,e){const n=\"rule \"+t.ruleNames[t._ctx.ruleIndex]+\" \"+e.message;t.notifyErrorListeners(n,e.offendingToken,e)}reportUnwantedToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),n=\"extraneous input \"+this.getTokenErrorDisplay(e)+\" expecting \"+this.getExpectedTokens(t).toString(t.literalNames,t.symbolicNames);t.notifyErrorListeners(n,e,null)}reportMissingToken(t){if(this.inErrorRecoveryMode(t))return;this.beginErrorCondition(t);const e=t.getCurrentToken(),n=\"missing \"+this.getExpectedTokens(t).toString(t.literalNames,t.symbolicNames)+\" at \"+this.getTokenErrorDisplay(e);t.notifyErrorListeners(n,e,null)}recoverInline(t){const e=this.singleTokenDeletion(t);if(null!==e)return t.consume(),e;if(this.singleTokenInsertion(t))return this.getMissingSymbol(t);throw new xe(t)}singleTokenInsertion(t){const e=t.getTokenStream().LA(1),n=t._interp.atn,s=n.states[t.state].transitions[0].target;return!!n.nextTokens(s,t._ctx).contains(e)&&(this.reportMissingToken(t),!0)}singleTokenDeletion(t){const e=t.getTokenStream().LA(2);if(this.getExpectedTokens(t).contains(e)){this.reportUnwantedToken(t),t.consume();const e=t.getCurrentToken();return this.reportMatch(t),e}return null}getMissingSymbol(t){const e=t.getCurrentToken(),n=this.getExpectedTokens(t).first();let s;s=n===i.EOF?\"<missing EOF>\":\"<missing \"+t.literalNames[n]+\">\";let r=e;const o=t.getTokenStream().LT(-1);return r.type===i.EOF&&null!==o&&(r=o),t.getTokenFactory().create(r.source,n,s,i.DEFAULT_CHANNEL,-1,-1,r.line,r.column)}getExpectedTokens(t){return t.getExpectedTokens()}getTokenErrorDisplay(t){if(null===t)return\"<no token>\";let e=t.text;return null===e&&(e=t.type===i.EOF?\"<EOF>\":\"<\"+t.type+\">\"),this.escapeWSAndQuote(e)}escapeWSAndQuote(t){return\"'\"+(t=(t=(t=t.replace(/\\n/g,\"\\\\n\")).replace(/\\r/g,\"\\\\r\")).replace(/\\t/g,\"\\\\t\"))+\"'\"}getErrorRecoverySet(t){const e=t._interp.atn;let n=t._ctx;const s=new _;for(;null!==n&&n.invokingState>=0;){const t=e.states[n.invokingState].transitions[0],i=e.nextTokens(t.followState);s.addSet(i),n=n.parentCtx}return s.removeOne(i.EPSILON),s}consumeUntil(t,e){let n=t.getTokenStream().LA(1);for(;n!==i.EOF&&!e.contains(n);)t.consume(),n=t.getTokenStream().LA(1)}}class Ae extends Ce{constructor(){super()}recover(t,e){let n=t._ctx;for(;null!==n;)n.exception=e,n=n.parentCtx;throw new Ee(e)}recoverInline(t){this.recover(t,new xe(t))}sync(t){}}const Ne={RecognitionException:Ft,NoViableAltException:ee,LexerNoViableAltException:Mt,InputMismatchException:xe,FailedPredicateException:Te,DiagnosticErrorListener:me,BailErrorStrategy:Ae,DefaultErrorStrategy:Ce,ErrorListener:Ot};class ke{constructor(t,e){if(this.name=\"<empty>\",this.strdata=t,this.decodeToUnicodeCodePoints=e||!1,this._index=0,this.data=[],this.decodeToUnicodeCodePoints)for(let t=0;t<this.strdata.length;){const e=this.strdata.codePointAt(t);this.data.push(e),t+=e<=65535?1:2}else{this.data=new Array(this.strdata.length);for(let t=0;t<this.strdata.length;t++)this.data[t]=this.strdata.charCodeAt(t)}this._size=this.data.length}reset(){this._index=0}consume(){if(this._index>=this._size)throw\"cannot consume EOF\";this._index+=1}LA(t){if(0===t)return 0;t<0&&(t+=1);const e=this._index+t-1;return e<0||e>=this._size?i.EOF:this.data[e]}LT(t){return this.LA(t)}mark(){return-1}release(t){}seek(t){t<=this._index?this._index=t:this._index=Math.min(t,this._size)}getText(t,e){if(e>=this._size&&(e=this._size-1),t>=this._size)return\"\";if(this.decodeToUnicodeCodePoints){let n=\"\";for(let s=t;s<=e;s++)n+=String.fromCodePoint(this.data[s]);return n}return this.strdata.slice(t,e+1)}toString(){return this.strdata}get index(){return this._index}get size(){return this._size}}class Ie extends ke{constructor(t,e){super(t,e)}}var ye=n(763);const Le=\"undefined\"!=typeof process&&null!=process.versions&&null!=process.versions.node;class Oe extends Ie{static fromPath(t,e,n){if(!Le)throw new Error(\"FileStream is only available when running in Node!\");ye.readFile(t,e,(function(t,e){let s=null;null!==e&&(s=new ke(e,!0)),n(t,s)}))}constructor(t,e,n){if(!Le)throw new Error(\"FileStream is only available when running in Node!\");super(ye.readFileSync(t,e||\"utf-8\"),n),this.fileName=t}}const Re={fromString:function(t){return new ke(t,!0)},fromBlob:function(t,e,n,s){const i=new window.FileReader;i.onload=function(t){const e=new ke(t.target.result,!0);n(e)},i.onerror=s,i.readAsText(t,e)},fromBuffer:function(t,e){return new ke(t.toString(e),!0)},fromPath:function(t,e,n){Oe.fromPath(t,e,n)},fromPathSync:function(t,e){return new Oe(t,e)}},we={arrayToString:d,stringToCharArray:function(t){let e=new Uint16Array(t.length);for(let n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}};class ve{}class Pe extends ve{constructor(t){super(),this.tokenSource=t,this.tokens=[],this.index=-1,this.fetchedEOF=!1}mark(){return 0}release(t){}reset(){this.seek(0)}seek(t){this.lazyInit(),this.index=this.adjustSeekIndex(t)}get size(){return this.tokens.length}get(t){return this.lazyInit(),this.tokens[t]}consume(){let t=!1;if(t=this.index>=0&&(this.fetchedEOF?this.index<this.tokens.length-1:this.index<this.tokens.length),!t&&this.LA(1)===i.EOF)throw\"cannot consume EOF\";this.sync(this.index+1)&&(this.index=this.adjustSeekIndex(this.index+1))}sync(t){const e=t-this.tokens.length+1;return!(e>0)||this.fetch(e)>=e}fetch(t){if(this.fetchedEOF)return 0;for(let e=0;e<t;e++){const t=this.tokenSource.nextToken();if(t.tokenIndex=this.tokens.length,this.tokens.push(t),t.type===i.EOF)return this.fetchedEOF=!0,e+1}return t}getTokens(t,e,n){if(void 0===n&&(n=null),t<0||e<0)return null;this.lazyInit();const s=[];e>=this.tokens.length&&(e=this.tokens.length-1);for(let r=t;r<e;r++){const t=this.tokens[r];if(t.type===i.EOF)break;(null===n||n.contains(t.type))&&s.push(t)}return s}LA(t){return this.LT(t).type}LB(t){return this.index-t<0?null:this.tokens[this.index-t]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);const e=this.index+t-1;return this.sync(e),e>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[e]}adjustSeekIndex(t){return t}lazyInit(){-1===this.index&&this.setup()}setup(){this.sync(0),this.index=this.adjustSeekIndex(0)}setTokenSource(t){this.tokenSource=t,this.tokens=[],this.index=-1,this.fetchedEOF=!1}nextTokenOnChannel(t,e){if(this.sync(t),t>=this.tokens.length)return-1;let n=this.tokens[t];for(;n.channel!==e;){if(n.type===i.EOF)return-1;t+=1,this.sync(t),n=this.tokens[t]}return t}previousTokenOnChannel(t,e){for(;t>=0&&this.tokens[t].channel!==e;)t-=1;return t}getHiddenTokensToRight(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw t+\" not in 0..\"+this.tokens.length-1;const n=this.nextTokenOnChannel(t+1,Ut.DEFAULT_TOKEN_CHANNEL),s=t+1,i=-1===n?this.tokens.length-1:n;return this.filterForChannel(s,i,e)}getHiddenTokensToLeft(t,e){if(void 0===e&&(e=-1),this.lazyInit(),t<0||t>=this.tokens.length)throw t+\" not in 0..\"+this.tokens.length-1;const n=this.previousTokenOnChannel(t-1,Ut.DEFAULT_TOKEN_CHANNEL);if(n===t-1)return null;const s=n+1,i=t-1;return this.filterForChannel(s,i,e)}filterForChannel(t,e,n){const s=[];for(let i=t;i<e+1;i++){const t=this.tokens[i];-1===n?t.channel!==Ut.DEFAULT_TOKEN_CHANNEL&&s.push(t):t.channel===n&&s.push(t)}return 0===s.length?null:s}getSourceName(){return this.tokenSource.getSourceName()}getText(t){this.lazyInit(),this.fill(),t||(t=new E(0,this.tokens.length-1));let e=t.start;e instanceof i&&(e=e.tokenIndex);let n=t.stop;if(n instanceof i&&(n=n.tokenIndex),null===e||null===n||e<0||n<0)return\"\";n>=this.tokens.length&&(n=this.tokens.length-1);let s=\"\";for(let t=e;t<n+1;t++){const e=this.tokens[t];if(e.type===i.EOF)break;s+=e.text}return s}fill(){for(this.lazyInit();1e3===this.fetch(1e3););}}Object.defineProperty(Pe,\"size\",{get:function(){return this.tokens.length}});class be extends Pe{constructor(t,e){super(t),this.channel=void 0===e?i.DEFAULT_CHANNEL:e}adjustSeekIndex(t){return this.nextTokenOnChannel(t,this.channel)}LB(t){if(0===t||this.index-t<0)return null;let e=this.index,n=1;for(;n<=t;)e=this.previousTokenOnChannel(e-1,this.channel),n+=1;return e<0?null:this.tokens[e]}LT(t){if(this.lazyInit(),0===t)return null;if(t<0)return this.LB(-t);let e=this.index,n=1;for(;n<t;)this.sync(e+1)&&(e=this.nextTokenOnChannel(e+1,this.channel)),n+=1;return this.tokens[e]}getNumberOfOnChannelTokens(){let t=0;this.fill();for(let e=0;e<this.tokens.length;e++){const n=this.tokens[e];if(n.channel===this.channel&&(t+=1),n.type===i.EOF)break}return t}}class De extends de{constructor(t){super(),this.parser=t}enterEveryRule(t){console.log(\"enter   \"+this.parser.ruleNames[t.ruleIndex]+\", LT(1)=\"+this.parser._input.LT(1).text)}visitTerminal(t){console.log(\"consume \"+t.symbol+\" rule \"+this.parser.ruleNames[this.parser._ctx.ruleIndex])}exitEveryRule(t){console.log(\"exit    \"+this.parser.ruleNames[t.ruleIndex]+\", LT(1)=\"+this.parser._input.LT(1).text)}}class Fe extends vt{constructor(t){super(),this._input=null,this._errHandler=new Ce,this._precedenceStack=[],this._precedenceStack.push(0),this._ctx=null,this.buildParseTrees=!0,this._tracer=null,this._parseListeners=null,this._syntaxErrors=0,this.setInputStream(t)}reset(){null!==this._input&&this._input.seek(0),this._errHandler.reset(this),this._ctx=null,this._syntaxErrors=0,this.setTrace(!1),this._precedenceStack=[],this._precedenceStack.push(0),null!==this._interp&&this._interp.reset()}match(t){let e=this.getCurrentToken();return e.type===t?(this._errHandler.reportMatch(this),this.consume()):(e=this._errHandler.recoverInline(this),this.buildParseTrees&&-1===e.tokenIndex&&this._ctx.addErrorNode(e)),e}matchWildcard(){let t=this.getCurrentToken();return t.type>0?(this._errHandler.reportMatch(this),this.consume()):(t=this._errHandler.recoverInline(this),this.buildParseTrees&&-1===t.tokenIndex&&this._ctx.addErrorNode(t)),t}getParseListeners(){return this._parseListeners||[]}addParseListener(t){if(null===t)throw\"listener\";null===this._parseListeners&&(this._parseListeners=[]),this._parseListeners.push(t)}removeParseListener(t){if(null!==this._parseListeners){const e=this._parseListeners.indexOf(t);e>=0&&this._parseListeners.splice(e,1),0===this._parseListeners.length&&(this._parseListeners=null)}}removeParseListeners(){this._parseListeners=null}triggerEnterRuleEvent(){if(null!==this._parseListeners){const t=this._ctx;this._parseListeners.forEach((function(e){e.enterEveryRule(t),t.enterRule(e)}))}}triggerExitRuleEvent(){if(null!==this._parseListeners){const t=this._ctx;this._parseListeners.slice(0).reverse().forEach((function(e){t.exitRule(e),e.exitEveryRule(t)}))}}getTokenFactory(){return this._input.tokenSource._factory}setTokenFactory(t){this._input.tokenSource._factory=t}getATNWithBypassAlts(){const t=this.getSerializedATN();if(null===t)throw\"The current parser does not support an ATN with bypass alternatives.\";let e=this.bypassAltsAtnCache[t];if(null===e){const n=new Tt;n.generateRuleBypassTransitions=!0,e=new Lt(n).deserialize(t),this.bypassAltsAtnCache[t]=e}return e}getInputStream(){return this.getTokenStream()}setInputStream(t){this.setTokenStream(t)}getTokenStream(){return this._input}setTokenStream(t){this._input=null,this.reset(),this._input=t}get syntaxErrorsCount(){return this._syntaxErrors}getCurrentToken(){return this._input.LT(1)}notifyErrorListeners(t,e,n){n=n||null,null===(e=e||null)&&(e=this.getCurrentToken()),this._syntaxErrors+=1;const s=e.line,i=e.column;this.getErrorListener().syntaxError(this,e,s,i,t,n)}consume(){const t=this.getCurrentToken();t.type!==i.EOF&&this.getInputStream().consume();const e=null!==this._parseListeners&&this._parseListeners.length>0;if(this.buildParseTrees||e){let n;n=this._errHandler.inErrorRecoveryMode(this)?this._ctx.addErrorNode(t):this._ctx.addTokenNode(t),n.invokingState=this.state,e&&this._parseListeners.forEach((function(t){n instanceof D||void 0!==n.isErrorNode&&n.isErrorNode()?t.visitErrorNode(n):n instanceof b&&t.visitTerminal(n)}))}return t}addContextToParseTree(){null!==this._ctx.parentCtx&&this._ctx.parentCtx.addChild(this._ctx)}enterRule(t,e,n){this.state=e,this._ctx=t,this._ctx.start=this._input.LT(1),this.buildParseTrees&&this.addContextToParseTree(),this.triggerEnterRuleEvent()}exitRule(){this._ctx.stop=this._input.LT(-1),this.triggerExitRuleEvent(),this.state=this._ctx.invokingState,this._ctx=this._ctx.parentCtx}enterOuterAlt(t,e){t.setAltNumber(e),this.buildParseTrees&&this._ctx!==t&&null!==this._ctx.parentCtx&&(this._ctx.parentCtx.removeLastChild(),this._ctx.parentCtx.addChild(t)),this._ctx=t}getPrecedence(){return 0===this._precedenceStack.length?-1:this._precedenceStack[this._precedenceStack.length-1]}enterRecursionRule(t,e,n,s){this.state=e,this._precedenceStack.push(s),this._ctx=t,this._ctx.start=this._input.LT(1),this.triggerEnterRuleEvent()}pushNewRecursionContext(t,e,n){const s=this._ctx;s.parentCtx=t,s.invokingState=e,s.stop=this._input.LT(-1),this._ctx=t,this._ctx.start=s.start,this.buildParseTrees&&this._ctx.addChild(s),this.triggerEnterRuleEvent()}unrollRecursionContexts(t){this._precedenceStack.pop(),this._ctx.stop=this._input.LT(-1);const e=this._ctx,n=this.getParseListeners();if(null!==n&&n.length>0)for(;this._ctx!==t;)this.triggerExitRuleEvent(),this._ctx=this._ctx.parentCtx;else this._ctx=t;e.parentCtx=t,this.buildParseTrees&&null!==t&&t.addChild(e)}getInvokingContext(t){let e=this._ctx;for(;null!==e;){if(e.ruleIndex===t)return e;e=e.parentCtx}return null}precpred(t,e){return e>=this._precedenceStack[this._precedenceStack.length-1]}inContext(t){return!1}isExpectedToken(t){const e=this._interp.atn;let n=this._ctx;const s=e.states[this.state];let r=e.nextTokens(s);if(r.contains(t))return!0;if(!r.contains(i.EPSILON))return!1;for(;null!==n&&n.invokingState>=0&&r.contains(i.EPSILON);){const s=e.states[n.invokingState].transitions[0];if(r=e.nextTokens(s.followState),r.contains(t))return!0;n=n.parentCtx}return!(!r.contains(i.EPSILON)||t!==i.EOF)}getExpectedTokens(){return this._interp.atn.getExpectedTokens(this.state,this._ctx)}getExpectedTokensWithinCurrentRule(){const t=this._interp.atn,e=t.states[this.state];return t.nextTokens(e)}getRuleIndex(t){const e=this.getRuleIndexMap()[t];return null!==e?e:-1}getRuleInvocationStack(t){null===(t=t||null)&&(t=this._ctx);const e=[];for(;null!==t;){const n=t.ruleIndex;n<0?e.push(\"n/a\"):e.push(this.ruleNames[n]),t=t.parentCtx}return e}getDFAStrings(){return this._interp.decisionToDFA.toString()}dumpDFA(){let t=!1;for(let e=0;e<this._interp.decisionToDFA.length;e++){const n=this._interp.decisionToDFA[e];n.states.length>0&&(t&&console.log(),this.printer.println(\"Decision \"+n.decision+\":\"),this.printer.print(n.toString(this.literalNames,this.symbolicNames)),t=!0)}}getSourceName(){return this._input.getSourceName()}setTrace(t){t?(null!==this._tracer&&this.removeParseListener(this._tracer),this._tracer=new De(this),this.addParseListener(this._tracer)):(this.removeParseListener(this._tracer),this._tracer=null)}}Fe.bypassAltsAtnCache={};class Me extends b{constructor(t){super(),this.parentCtx=null,this.symbol=t}getChild(t){return null}getSymbol(){return this.symbol}getParent(){return this.parentCtx}getPayload(){return this.symbol}getSourceInterval(){if(null===this.symbol)return E.INVALID_INTERVAL;const t=this.symbol.tokenIndex;return new E(t,t)}getChildCount(){return 0}accept(t){return t.visitTerminal(this)}getText(){return this.symbol.text}toString(){return this.symbol.type===i.EOF?\"<EOF>\":this.symbol.text}}class Ue extends Me{constructor(t){super(t)}isErrorNode(){return!0}accept(t){return t.visitErrorNode(this)}}class Be extends U{constructor(t,e){super(t,e),this.children=null,this.start=null,this.stop=null,this.exception=null}copyFrom(t){this.parentCtx=t.parentCtx,this.invokingState=t.invokingState,this.children=null,this.start=t.start,this.stop=t.stop,t.children&&(this.children=[],t.children.map((function(t){t instanceof Ue&&(this.children.push(t),t.parentCtx=this)}),this))}enterRule(t){}exitRule(t){}addChild(t){return null===this.children&&(this.children=[]),this.children.push(t),t}removeLastChild(){null!==this.children&&this.children.pop()}addTokenNode(t){const e=new Me(t);return this.addChild(e),e.parentCtx=this,e}addErrorNode(t){const e=new Ue(t);return this.addChild(e),e.parentCtx=this,e}getChild(t,e){if(e=e||null,null===this.children||t<0||t>=this.children.length)return null;if(null===e)return this.children[t];for(let n=0;n<this.children.length;n++){const s=this.children[n];if(s instanceof e){if(0===t)return s;t-=1}}return null}getToken(t,e){if(null===this.children||e<0||e>=this.children.length)return null;for(let n=0;n<this.children.length;n++){const s=this.children[n];if(s instanceof b&&s.symbol.type===t){if(0===e)return s;e-=1}}return null}getTokens(t){if(null===this.children)return[];{const e=[];for(let n=0;n<this.children.length;n++){const s=this.children[n];s instanceof b&&s.symbol.type===t&&e.push(s)}return e}}getTypedRuleContext(t,e){return this.getChild(e,t)}getTypedRuleContexts(t){if(null===this.children)return[];{const e=[];for(let n=0;n<this.children.length;n++){const s=this.children[n];s instanceof t&&e.push(s)}return e}}getChildCount(){return null===this.children?0:this.children.length}getSourceInterval(){return null===this.start||null===this.stop?E.INVALID_INTERVAL:new E(this.start.tokenIndex,this.stop.tokenIndex)}}U.EMPTY=new Be;class ze{static DEFAULT_PROGRAM_NAME=\"default\";constructor(t){this.tokens=t,this.programs=new Map}getTokenStream(){return this.tokens}insertAfter(t,e){let n,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ze.DEFAULT_PROGRAM_NAME;n=\"number\"==typeof t?t:t.tokenIndex;let i=this.getProgram(s),r=new He(this.tokens,n,i.length,e);i.push(r)}insertBefore(t,e){let n,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ze.DEFAULT_PROGRAM_NAME;n=\"number\"==typeof t?t:t.tokenIndex;const i=this.getProgram(s),r=new qe(this.tokens,n,i.length,e);i.push(r)}replaceSingle(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ze.DEFAULT_PROGRAM_NAME;this.replace(t,t,e,n)}replace(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ze.DEFAULT_PROGRAM_NAME;if(\"number\"!=typeof t&&(t=t.tokenIndex),\"number\"!=typeof e&&(e=e.tokenIndex),t>e||t<0||e<0||e>=this.tokens.size)throw new RangeError(`replace: range invalid: ${t}..${e}(size=${this.tokens.size})`);let i=this.getProgram(s),r=new Ke(this.tokens,t,e,i.length,n);i.push(r)}delete(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ze.DEFAULT_PROGRAM_NAME;void 0===e&&(e=t),this.replace(t,e,null,n)}getProgram(t){let e=this.programs.get(t);return null==e&&(e=this.initializeProgram(t)),e}initializeProgram(t){const e=[];return this.programs.set(t,e),e}getText(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ze.DEFAULT_PROGRAM_NAME;e=t instanceof E?t:new E(0,this.tokens.size-1),\"string\"==typeof t&&(n=t);const s=this.programs.get(n);let r=e.start,o=e.stop;if(o>this.tokens.size-1&&(o=this.tokens.size-1),r<0&&(r=0),null==s||0===s.length)return this.tokens.getText(new E(r,o));let a=[],l=this.reduceToSingleOperationPerIndex(s),h=r;for(;h<=o&&h<this.tokens.size;){let t=l.get(h);l.delete(h);let e=this.tokens.get(h);null==t?(e.type!==i.EOF&&a.push(String(e.text)),h++):h=t.execute(a)}if(o===this.tokens.size-1)for(const t of l.values())t.index>=this.tokens.size-1&&a.push(t.text.toString());return a.join(\"\")}reduceToSingleOperationPerIndex(t){for(let e=0;e<t.length;e++){let n=t[e];if(null==n)continue;if(!(n instanceof Ke))continue;let s=n,i=this.getKindOfOps(t,qe,e);for(let e of i)e.index===s.index?(t[e.instructionIndex]=void 0,s.text=e.text.toString()+(null!=s.text?s.text.toString():\"\")):e.index>s.index&&e.index<=s.lastIndex&&(t[e.instructionIndex]=void 0);let r=this.getKindOfOps(t,Ke,e);for(let e of r){if(e.index>=s.index&&e.lastIndex<=s.lastIndex){t[e.instructionIndex]=void 0;continue}let n=e.lastIndex<s.index||e.index>s.lastIndex;if(null!=e.text||null!=s.text||n){if(!n)throw new Error(`replace op boundaries of ${s} overlap with previous ${e}`)}else t[e.instructionIndex]=void 0,s.index=Math.min(e.index,s.index),s.lastIndex=Math.max(e.lastIndex,s.lastIndex)}}for(let e=0;e<t.length;e++){let n=t[e];if(null==n)continue;if(!(n instanceof qe))continue;let s=n,i=this.getKindOfOps(t,qe,e);for(let e of i)e.index===s.index&&(e instanceof He?(s.text=this.catOpText(e.text,s.text),t[e.instructionIndex]=void 0):e instanceof qe&&(s.text=this.catOpText(s.text,e.text),t[e.instructionIndex]=void 0));let r=this.getKindOfOps(t,Ke,e);for(let n of r)if(s.index!==n.index){if(s.index>=n.index&&s.index<=n.lastIndex)throw new Error(`insert op ${s} within boundaries of previous ${n}`)}else n.text=this.catOpText(s.text,n.text),t[e]=void 0}let e=new Map;for(let n of t)if(null!=n){if(null!=e.get(n.index))throw new Error(\"should only be one op per index\");e.set(n.index,n)}return e}catOpText(t,e){let n=\"\",s=\"\";return null!=t&&(n=t.toString()),null!=e&&(s=e.toString()),n+s}getKindOfOps(t,e,n){return t.slice(0,n).filter((t=>t&&t instanceof e))}}class Ve{constructor(t,e,n,s){this.tokens=t,this.instructionIndex=n,this.index=e,this.text=void 0===s?\"\":s}toString(){let t=this.constructor.name;const e=t.indexOf(\"$\");return t=t.substring(e+1,t.length),\"<\"+t+\"@\"+this.tokens.get(this.index)+':\"'+this.text+'\">'}}class qe extends Ve{constructor(t,e,n,s){super(t,e,n,s)}execute(t){return this.text&&t.push(this.text.toString()),this.tokens.get(this.index).type!==i.EOF&&t.push(String(this.tokens.get(this.index).text)),this.index+1}}class He extends qe{constructor(t,e,n,s){super(t,e+1,n,s)}}class Ke extends Ve{constructor(t,e,n,s,i){super(t,e,s,i),this.lastIndex=n}execute(t){return this.text&&t.push(this.text.toString()),this.lastIndex+1}toString(){return null==this.text?\"<DeleteOp@\"+this.tokens.get(this.index)+\"..\"+this.tokens.get(this.lastIndex)+\">\":\"<ReplaceOp@\"+this.tokens.get(this.index)+\"..\"+this.tokens.get(this.lastIndex)+':\"'+this.text+'\">'}}const Ye={atn:re,dfa:he,context:ce,misc:ue,tree:fe,error:Ne,Token:i,CommonToken:Pt,CharStreams:Re,CharStream:ke,InputStream:Ie,CommonTokenStream:be,Lexer:Ut,Parser:Fe,ParserRuleContext:Be,Interval:E,IntervalSet:_,LL1Analyzer:j,Utils:we,TokenStreamRewriter:ze};var Ge=s.MG,We=s.fr,je=s.sR,$e=s.Zo,Xe=s.iH,Je=s.rt,Ze=s.jB,Qe=s.M8,tn=s.$t,en=s.aq,nn=s.pG,sn=s.eP,rn=s.KU,on=s.zW,an=s.IX,ln=s.mY,hn=s.a7,cn=s.JG,un=s.ay,dn=s.X2,gn=s.WU,pn=s.Uw,fn=s.gw,xn=s.iX,Tn=s.re,Sn=s.Pg,mn=s.tD,En=s.R$,_n=s.Dj,Cn=s.m7,An=s.NZ,Nn=s.xo,kn=s.ou,In=s.qC,yn=s.mD,Ln=s.Ay;\n//# sourceMappingURL=antlr4.web.mjs.map\n\n//# sourceURL=webpack://fseq/./node_modules/antlr4/dist/antlr4.web.mjs?");

/***/ }),

/***/ "./src/FFFZ2FSeqTest.js":
/*!******************************!*\
  !*** ./src/FFFZ2FSeqTest.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FFFZ2FSeqTest)\n/* harmony export */ });\n/* harmony import */ var _FSeq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FSeq.js */ \"./src/FSeq.js\");\n/* harmony import */ var _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FSeqConverter.js */ \"./src/FSeqConverter.js\");\n\r\n\r\n\r\nclass FFFZ2FSeqTest {\r\n    \r\n    static map = new Map();\r\n\r\n\tstatic test() {\r\n\t\tconsole.log(\"====================================================================================\");\r\n\t\tconsole.log(\"FFFZ转序列测试=\");\r\n\t\tconsole.log(\"====================================================================================\");\r\n\t\tfor (const [key, value] of FFFZ2FSeqTest.map.entries()) {\r\n\t\t\tconst fffz2fSeq = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fffz2FSeq(key);\r\n\t\t\tconst equals = this.arraysEqual(value, fffz2fSeq);\r\n\t\t\tif (!equals) {\r\n\t\t\t\tthrow new Error(`${key} ===>\\n${fffz2fSeq}\\n转换错误==========1========\\n`);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(`${key} ===>\\n${fffz2fSeq}\\n通过\\n`)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(\"====================================================================================\");\r\n\t\tconsole.log(\"F序列转FFFZ测试\");\r\n\t\tconsole.log(\"====================================================================================\");\r\n\t\tfor (const [key, value] of FFFZ2FSeqTest.map.entries()) {\r\n\t\t\tconst fSeq2FFFZ = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fSeq2FFFZ(value, 0);\r\n\t        if (key !== fSeq2FFFZ) {\r\n\t\t\t\tthrow new Error(`${value} ===>\\n${fSeq2FFFZ}\\n转换错误=========2=========\\n`);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(`${value} ===>\\n${fSeq2FFFZ}\\n通过\\n`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic arraysEqual(arr1, arr2) {\r\n\t\tif (arr1.length !== arr2.length) return false;\r\n\t\tfor (let i = 0; i < arr1.length; i++) {\r\n\t\t\tif (arr1[i] !== arr2[i]) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n    \r\n    static getSuccessor(seq) {\r\n        return _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSuccessor(FFFZ2FSeqTest.map.get(seq));\r\n    }\r\n    \r\n    static getSupSeq(...ordinals) {\r\n        const subSeqs = new Array(ordinals.length);\r\n        for (let i = 0; i < ordinals.length; i++) {\r\n            subSeqs[i] = FFFZ2FSeqTest.map.get(ordinals[i]);\r\n            if (subSeqs[i] === undefined) {\r\n                console.log(`${ordinals[i]} 不存在`);\r\n            }\r\n        }\r\n        return _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSupSeq00(subSeqs);\r\n    }\r\n    \r\n    static {\r\n        FFFZ2FSeqTest.map.set(\"1\", _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getOne());\r\n\t\tFFFZ2FSeqTest.map.set(\"2\", this.getSuccessor(\"1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"3\", this.getSuccessor(\"2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"4\", this.getSuccessor(\"3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω\", this.getSupSeq(\"1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω+1\", this.getSupSeq(\"2\",\"2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω+2\", this.getSupSeq(\"2\",\"3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω+3\", this.getSupSeq(\"2\",\"4\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω2\", this.getSupSeq(\"2\",\"ω\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω2+1\", this.getSupSeq(\"2\",\"ω+1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω2+2\", this.getSupSeq(\"2\",\"ω+2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω2+3\", this.getSupSeq(\"2\",\"ω+3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω3\", this.getSupSeq(\"2\",\"ω2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω3+1\", this.getSupSeq(\"2\",\"ω2+1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω3+2\", this.getSupSeq(\"2\",\"ω2+2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^2\", this.getSupSeq(\"2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^2+1\", this.getSupSeq(\"3\",\"3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^2+ω\", this.getSupSeq(\"3\",\"ω\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^2+ω+1\", this.getSupSeq(\"3\",\"ω+1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^2+ω2\", this.getSupSeq(\"3\",\"ω2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^2)*2\", this.getSupSeq(\"3\",\"ω^2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^2)*2+1\", this.getSupSeq(\"3\",\"ω^2+1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^2)*3\", this.getSupSeq(\"3\",\"(ω^2)*2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^3\", this.getSupSeq(\"3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω\", this.getSupSeq(\"ω\",\"ω\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω+1\", this.getSupSeq(\"ω\",\"ω+1\",\"ω+1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω+ω\", this.getSupSeq(\"ω\",\"ω+1\",\"ω2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω+ω^2\", this.getSupSeq(\"ω\",\"ω+1\",\"ω^2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^ω)*2\", this.getSupSeq(\"ω\",\"ω+1\",\"ω^ω\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^ω)*3\", this.getSupSeq(\"ω\",\"ω+1\",\"(ω^ω)*2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+1)\", this.getSupSeq(\"ω\",\"ω+1\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+1)+1\", this.getSupSeq(\"ω\",\"ω+2\",\"ω+2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+1)+ω\", this.getSupSeq(\"ω\",\"ω+2\",\"ω2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+1)+ω^2\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+1)+ω^ω\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^ω\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^(ω+1))*2\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^(ω+1)\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^(ω+1))*3\", this.getSupSeq(\"ω\",\"ω+2\",\"(ω^(ω+1))*2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+2)\", this.getSupSeq(\"ω\",\"ω+2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω+3)\", this.getSupSeq(\"ω\",\"ω+3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^(ω2)\", this.getSupSeq(\"ω\",\"ω2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω^2\", this.getSupSeq(\"ω\",\"ω^2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω^ω\", this.getSupSeq(\"ω\",\"ω^ω\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω^ω+ω^ω\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"(ω^ω)*2\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"ω^ω^ω+(ω^ω)*2\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"(ω^ω)*3\"));\r\n\t\tFFFZ2FSeqTest.map.set(\"(ω^ω^ω)*2\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"ω^ω^ω\"));\r\n    }\r\n}\n\n//# sourceURL=webpack://fseq/./src/FFFZ2FSeqTest.js?");

/***/ }),

/***/ "./src/FFFZParser/CNFNode.js":
/*!***********************************!*\
  !*** ./src/FFFZParser/CNFNode.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CNFNode)\n/* harmony export */ });\nclass CNFNode {\r\n    constructor(expList = [], param = null) {\r\n        this.expList = expList;\r\n        this.param = param;\r\n    }\r\n\r\n    getExpList() {\r\n        return this.expList;\r\n    }\r\n\r\n    setExpList(expList) {\r\n        this.expList = expList;\r\n    }\r\n\r\n    getParam() {\r\n        return this.param;\r\n    }\r\n\r\n    setParam(param) {\r\n        this.param = param;\r\n    }\r\n\r\n    toString() {\r\n        if (this.param === null || this.param === 0) {\r\n            return \"0\";\r\n        }\r\n        if (this.expList === null || this.expList.length === 0) {\r\n            return this.param.toString();\r\n        }\r\n        let stringBuilder = [];\r\n        if (this.expList.length === 1) {\r\n            let expStr = this.expList[0].toString();\r\n            if (expStr === \"1\") {\r\n                stringBuilder.push(\"ω\");\r\n                if (this.param > 1) {\r\n                    stringBuilder.push(this.param);\r\n                }\r\n                return stringBuilder.join('');\r\n            }\r\n        }\r\n        if (this.param > 1) {\r\n            stringBuilder.push(\"(\");\r\n        }\r\n\r\n        stringBuilder.push(\"ω^\");\r\n        if (this.expList.length > 1) {\r\n            stringBuilder.push(\"(\");\r\n        }else if(this.expList.length === 1){\r\n            if (this.expList[0].getExpList() !== null \r\n                && this.expList[0].getExpList().length > 0 \r\n                && this.expList[0].getParam() > 1) {\r\n                    stringBuilder.push(\"(\");\r\n            }    \r\n        }\r\n        for (let node of this.expList) {\r\n            stringBuilder.push(node.toString());\r\n            stringBuilder.push(\"+\");\r\n        }\r\n        stringBuilder.pop(); // Remove the last \"+\"\r\n        if (this.expList.length > 1) {\r\n            stringBuilder.push(\")\");\r\n        }else if(this.expList.length === 1){\r\n            if (this.expList[0].getExpList() !== null \r\n                && this.expList[0].getExpList().length > 0 \r\n                && this.expList[0].getParam() > 1) {\r\n                    stringBuilder.push(\")\");\r\n            }    \r\n        }\r\n        if (this.param > 1) {\r\n            stringBuilder.push(\")*\");\r\n            stringBuilder.push(this.param);\r\n        }\r\n        return stringBuilder.join('');\r\n    }\r\n}\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/CNFNode.js?");

/***/ }),

/***/ "./src/FFFZParser/CNFUtil.js":
/*!***********************************!*\
  !*** ./src/FFFZParser/CNFUtil.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CNFUtil)\n/* harmony export */ });\n/* harmony import */ var _CNFNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CNFNode.js */ \"./src/FFFZParser/CNFNode.js\");\n\r\n\r\nclass CNFUtil {\r\n    \r\n    static minus(cnf1, cnf2) {\r\n        const result = [];\r\n        let startIndex = 0;\r\n        for (let i = 0; i < cnf2.length && i < cnf1.length; i++) {\r\n            const node1 = cnf1[i];\r\n            const node2 = cnf2[i];\r\n            const compareExp = this.compare1(node1.getExpList(), node2.getExpList());\r\n            const compareParam = node1.getParam() - node2.getParam();\r\n            if (compareExp === 0 && compareParam === 0) {\r\n                startIndex = i + 1;\r\n                continue;\r\n            }\r\n            if (compareExp === 0 && compareParam > 0) {\r\n                startIndex = i + 1;\r\n                result.push(new _CNFNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](node1.getExpList(), node1.getParam() - node2.getParam()));\r\n                break;\r\n            }\r\n            if (compareExp > 0) {\r\n                startIndex = i + 1;\r\n                result.push(node1);\r\n                break;\r\n            }\r\n            throw new Error(\"不合法：不支持小序数减大序数\");\r\n        }\r\n        for (let i = startIndex; i < cnf1.length; i++) {\r\n            result.push(cnf1[i]);\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    static add0(cnf1, node) {\r\n        let result = [];\r\n        for (const cnfNode of cnf1) {\r\n            result = this.addIn(result, cnfNode);\r\n        }\r\n        result = this.addIn(result, node);\r\n        return result;\r\n    }\r\n    \r\n    static add1(cnf1, cnf2) {\r\n        let result = [];\r\n        for (const cnfNode of cnf1) {\r\n            result = this.addIn(result, cnfNode);\r\n        }\r\n        for (const cnfNode of cnf2) {\r\n            result = this.addIn(result, cnfNode);\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    static addIn(cnf1, node) {\r\n        const result = [];\r\n        if (cnf1.length === 0) {\r\n            if (node != null) {\r\n                result.push(node);\r\n            }\r\n            return result;\r\n        }\r\n        for (const cnfNode1 of cnf1) {\r\n            const compareExp = this.compare1(cnfNode1.getExpList(), node.getExpList());\r\n            if (compareExp === 0) {\r\n                result.push(new _CNFNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cnfNode1.getExpList(), cnfNode1.getParam() + node.getParam()));\r\n                return result;\r\n            }\r\n            if (compareExp < 0) {\r\n                result.push(node);\r\n                return result;\r\n            }\r\n            if (compareExp > 0) {\r\n                result.push(cnfNode1);\r\n            }\r\n        }\r\n        result.push(node);\r\n        return result;\r\n    }\r\n    \r\n    static compare0(node1, node2) {\r\n        const param1 = node1.getParam();\r\n        const param2 = node2.getParam();\r\n        if (param1 === 0 || param2 === 0) {\r\n            return param1 !== 0 ? 1 : param2 !== 0 ? -1 : 0;\r\n        }\r\n        const expList1 = node1.getExpList();\r\n        const expList2 = node2.getExpList();\r\n        const compare = this.compare1(expList1, expList2);\r\n        if (compare === 0) {\r\n            return param1 - param2;\r\n        }\r\n        return compare;\r\n    }\r\n    \r\n    static compare1(cnf1, cnf2) {\r\n        if (cnf1 == null) {\r\n            cnf1 = [];\r\n        }\r\n        if (cnf2 == null) {\r\n            cnf2 = [];\r\n        }\r\n        for (let i = 0; i < cnf1.length && i < cnf2.length; i++) {\r\n            const compare = this.compare0(cnf1[i], cnf2[i]);\r\n            if (compare === 0) {\r\n                continue;\r\n            }\r\n            return compare;\r\n        }\r\n        return cnf1.length > cnf2.length ? 1 : cnf1.length < cnf2.length ? -1 : 0;\r\n    }\r\n    \r\n    static toString(cnf) {\r\n        let stringBuilder = '';\r\n        for (const node of cnf) {\r\n            stringBuilder += node.toString() + '+';\r\n        }\r\n        return stringBuilder.slice(0, -1);\r\n    }\r\n}\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/CNFUtil.js?");

/***/ }),

/***/ "./src/FFFZParser/FFFZ2SeqListener.js":
/*!********************************************!*\
  !*** ./src/FFFZParser/FFFZ2SeqListener.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FFFZ2SeqListener)\n/* harmony export */ });\n/* harmony import */ var _FFFZListener_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FFFZListener.js */ \"./src/FFFZParser/FFFZListener.js\");\n/* harmony import */ var _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FSeqConverter.js */ \"./src/FSeqConverter.js\");\n/* harmony import */ var _CNFNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CNFNode.js */ \"./src/FFFZParser/CNFNode.js\");\n/* harmony import */ var _CNFUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CNFUtil.js */ \"./src/FFFZParser/CNFUtil.js\");\n/* harmony import */ var _FSeq_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../FSeq.js */ \"./src/FSeq.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass FFFZ2SeqListener extends _FFFZListener_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\r\n    \r\n    static OMAGE_SEQ = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getOumiga();\r\n    \r\n    cnfMap = new Map();\r\n    seqMap = new Map();\r\n    \r\n    getSeq(ctx) {\r\n        return this.seqMap.get(ctx);\r\n    }\r\n    \r\n    getF(ctx) {\r\n        return this.cnfMap.get(ctx);\r\n    }\r\n\r\n    exitRoot(ctx) {\r\n\t\tconst fffz = ctx.fffz();\r\n\t\tthis.seqMap.set(ctx, this.seqMap.get(fffz));\r\n\t}\r\n\r\n    exitFffz(ctx) {\r\n        const polynomial = ctx.polynomial();\r\n        const fffzList = ctx.fffz();\r\n        if (polynomial != null) {\r\n            const cnf = this.cnfMap.get(polynomial);\r\n            const polynomialSeq = this.convertToFSeq1(cnf);\r\n            this.seqMap.set(ctx, polynomialSeq);\r\n        }\r\n        if (fffzList.length > 0) {\r\n            const subSeqs = new Array(fffzList.length);\r\n            let i = 0;\r\n            for (const fffzContext of fffzList) {\r\n                subSeqs[i] = this.seqMap.get(fffzContext);\r\n                i++;\r\n            }\r\n            this.seqMap.set(ctx, _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq00(subSeqs));\r\n        }\r\n    }\r\n    \r\n    convertToFSeq1(cnf) {\r\n        if (!cnf || cnf.length === 0) {\r\n            return null;\r\n        }\r\n        if (cnf.length === 1) {\r\n            return this.convertToFSeq0(cnf[0]);\r\n        }\r\n        let result = null;\r\n        for (const cnfNode of cnf) {\r\n            if (result == null) {\r\n                result = this.convertToFSeq0(cnfNode);\r\n                continue;\r\n            }\r\n            const subSeq = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSubSeq(result);\r\n            const a = subSeq[subSeq.length - 1];\r\n            const b = subSeq.length > 1 ? subSeq[subSeq.length - 2] : null;\r\n            const successor_a = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSuccessor(a);\r\n            const cnf_a = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].convertToCNF(a);\r\n            const newCNF_a = _CNFUtil_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].add0(cnf_a, cnfNode);\r\n            const new_a = this.convertToFSeq1(newCNF_a);\r\n            let new_subSeq = [...subSeq];\r\n            new_subSeq[new_subSeq.length-1] = successor_a;\r\n            if(_FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].compareL(new_subSeq)>0) {\r\n\t\t\t\tresult = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq1(subSeq, subSeq.length-1, successor_a, new_a);\r\n\t\t\t}else {\r\n\t\t\t\tresult = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq1(subSeq, subSeq.length-1, new_a);\r\n\t\t\t}\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    convertToFSeq0(cnfNode) {\r\n        const expList = cnfNode.getExpList();\r\n        if (!expList || expList.length === 0) {\r\n            return _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSeq(cnfNode.getParam());\r\n        }\r\n        let expFSeq = null;\r\n        let result = null;\r\n        if (expList.length === 1) {\r\n            const expfFNode = expList[0];\r\n            if (!expfFNode.getExpList() || expfFNode.getExpList().length === 0) {\r\n                expFSeq = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSeq(expfFNode.getParam());\r\n                result = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq0(expFSeq);\r\n            }\r\n        }\r\n        if (result == null) {\r\n            expFSeq = this.convertToFSeq1(expList);\r\n            result = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq0(FFFZ2SeqListener.OMAGE_SEQ, expFSeq);\r\n        }\r\n        const factor = cnfNode.getParam();\r\n        if (factor > 1) {\r\n\t\t\tconst subSeq = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSubSeq(result);\r\n\t\t\tconst  a = subSeq[subSeq.length-1];\r\n\t\t\tconst  b = subSeq.length>1?subSeq[subSeq.length-2]:null;\r\n\t\t\tconst  successor_a = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSuccessor(a);\r\n            let new_subSeq = [...subSeq];\r\n            new_subSeq[new_subSeq.length-1] = successor_a;\r\n\t\t\tconst  fake = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].compareL(new_subSeq) ;\r\n\t\t\tfor (let i = 1; i < factor; i++) {\r\n\t\t\t\tif(fake > 0) {\r\n\t\t\t\t\tresult = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq1(subSeq, subSeq.length-1, successor_a, result);\r\n\t\t\t\t}else {\r\n\t\t\t\t\tresult = _FSeq_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getSupSeq1(subSeq, subSeq.length-1, result);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        return result;\r\n    }\r\n\r\n    exitPolynomial(ctx) {\r\n        const itemList = ctx.item();\r\n        let mergedCNF = [];\r\n        for (const itemContext of itemList) {\r\n            const cnf = this.cnfMap.get(itemContext);\r\n            mergedCNF = _CNFUtil_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].add1(mergedCNF, cnf);\r\n        }\r\n        this.cnfMap.set(ctx, mergedCNF);\r\n    }\r\n\r\n    exitExponent(ctx) {\r\n        const omega = ctx.OMEGA();\r\n        const exponent = ctx.exponent();\r\n        const factorCtx = ctx.factor();\r\n        const factor = this.getFactor(factorCtx);\r\n        const polynomial = ctx.polynomial();\r\n        if (polynomial != null) {\r\n            const polynomialCNF = this.cnfMap.get(polynomial);\r\n            this.cnfMap.set(ctx, polynomialCNF);\r\n            return;\r\n        }\r\n        let expList = null;\r\n        if (exponent != null) {\r\n            expList = this.cnfMap.get(exponent);\r\n        } else if (omega != null) {\r\n            const one = new _CNFNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](null, 1);\r\n            expList = [one];\r\n        }\r\n        const cnfNode = new _CNFNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](expList, factor);\r\n        const list = [cnfNode];\r\n        this.cnfMap.set(ctx, list);\r\n    }\r\n\r\n    exitItem(ctx) {\r\n        const omega = ctx.OMEGA();\r\n        const exponent = ctx.exponent();\r\n        const factor = this.getFactor(ctx.factor());\r\n        let expList = null;\r\n\r\n        if (omega !== null) {\r\n            if (exponent !== null) {\r\n                expList = this.cnfMap.get(exponent);\r\n            } else {\r\n                const one = new _CNFNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](null, 1);\r\n                expList = [];\r\n                expList.push(one);\r\n            }\r\n        } else {\r\n            expList = null;\r\n        }\r\n\r\n        const cnfNode = new _CNFNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](expList, factor);\r\n        const list = [];\r\n        list.push(cnfNode);\r\n        this.cnfMap.set(ctx, list);\r\n    }\r\n\r\n    getFactor(factorCtx) {\r\n        let factor = 1;\r\n        if (factorCtx !== null) {\r\n            factor = parseInt(factorCtx.getText(), 10);\r\n        }\r\n        return factor;\r\n    }\r\n}\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/FFFZ2SeqListener.js?");

/***/ }),

/***/ "./src/FFFZParser/FFFZErrorListener.js":
/*!*********************************************!*\
  !*** ./src/FFFZParser/FFFZErrorListener.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FFFZErrorListener)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n\r\n\r\nclass FFFZErrorListener extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.ErrorListener {\r\n    \r\n    errors = [];\r\n\r\n    syntaxError(recognizer, offendingSymbol, line, column, msg, e){\r\n        this.errors.push(\"line \" + line + \":\" + column + \" \" + msg);\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/FFFZErrorListener.js?");

/***/ }),

/***/ "./src/FFFZParser/FFFZLexer.js":
/*!*************************************!*\
  !*** ./src/FFFZParser/FFFZLexer.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FFFZLexer)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n// Generated from ./FFFZ.g4 by ANTLR 4.13.2\r\n// jshint ignore: start\r\n\r\n\r\n\r\nconst serializedATN = [4,0,14,63,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,\r\n4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,\r\n12,2,13,7,13,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,\r\n1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,4,11,54,8,11,11,11,12,11,55,1,12,\r\n1,12,1,13,1,13,1,13,1,13,0,0,14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,\r\n19,10,21,11,23,12,25,13,27,14,1,0,3,2,0,119,119,969,969,2,0,42,42,215,215,\r\n3,0,9,10,12,13,32,32,63,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,\r\n0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,\r\n0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,1,0,0,0,3,32,\r\n1,0,0,0,5,34,1,0,0,0,7,36,1,0,0,0,9,38,1,0,0,0,11,40,1,0,0,0,13,42,1,0,0,\r\n0,15,44,1,0,0,0,17,46,1,0,0,0,19,48,1,0,0,0,21,50,1,0,0,0,23,53,1,0,0,0,\r\n25,57,1,0,0,0,27,59,1,0,0,0,29,30,5,968,0,0,30,31,5,90,0,0,31,2,1,0,0,0,\r\n32,33,5,949,0,0,33,4,1,0,0,0,34,35,7,0,0,0,35,6,1,0,0,0,36,37,5,44,0,0,37,\r\n8,1,0,0,0,38,39,5,43,0,0,39,10,1,0,0,0,40,41,7,1,0,0,41,12,1,0,0,0,42,43,\r\n5,94,0,0,43,14,1,0,0,0,44,45,5,40,0,0,45,16,1,0,0,0,46,47,5,41,0,0,47,18,\r\n1,0,0,0,48,49,5,91,0,0,49,20,1,0,0,0,50,51,5,93,0,0,51,22,1,0,0,0,52,54,\r\n3,25,12,0,53,52,1,0,0,0,54,55,1,0,0,0,55,53,1,0,0,0,55,56,1,0,0,0,56,24,\r\n1,0,0,0,57,58,2,48,57,0,58,26,1,0,0,0,59,60,7,2,0,0,60,61,1,0,0,0,61,62,\r\n6,13,0,0,62,28,1,0,0,0,2,0,55,1,6,0,0];\r\n\r\n\r\nconst atn = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nconst decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dfa.DFA(ds, index) );\r\n\r\nclass FFFZLexer extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Lexer {\r\n\r\n    static grammarFileName = \"FFFZ.g4\";\r\n    static channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\r\n\tstatic modeNames = [ \"DEFAULT_MODE\" ];\r\n\tstatic literalNames = [ null, \"'\\\\u03C8Z'\", \"'\\\\u03B5'\", null, \"','\", \"'+'\", \r\n                         null, \"'^'\", \"'('\", \"')'\", \"'['\", \"']'\" ];\r\n\tstatic symbolicNames = [ null, \"PSIZ\", \"EPSILON0\", \"OMEGA\", \"COMMA\", \"PLUS\", \r\n                          \"MUL\", \"POWER\", \"LPAREN\", \"RPAREN\", \"LBRACKET\", \r\n                          \"RBRACKET\", \"INTEGER_LITERAL\", \"Digit\", \"WS\" ];\r\n\tstatic ruleNames = [ \"PSIZ\", \"EPSILON0\", \"OMEGA\", \"COMMA\", \"PLUS\", \"MUL\", \r\n                      \"POWER\", \"LPAREN\", \"RPAREN\", \"LBRACKET\", \"RBRACKET\", \r\n                      \"INTEGER_LITERAL\", \"Digit\", \"WS\" ];\r\n\r\n    constructor(input) {\r\n        super(input)\r\n        this._interp = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.PredictionContextCache());\r\n    }\r\n}\r\n\r\nFFFZLexer.EOF = antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Token.EOF;\r\nFFFZLexer.PSIZ = 1;\r\nFFFZLexer.EPSILON0 = 2;\r\nFFFZLexer.OMEGA = 3;\r\nFFFZLexer.COMMA = 4;\r\nFFFZLexer.PLUS = 5;\r\nFFFZLexer.MUL = 6;\r\nFFFZLexer.POWER = 7;\r\nFFFZLexer.LPAREN = 8;\r\nFFFZLexer.RPAREN = 9;\r\nFFFZLexer.LBRACKET = 10;\r\nFFFZLexer.RBRACKET = 11;\r\nFFFZLexer.INTEGER_LITERAL = 12;\r\nFFFZLexer.Digit = 13;\r\nFFFZLexer.WS = 14;\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/FFFZLexer.js?");

/***/ }),

/***/ "./src/FFFZParser/FFFZListener.js":
/*!****************************************!*\
  !*** ./src/FFFZParser/FFFZListener.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FFFZListener)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n// Generated from ./FFFZ.g4 by ANTLR 4.13.2\r\n// jshint ignore: start\r\n\r\n\r\n// This class defines a complete listener for a parse tree produced by FFFZParser.\r\nclass FFFZListener extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tree.ParseTreeListener {\r\n\r\n\t// Enter a parse tree produced by FFFZParser#root.\r\n\tenterRoot(ctx) {\r\n\t}\r\n\r\n\t// Exit a parse tree produced by FFFZParser#root.\r\n\texitRoot(ctx) {\r\n\t}\r\n\r\n\r\n\t// Enter a parse tree produced by FFFZParser#fffz.\r\n\tenterFffz(ctx) {\r\n\t}\r\n\r\n\t// Exit a parse tree produced by FFFZParser#fffz.\r\n\texitFffz(ctx) {\r\n\t}\r\n\r\n\r\n\t// Enter a parse tree produced by FFFZParser#polynomial.\r\n\tenterPolynomial(ctx) {\r\n\t}\r\n\r\n\t// Exit a parse tree produced by FFFZParser#polynomial.\r\n\texitPolynomial(ctx) {\r\n\t}\r\n\r\n\r\n\t// Enter a parse tree produced by FFFZParser#exponent.\r\n\tenterExponent(ctx) {\r\n\t}\r\n\r\n\t// Exit a parse tree produced by FFFZParser#exponent.\r\n\texitExponent(ctx) {\r\n\t}\r\n\r\n\r\n\t// Enter a parse tree produced by FFFZParser#item.\r\n\tenterItem(ctx) {\r\n\t}\r\n\r\n\t// Exit a parse tree produced by FFFZParser#item.\r\n\texitItem(ctx) {\r\n\t}\r\n\r\n\r\n\t// Enter a parse tree produced by FFFZParser#factor.\r\n\tenterFactor(ctx) {\r\n\t}\r\n\r\n\t// Exit a parse tree produced by FFFZParser#factor.\r\n\texitFactor(ctx) {\r\n\t}\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/FFFZListener.js?");

/***/ }),

/***/ "./src/FFFZParser/FFFZParser.js":
/*!**************************************!*\
  !*** ./src/FFFZParser/FFFZParser.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FFFZParser)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n/* harmony import */ var _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FFFZListener.js */ \"./src/FFFZParser/FFFZListener.js\");\n// Generated from ./FFFZ.g4 by ANTLR 4.13.2\r\n// jshint ignore: start\r\n\r\n\r\nconst serializedATN = [4,1,14,88,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,\r\n2,5,7,5,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,5,1,22,8,1,10,1,12,1,25,9,1,\r\n1,1,1,1,3,1,29,8,1,1,1,1,1,1,1,1,1,3,1,35,8,1,1,2,1,2,1,2,5,2,40,8,2,10,\r\n2,12,2,43,9,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,54,8,3,1,4,1,4,1,4,\r\n3,4,59,8,4,1,4,3,4,62,8,4,1,4,1,4,1,4,1,4,3,4,68,8,4,1,4,3,4,71,8,4,1,4,\r\n1,4,1,4,1,4,1,4,1,4,3,4,79,8,4,1,4,3,4,82,8,4,3,4,84,8,4,1,5,1,5,1,5,0,0,\r\n6,0,2,4,6,8,10,0,0,97,0,12,1,0,0,0,2,34,1,0,0,0,4,36,1,0,0,0,6,53,1,0,0,\r\n0,8,83,1,0,0,0,10,85,1,0,0,0,12,13,3,2,1,0,13,14,5,0,0,1,14,1,1,0,0,0,15,\r\n35,3,4,2,0,16,28,5,1,0,0,17,18,5,10,0,0,18,23,3,2,1,0,19,20,5,4,0,0,20,22,\r\n3,2,1,0,21,19,1,0,0,0,22,25,1,0,0,0,23,21,1,0,0,0,23,24,1,0,0,0,24,26,1,\r\n0,0,0,25,23,1,0,0,0,26,27,5,11,0,0,27,29,1,0,0,0,28,17,1,0,0,0,28,29,1,0,\r\n0,0,29,30,1,0,0,0,30,31,5,8,0,0,31,32,3,2,1,0,32,33,5,9,0,0,33,35,1,0,0,\r\n0,34,15,1,0,0,0,34,16,1,0,0,0,35,3,1,0,0,0,36,41,3,8,4,0,37,38,5,5,0,0,38,\r\n40,3,8,4,0,39,37,1,0,0,0,40,43,1,0,0,0,41,39,1,0,0,0,41,42,1,0,0,0,42,5,\r\n1,0,0,0,43,41,1,0,0,0,44,54,3,10,5,0,45,54,5,3,0,0,46,47,5,3,0,0,47,48,5,\r\n7,0,0,48,54,3,6,3,0,49,50,5,8,0,0,50,51,3,4,2,0,51,52,5,9,0,0,52,54,1,0,\r\n0,0,53,44,1,0,0,0,53,45,1,0,0,0,53,46,1,0,0,0,53,49,1,0,0,0,54,7,1,0,0,0,\r\n55,84,3,10,5,0,56,58,5,3,0,0,57,59,5,6,0,0,58,57,1,0,0,0,58,59,1,0,0,0,59,\r\n61,1,0,0,0,60,62,3,10,5,0,61,60,1,0,0,0,61,62,1,0,0,0,62,84,1,0,0,0,63,64,\r\n5,3,0,0,64,65,5,7,0,0,65,70,3,6,3,0,66,68,5,6,0,0,67,66,1,0,0,0,67,68,1,\r\n0,0,0,68,69,1,0,0,0,69,71,3,10,5,0,70,67,1,0,0,0,70,71,1,0,0,0,71,84,1,0,\r\n0,0,72,73,5,8,0,0,73,74,5,3,0,0,74,75,5,7,0,0,75,76,3,6,3,0,76,81,5,9,0,\r\n0,77,79,5,6,0,0,78,77,1,0,0,0,78,79,1,0,0,0,79,80,1,0,0,0,80,82,3,10,5,0,\r\n81,78,1,0,0,0,81,82,1,0,0,0,82,84,1,0,0,0,83,55,1,0,0,0,83,56,1,0,0,0,83,\r\n63,1,0,0,0,83,72,1,0,0,0,84,9,1,0,0,0,85,86,5,12,0,0,86,11,1,0,0,0,12,23,\r\n28,34,41,53,58,61,67,70,78,81,83];\r\n\r\n\r\nconst atn = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ATNDeserializer().deserialize(serializedATN);\r\n\r\nconst decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dfa.DFA(ds, index) );\r\n\r\nconst sharedContextCache = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.PredictionContextCache();\r\n\r\nclass FFFZParser extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Parser {\r\n\r\n    static grammarFileName = \"FFFZ.g4\";\r\n    static literalNames = [ null, \"'\\\\u03C8Z'\", \"'\\\\u03B5'\", null, \"','\", \r\n                            \"'+'\", null, \"'^'\", \"'('\", \"')'\", \"'['\", \"']'\" ];\r\n    static symbolicNames = [ null, \"PSIZ\", \"EPSILON0\", \"OMEGA\", \"COMMA\", \r\n                             \"PLUS\", \"MUL\", \"POWER\", \"LPAREN\", \"RPAREN\", \r\n                             \"LBRACKET\", \"RBRACKET\", \"INTEGER_LITERAL\", \r\n                             \"Digit\", \"WS\" ];\r\n    static ruleNames = [ \"root\", \"fffz\", \"polynomial\", \"exponent\", \"item\", \r\n                         \"factor\" ];\r\n\r\n    constructor(input) {\r\n        super(input);\r\n        this._interp = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\r\n        this.ruleNames = FFFZParser.ruleNames;\r\n        this.literalNames = FFFZParser.literalNames;\r\n        this.symbolicNames = FFFZParser.symbolicNames;\r\n    }\r\n\r\n\r\n\r\n\troot() {\r\n\t    let localctx = new RootContext(this, this._ctx, this.state);\r\n\t    this.enterRule(localctx, 0, FFFZParser.RULE_root);\r\n\t    try {\r\n\t        this.enterOuterAlt(localctx, 1);\r\n\t        this.state = 12;\r\n\t        this.fffz();\r\n\t        this.state = 13;\r\n\t        this.match(FFFZParser.EOF);\r\n\t    } catch (re) {\r\n\t    \tif(re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\r\n\t\t        localctx.exception = re;\r\n\t\t        this._errHandler.reportError(this, re);\r\n\t\t        this._errHandler.recover(this, re);\r\n\t\t    } else {\r\n\t\t    \tthrow re;\r\n\t\t    }\r\n\t    } finally {\r\n\t        this.exitRule();\r\n\t    }\r\n\t    return localctx;\r\n\t}\r\n\r\n\r\n\r\n\tfffz() {\r\n\t    let localctx = new FffzContext(this, this._ctx, this.state);\r\n\t    this.enterRule(localctx, 2, FFFZParser.RULE_fffz);\r\n\t    var _la = 0;\r\n\t    try {\r\n\t        this.state = 34;\r\n\t        this._errHandler.sync(this);\r\n\t        switch(this._input.LA(1)) {\r\n\t        case 3:\r\n\t        case 8:\r\n\t        case 12:\r\n\t            this.enterOuterAlt(localctx, 1);\r\n\t            this.state = 15;\r\n\t            this.polynomial();\r\n\t            break;\r\n\t        case 1:\r\n\t            this.enterOuterAlt(localctx, 2);\r\n\t            this.state = 16;\r\n\t            this.match(FFFZParser.PSIZ);\r\n\t            this.state = 28;\r\n\t            this._errHandler.sync(this);\r\n\t            _la = this._input.LA(1);\r\n\t            if(_la===10) {\r\n\t                this.state = 17;\r\n\t                this.match(FFFZParser.LBRACKET);\r\n\t                this.state = 18;\r\n\t                this.fffz();\r\n\t                this.state = 23;\r\n\t                this._errHandler.sync(this);\r\n\t                _la = this._input.LA(1);\r\n\t                while(_la===4) {\r\n\t                    this.state = 19;\r\n\t                    this.match(FFFZParser.COMMA);\r\n\t                    this.state = 20;\r\n\t                    this.fffz();\r\n\t                    this.state = 25;\r\n\t                    this._errHandler.sync(this);\r\n\t                    _la = this._input.LA(1);\r\n\t                }\r\n\t                this.state = 26;\r\n\t                this.match(FFFZParser.RBRACKET);\r\n\t            }\r\n\r\n\t            this.state = 30;\r\n\t            this.match(FFFZParser.LPAREN);\r\n\t            this.state = 31;\r\n\t            this.fffz();\r\n\t            this.state = 32;\r\n\t            this.match(FFFZParser.RPAREN);\r\n\t            break;\r\n\t        default:\r\n\t            throw new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.NoViableAltException(this);\r\n\t        }\r\n\t    } catch (re) {\r\n\t    \tif(re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\r\n\t\t        localctx.exception = re;\r\n\t\t        this._errHandler.reportError(this, re);\r\n\t\t        this._errHandler.recover(this, re);\r\n\t\t    } else {\r\n\t\t    \tthrow re;\r\n\t\t    }\r\n\t    } finally {\r\n\t        this.exitRule();\r\n\t    }\r\n\t    return localctx;\r\n\t}\r\n\r\n\r\n\r\n\tpolynomial() {\r\n\t    let localctx = new PolynomialContext(this, this._ctx, this.state);\r\n\t    this.enterRule(localctx, 4, FFFZParser.RULE_polynomial);\r\n\t    var _la = 0;\r\n\t    try {\r\n\t        this.enterOuterAlt(localctx, 1);\r\n\t        this.state = 36;\r\n\t        this.item();\r\n\t        this.state = 41;\r\n\t        this._errHandler.sync(this);\r\n\t        _la = this._input.LA(1);\r\n\t        while(_la===5) {\r\n\t            this.state = 37;\r\n\t            this.match(FFFZParser.PLUS);\r\n\t            this.state = 38;\r\n\t            this.item();\r\n\t            this.state = 43;\r\n\t            this._errHandler.sync(this);\r\n\t            _la = this._input.LA(1);\r\n\t        }\r\n\t    } catch (re) {\r\n\t    \tif(re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\r\n\t\t        localctx.exception = re;\r\n\t\t        this._errHandler.reportError(this, re);\r\n\t\t        this._errHandler.recover(this, re);\r\n\t\t    } else {\r\n\t\t    \tthrow re;\r\n\t\t    }\r\n\t    } finally {\r\n\t        this.exitRule();\r\n\t    }\r\n\t    return localctx;\r\n\t}\r\n\r\n\r\n\r\n\texponent() {\r\n\t    let localctx = new ExponentContext(this, this._ctx, this.state);\r\n\t    this.enterRule(localctx, 6, FFFZParser.RULE_exponent);\r\n\t    try {\r\n\t        this.state = 53;\r\n\t        this._errHandler.sync(this);\r\n\t        var la_ = this._interp.adaptivePredict(this._input,4,this._ctx);\r\n\t        switch(la_) {\r\n\t        case 1:\r\n\t            this.enterOuterAlt(localctx, 1);\r\n\t            this.state = 44;\r\n\t            this.factor();\r\n\t            break;\r\n\r\n\t        case 2:\r\n\t            this.enterOuterAlt(localctx, 2);\r\n\t            this.state = 45;\r\n\t            this.match(FFFZParser.OMEGA);\r\n\t            break;\r\n\r\n\t        case 3:\r\n\t            this.enterOuterAlt(localctx, 3);\r\n\t            this.state = 46;\r\n\t            this.match(FFFZParser.OMEGA);\r\n\t            this.state = 47;\r\n\t            this.match(FFFZParser.POWER);\r\n\t            this.state = 48;\r\n\t            this.exponent();\r\n\t            break;\r\n\r\n\t        case 4:\r\n\t            this.enterOuterAlt(localctx, 4);\r\n\t            this.state = 49;\r\n\t            this.match(FFFZParser.LPAREN);\r\n\t            this.state = 50;\r\n\t            this.polynomial();\r\n\t            this.state = 51;\r\n\t            this.match(FFFZParser.RPAREN);\r\n\t            break;\r\n\r\n\t        }\r\n\t    } catch (re) {\r\n\t    \tif(re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\r\n\t\t        localctx.exception = re;\r\n\t\t        this._errHandler.reportError(this, re);\r\n\t\t        this._errHandler.recover(this, re);\r\n\t\t    } else {\r\n\t\t    \tthrow re;\r\n\t\t    }\r\n\t    } finally {\r\n\t        this.exitRule();\r\n\t    }\r\n\t    return localctx;\r\n\t}\r\n\r\n\r\n\r\n\titem() {\r\n\t    let localctx = new ItemContext(this, this._ctx, this.state);\r\n\t    this.enterRule(localctx, 8, FFFZParser.RULE_item);\r\n\t    var _la = 0;\r\n\t    try {\r\n\t        this.state = 83;\r\n\t        this._errHandler.sync(this);\r\n\t        var la_ = this._interp.adaptivePredict(this._input,11,this._ctx);\r\n\t        switch(la_) {\r\n\t        case 1:\r\n\t            this.enterOuterAlt(localctx, 1);\r\n\t            this.state = 55;\r\n\t            this.factor();\r\n\t            break;\r\n\r\n\t        case 2:\r\n\t            this.enterOuterAlt(localctx, 2);\r\n\t            this.state = 56;\r\n\t            this.match(FFFZParser.OMEGA);\r\n\t            this.state = 58;\r\n\t            this._errHandler.sync(this);\r\n\t            _la = this._input.LA(1);\r\n\t            if(_la===6) {\r\n\t                this.state = 57;\r\n\t                this.match(FFFZParser.MUL);\r\n\t            }\r\n\r\n\t            this.state = 61;\r\n\t            this._errHandler.sync(this);\r\n\t            _la = this._input.LA(1);\r\n\t            if(_la===12) {\r\n\t                this.state = 60;\r\n\t                this.factor();\r\n\t            }\r\n\r\n\t            break;\r\n\r\n\t        case 3:\r\n\t            this.enterOuterAlt(localctx, 3);\r\n\t            this.state = 63;\r\n\t            this.match(FFFZParser.OMEGA);\r\n\t            this.state = 64;\r\n\t            this.match(FFFZParser.POWER);\r\n\t            this.state = 65;\r\n\t            this.exponent();\r\n\t            this.state = 70;\r\n\t            this._errHandler.sync(this);\r\n\t            _la = this._input.LA(1);\r\n\t            if(_la===6 || _la===12) {\r\n\t                this.state = 67;\r\n\t                this._errHandler.sync(this);\r\n\t                _la = this._input.LA(1);\r\n\t                if(_la===6) {\r\n\t                    this.state = 66;\r\n\t                    this.match(FFFZParser.MUL);\r\n\t                }\r\n\r\n\t                this.state = 69;\r\n\t                this.factor();\r\n\t            }\r\n\r\n\t            break;\r\n\r\n\t        case 4:\r\n\t            this.enterOuterAlt(localctx, 4);\r\n\t            this.state = 72;\r\n\t            this.match(FFFZParser.LPAREN);\r\n\t            this.state = 73;\r\n\t            this.match(FFFZParser.OMEGA);\r\n\t            this.state = 74;\r\n\t            this.match(FFFZParser.POWER);\r\n\t            this.state = 75;\r\n\t            this.exponent();\r\n\t            this.state = 76;\r\n\t            this.match(FFFZParser.RPAREN);\r\n\t            this.state = 81;\r\n\t            this._errHandler.sync(this);\r\n\t            _la = this._input.LA(1);\r\n\t            if(_la===6 || _la===12) {\r\n\t                this.state = 78;\r\n\t                this._errHandler.sync(this);\r\n\t                _la = this._input.LA(1);\r\n\t                if(_la===6) {\r\n\t                    this.state = 77;\r\n\t                    this.match(FFFZParser.MUL);\r\n\t                }\r\n\r\n\t                this.state = 80;\r\n\t                this.factor();\r\n\t            }\r\n\r\n\t            break;\r\n\r\n\t        }\r\n\t    } catch (re) {\r\n\t    \tif(re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\r\n\t\t        localctx.exception = re;\r\n\t\t        this._errHandler.reportError(this, re);\r\n\t\t        this._errHandler.recover(this, re);\r\n\t\t    } else {\r\n\t\t    \tthrow re;\r\n\t\t    }\r\n\t    } finally {\r\n\t        this.exitRule();\r\n\t    }\r\n\t    return localctx;\r\n\t}\r\n\r\n\r\n\r\n\tfactor() {\r\n\t    let localctx = new FactorContext(this, this._ctx, this.state);\r\n\t    this.enterRule(localctx, 10, FFFZParser.RULE_factor);\r\n\t    try {\r\n\t        this.enterOuterAlt(localctx, 1);\r\n\t        this.state = 85;\r\n\t        this.match(FFFZParser.INTEGER_LITERAL);\r\n\t    } catch (re) {\r\n\t    \tif(re instanceof antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error.RecognitionException) {\r\n\t\t        localctx.exception = re;\r\n\t\t        this._errHandler.reportError(this, re);\r\n\t\t        this._errHandler.recover(this, re);\r\n\t\t    } else {\r\n\t\t    \tthrow re;\r\n\t\t    }\r\n\t    } finally {\r\n\t        this.exitRule();\r\n\t    }\r\n\t    return localctx;\r\n\t}\r\n\r\n\r\n}\r\n\r\nFFFZParser.EOF = antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Token.EOF;\r\nFFFZParser.PSIZ = 1;\r\nFFFZParser.EPSILON0 = 2;\r\nFFFZParser.OMEGA = 3;\r\nFFFZParser.COMMA = 4;\r\nFFFZParser.PLUS = 5;\r\nFFFZParser.MUL = 6;\r\nFFFZParser.POWER = 7;\r\nFFFZParser.LPAREN = 8;\r\nFFFZParser.RPAREN = 9;\r\nFFFZParser.LBRACKET = 10;\r\nFFFZParser.RBRACKET = 11;\r\nFFFZParser.INTEGER_LITERAL = 12;\r\nFFFZParser.Digit = 13;\r\nFFFZParser.WS = 14;\r\n\r\nFFFZParser.RULE_root = 0;\r\nFFFZParser.RULE_fffz = 1;\r\nFFFZParser.RULE_polynomial = 2;\r\nFFFZParser.RULE_exponent = 3;\r\nFFFZParser.RULE_item = 4;\r\nFFFZParser.RULE_factor = 5;\r\n\r\nclass RootContext extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext {\r\n\r\n    constructor(parser, parent, invokingState) {\r\n        if(parent===undefined) {\r\n            parent = null;\r\n        }\r\n        if(invokingState===undefined || invokingState===null) {\r\n            invokingState = -1;\r\n        }\r\n        super(parent, invokingState);\r\n        this.parser = parser;\r\n        this.ruleIndex = FFFZParser.RULE_root;\r\n    }\r\n\r\n\tfffz() {\r\n\t    return this.getTypedRuleContext(FffzContext,0);\r\n\t};\r\n\r\n\tEOF() {\r\n\t    return this.getToken(FFFZParser.EOF, 0);\r\n\t};\r\n\r\n\tenterRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.enterRoot(this);\r\n\t\t}\r\n\t}\r\n\r\n\texitRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.exitRoot(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass FffzContext extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext {\r\n\r\n    constructor(parser, parent, invokingState) {\r\n        if(parent===undefined) {\r\n            parent = null;\r\n        }\r\n        if(invokingState===undefined || invokingState===null) {\r\n            invokingState = -1;\r\n        }\r\n        super(parent, invokingState);\r\n        this.parser = parser;\r\n        this.ruleIndex = FFFZParser.RULE_fffz;\r\n    }\r\n\r\n\tpolynomial() {\r\n\t    return this.getTypedRuleContext(PolynomialContext,0);\r\n\t};\r\n\r\n\tPSIZ() {\r\n\t    return this.getToken(FFFZParser.PSIZ, 0);\r\n\t};\r\n\r\n\tLPAREN() {\r\n\t    return this.getToken(FFFZParser.LPAREN, 0);\r\n\t};\r\n\r\n\tfffz = function(i) {\r\n\t    if(i===undefined) {\r\n\t        i = null;\r\n\t    }\r\n\t    if(i===null) {\r\n\t        return this.getTypedRuleContexts(FffzContext);\r\n\t    } else {\r\n\t        return this.getTypedRuleContext(FffzContext,i);\r\n\t    }\r\n\t};\r\n\r\n\tRPAREN() {\r\n\t    return this.getToken(FFFZParser.RPAREN, 0);\r\n\t};\r\n\r\n\tLBRACKET() {\r\n\t    return this.getToken(FFFZParser.LBRACKET, 0);\r\n\t};\r\n\r\n\tRBRACKET() {\r\n\t    return this.getToken(FFFZParser.RBRACKET, 0);\r\n\t};\r\n\r\n\tCOMMA = function(i) {\r\n\t\tif(i===undefined) {\r\n\t\t\ti = null;\r\n\t\t}\r\n\t    if(i===null) {\r\n\t        return this.getTokens(FFFZParser.COMMA);\r\n\t    } else {\r\n\t        return this.getToken(FFFZParser.COMMA, i);\r\n\t    }\r\n\t};\r\n\r\n\r\n\tenterRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.enterFffz(this);\r\n\t\t}\r\n\t}\r\n\r\n\texitRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.exitFffz(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass PolynomialContext extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext {\r\n\r\n    constructor(parser, parent, invokingState) {\r\n        if(parent===undefined) {\r\n            parent = null;\r\n        }\r\n        if(invokingState===undefined || invokingState===null) {\r\n            invokingState = -1;\r\n        }\r\n        super(parent, invokingState);\r\n        this.parser = parser;\r\n        this.ruleIndex = FFFZParser.RULE_polynomial;\r\n    }\r\n\r\n\titem = function(i) {\r\n\t    if(i===undefined) {\r\n\t        i = null;\r\n\t    }\r\n\t    if(i===null) {\r\n\t        return this.getTypedRuleContexts(ItemContext);\r\n\t    } else {\r\n\t        return this.getTypedRuleContext(ItemContext,i);\r\n\t    }\r\n\t};\r\n\r\n\tPLUS = function(i) {\r\n\t\tif(i===undefined) {\r\n\t\t\ti = null;\r\n\t\t}\r\n\t    if(i===null) {\r\n\t        return this.getTokens(FFFZParser.PLUS);\r\n\t    } else {\r\n\t        return this.getToken(FFFZParser.PLUS, i);\r\n\t    }\r\n\t};\r\n\r\n\r\n\tenterRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.enterPolynomial(this);\r\n\t\t}\r\n\t}\r\n\r\n\texitRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.exitPolynomial(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass ExponentContext extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext {\r\n\r\n    constructor(parser, parent, invokingState) {\r\n        if(parent===undefined) {\r\n            parent = null;\r\n        }\r\n        if(invokingState===undefined || invokingState===null) {\r\n            invokingState = -1;\r\n        }\r\n        super(parent, invokingState);\r\n        this.parser = parser;\r\n        this.ruleIndex = FFFZParser.RULE_exponent;\r\n    }\r\n\r\n\tfactor() {\r\n\t    return this.getTypedRuleContext(FactorContext,0);\r\n\t};\r\n\r\n\tOMEGA() {\r\n\t    return this.getToken(FFFZParser.OMEGA, 0);\r\n\t};\r\n\r\n\tPOWER() {\r\n\t    return this.getToken(FFFZParser.POWER, 0);\r\n\t};\r\n\r\n\texponent() {\r\n\t    return this.getTypedRuleContext(ExponentContext,0);\r\n\t};\r\n\r\n\tLPAREN() {\r\n\t    return this.getToken(FFFZParser.LPAREN, 0);\r\n\t};\r\n\r\n\tpolynomial() {\r\n\t    return this.getTypedRuleContext(PolynomialContext,0);\r\n\t};\r\n\r\n\tRPAREN() {\r\n\t    return this.getToken(FFFZParser.RPAREN, 0);\r\n\t};\r\n\r\n\tenterRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.enterExponent(this);\r\n\t\t}\r\n\t}\r\n\r\n\texitRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.exitExponent(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass ItemContext extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext {\r\n\r\n    constructor(parser, parent, invokingState) {\r\n        if(parent===undefined) {\r\n            parent = null;\r\n        }\r\n        if(invokingState===undefined || invokingState===null) {\r\n            invokingState = -1;\r\n        }\r\n        super(parent, invokingState);\r\n        this.parser = parser;\r\n        this.ruleIndex = FFFZParser.RULE_item;\r\n    }\r\n\r\n\tfactor() {\r\n\t    return this.getTypedRuleContext(FactorContext,0);\r\n\t};\r\n\r\n\tOMEGA() {\r\n\t    return this.getToken(FFFZParser.OMEGA, 0);\r\n\t};\r\n\r\n\tMUL() {\r\n\t    return this.getToken(FFFZParser.MUL, 0);\r\n\t};\r\n\r\n\tPOWER() {\r\n\t    return this.getToken(FFFZParser.POWER, 0);\r\n\t};\r\n\r\n\texponent() {\r\n\t    return this.getTypedRuleContext(ExponentContext,0);\r\n\t};\r\n\r\n\tLPAREN() {\r\n\t    return this.getToken(FFFZParser.LPAREN, 0);\r\n\t};\r\n\r\n\tRPAREN() {\r\n\t    return this.getToken(FFFZParser.RPAREN, 0);\r\n\t};\r\n\r\n\tenterRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.enterItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\texitRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.exitItem(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass FactorContext extends antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ParserRuleContext {\r\n\r\n    constructor(parser, parent, invokingState) {\r\n        if(parent===undefined) {\r\n            parent = null;\r\n        }\r\n        if(invokingState===undefined || invokingState===null) {\r\n            invokingState = -1;\r\n        }\r\n        super(parent, invokingState);\r\n        this.parser = parser;\r\n        this.ruleIndex = FFFZParser.RULE_factor;\r\n    }\r\n\r\n\tINTEGER_LITERAL() {\r\n\t    return this.getToken(FFFZParser.INTEGER_LITERAL, 0);\r\n\t};\r\n\r\n\tenterRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.enterFactor(this);\r\n\t\t}\r\n\t}\r\n\r\n\texitRule(listener) {\r\n\t    if(listener instanceof _FFFZListener_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ) {\r\n\t        listener.exitFactor(this);\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nFFFZParser.RootContext = RootContext; \r\nFFFZParser.FffzContext = FffzContext; \r\nFFFZParser.PolynomialContext = PolynomialContext; \r\nFFFZParser.ExponentContext = ExponentContext; \r\nFFFZParser.ItemContext = ItemContext; \r\nFFFZParser.FactorContext = FactorContext; \r\n\n\n//# sourceURL=webpack://fseq/./src/FFFZParser/FFFZParser.js?");

/***/ }),

/***/ "./src/FSeq.js":
/*!*********************!*\
  !*** ./src/FSeq.js ***!
  \*********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FSeq)\n/* harmony export */ });\nclass FSeq {\r\n    \r\n    static N = 3;\r\n    static M = 1;\r\n\r\n    static expand(seq) {\r\n        if (this.isEmpty(seq)) {\r\n            return seq;\r\n        }\r\n        if (this.isOne(seq)) {\r\n            return [];\r\n        }\r\n        const subSeqs = this.getSubSeq(seq);\r\n        const a = subSeqs[subSeqs.length - 1];\r\n        const b = subSeqs.length > 1 ? subSeqs[subSeqs.length - 2] : null;\r\n\r\n        // If a < b, expand to (a)\r\n        if (!this.isEmpty(b) && this.compare(a, b) < 0) {\r\n            return this.expand(this.getSupSeq0(a));\r\n        }\r\n        /*\r\n         * If [#,b,a] is compatible, expand to [#,b,a]([#,b,a](...[#,b,a](a)...))\r\n         * If [#,b,a] is not compatible\r\n         *     If a == b, expand to[#](expand(a))\r\n         *     If a != b, expand to [#,b](expand(a))\r\n         */\r\n        if (this.compareL(subSeqs) > 0) {\r\n            let result = a;\r\n            if(!this.isLimit(a)){\r\n                result = this.expand(a);\r\n            }\r\n            for (let i = 0; i < this.N; i++) {\r\n                result = this.getSupSeq1(subSeqs, subSeqs.length, result);\r\n            }\r\n            return result;\r\n        } else {\r\n            if (this.compare(a, b) === 0) {\r\n                const c = subSeqs.length > 2 ? subSeqs[subSeqs.length-3] : null;\r\n                const newA = this.add(c,this.expand(this.minus(a, c)));\r\n                return this.getSupSeq1(subSeqs,subSeqs.length-2,newA);\t\r\n            }else{\r\n                let newA;\r\n                if(!this.isLimit(b)) {\r\n                    const b_pre = this.expand(b);\r\n                    newA = this.add(b_pre,this.expand(this.minus(a, b_pre)));\r\n                }else {\r\n                    newA = this.add(b,this.expand(this.minus(a, b)));\r\n                }\r\n                return this.getSupSeq1(subSeqs, subSeqs.length - 1, newA);\r\n            }\r\n        }\r\n    }\r\n\r\n    static compareL(subSeqs) {\r\n\t\tif(subSeqs == null ||subSeqs.length == 0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t\r\n\t\tconst a = subSeqs[subSeqs.length-1];\r\n\t\tconst b = subSeqs.length > 1 ? subSeqs[subSeqs.length-2] : null;\r\n\t\tif(this.compareL1(b, a)>0) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\tif(this.compareL2(b, a)>0) {\r\n\t\t\tlet new_subSeqs = [...subSeqs];\r\n            new_subSeqs.splice(new_subSeqs.length-2,1)\r\n\t\t\tif(this.compareL(new_subSeqs)>0) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.compareL1(b, a);\r\n\t}\r\n\r\n    static compareL1(seq1, seq2) {\r\n        if (this.isEmpty(seq1) || this.isEmpty(seq2)) {\r\n            return !this.isEmpty(seq1) ? -1 : !this.isEmpty(seq2) ? 1 : 0;\r\n        }\r\n\r\n        if (!this.isLimit(seq1) && !this.isLimit(seq2)) {\r\n            return 0;\r\n        }\r\n        if (!this.isLimit(seq1) && this.isLimit(seq2)) {\r\n            return -1;\r\n        }\r\n        if (this.isLimit(seq1) && !this.isLimit(seq2)) {\r\n            return 1;\r\n        }\r\n\r\n        \r\n        const subSeqs1 = this.getSubSeq(seq1);\r\n        const subSeqs2 = this.getSubSeq(seq2);\r\n        \r\n        //如果fffz表示为ψZ[#,b](a)，假设它的等级，完全由b和a决定;\r\n        \r\n        const a1 = subSeqs1[subSeqs1.length - 1];\r\n        const b1 = subSeqs1.length > 1 ? subSeqs1[subSeqs1.length - 2] : null;\r\n        \r\n        const a2 = subSeqs2[subSeqs2.length - 1];\r\n        const b2 = subSeqs2.length > 1 ? subSeqs2[subSeqs2.length - 2] : null;\r\n\r\n\t\tif(!this.isLimit(b1)) {\r\n\t\t\treturn this.compareL1(a1, seq2);\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.isLimit(b2)) {\r\n\t\t\treturn this.compareL1(seq1, a2);\r\n\t\t}\r\n\r\n        if(!this.isLimit(a1) && !this.isLimit(a2)) {\r\n\t\t\treturn this.compare(a1, a2);\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.isLimit(a1) || !this.isLimit(a2)) {\r\n\t\t\treturn this.compareL1(a1, a2);\r\n\t\t}\r\n\r\n        if(this.compareL1(b1, b2) == 0) {\r\n\t\t\treturn this.compareL1(a1, a2);\r\n\t\t}\r\n\t\t\r\n\t\tif((this.compareL1(a1, b1)<0 || this.compareL1(a2, b2)<0)) {\r\n\t\t\treturn this.compareL1(this.getRealCore(seq1), this.getRealCore(seq2));\r\n\t\t}\r\n\r\n\t\tif(this.compareL1(a2, this.getSupSeq0(b2))>=0) {\r\n\t\t\treturn this.compareL1(seq1, a2);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.compareL1(a1, this.getSupSeq0(b1))>=0) {\r\n\t\t\treturn this.compareL1(a1, seq2);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.compareL1(b1,b2);\r\n    }\r\n\r\n    static compareL2(seq1, seq2) {\r\n        if (this.isEmpty(seq1) || this.isEmpty(seq2)) {\r\n            return !this.isEmpty(seq1) ? -1 : !this.isEmpty(seq2) ? 1 : 0;\r\n        }\r\n\r\n        if (!this.isLimit(seq1) && !this.isLimit(seq2)) {\r\n            return 0;\r\n        }\r\n        if (!this.isLimit(seq1) && this.isLimit(seq2)) {\r\n            return -1;\r\n        }\r\n        if (this.isLimit(seq1) && !this.isLimit(seq2)) {\r\n            return 1;\r\n        }\r\n\r\n        \r\n        const subSeqs1 = this.getSubSeq(seq1);\r\n        const subSeqs2 = this.getSubSeq(seq2);\r\n        \r\n        //如果fffz表示为ψZ[#,b](a)，假设它的等级，完全由b和a决定;\r\n        \r\n        const a1 = subSeqs1[subSeqs1.length - 1];\r\n        const b1 = subSeqs1.length > 1 ? subSeqs1[subSeqs1.length - 2] : null;\r\n        \r\n        const a2 = subSeqs2[subSeqs2.length - 1];\r\n        const b2 = subSeqs2.length > 1 ? subSeqs2[subSeqs2.length - 2] : null;\r\n\r\n        if(!this.isLimit(b1) || !this.isLimit(b2)) {\r\n            if(this.compare(seq1, seq2)>0 && this.compare(this.getAddCore(seq1),this.getAddCore(seq2))<0) {\r\n                return -1;\r\n            }\r\n            if(this.compare(seq1, seq2)<0 && this.compare(this.getAddCore(seq1),this.getAddCore(seq2))>0) {\r\n                return 1;\r\n            }\r\n            return this.compareL2(this.getAddCore(seq1), this.getAddCore(seq2));\r\n        }\r\n\r\n        if(!this.isLimit(a1) && !this.isLimit(a2)) {\r\n\t\t\treturn this.compare(a1, a2);\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.isLimit(a1) || !this.isLimit(a2)) {\r\n\t\t\treturn this.compareL2(a1, a2);\r\n\t\t}\r\n\r\n        if(this.compareL2(b1, b2) == 0) {\r\n\t\t\treturn this.compareL2(a1, a2);\r\n\t\t}\r\n\t\t\r\n\t\tif((this.compareL2(a1, b1)<0 || this.compareL2(a2, b2)<0)) {\r\n\t\t\treturn this.compareL2(this.getRealCore(seq1), this.getRealCore(seq2));\r\n\t\t}\r\n\r\n\t\tif(this.compareL2(a2, this.getSupSeq0(b2))>=0) {\r\n\t\t\treturn this.compareL2(seq1, a2);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.compareL2(a1, this.getSupSeq0(b1))>=0) {\r\n\t\t\treturn this.compareL2(a1, seq2);\r\n\t\t}\r\n\t\t\r\n\t\treturn this.compareL2(b1,b2);\r\n    }\r\n\r\n    static compare(seq1, seq2) {\r\n        if (this.isEmpty(seq1) || this.isEmpty(seq2)) {\r\n            return !this.isEmpty(seq1) ? 1 : !this.isEmpty(seq2) ? -1 : 0;\r\n        }\r\n\r\n        const subSeqs1 = this.getSubSeq(seq1);\r\n        const subSeqs2 = this.getSubSeq(seq2);\r\n\r\n        for (let i = 0; i < Math.min(subSeqs1.length, subSeqs2.length); i++) {\r\n            const compare = this.compare(subSeqs1[i], subSeqs2[i]);\r\n            if (compare === 0) {\r\n                continue;\r\n            } else {\r\n                return compare;\r\n            }\r\n        }\r\n        return subSeqs2.length - subSeqs1.length;\r\n    }\r\n\r\n    static getSubSeq(seq) {\r\n        const resultList = [];\r\n        const item = [];\r\n        for (let i = 1; i < seq.length; i++) {\r\n            if (1 === seq[i]) {\r\n                resultList.push([...item]);\r\n                item.length = 0;\r\n                continue;\r\n            }\r\n            item.push(seq[i] - 1);\r\n        }\r\n        resultList.push([...item]);\r\n        const result = resultList.map(arr => [...arr]);\r\n        return result;\r\n    }\r\n    \r\n    static getSupSeq1(subSeqArray, retainLength, ...appendSubSeqArray) {\r\n        const resultList = [];\r\n        for (let i = 0; i < retainLength; i++) {\r\n            resultList.push(1);\r\n            const param_i = subSeqArray[i];\r\n            if (this.isEmpty(param_i)) {\r\n                continue;\r\n            }\r\n            for (let j = 0; j < param_i.length; j++) {\r\n                resultList.push(param_i[j] + 1);\r\n            }\r\n        }\r\n        if (appendSubSeqArray != null && appendSubSeqArray.length > 0) {\r\n            for (let i = 0; i < appendSubSeqArray.length; i++) {\r\n                resultList.push(1);\r\n                if (this.isEmpty(appendSubSeqArray[i])) {\r\n                    continue;\r\n                }\r\n                const param_i = appendSubSeqArray[i];\r\n                for (let j = 0; j < param_i.length; j++) {\r\n                    resultList.push(param_i[j] + 1);\r\n                }\r\n            }\r\n        }\r\n        return resultList;\r\n    }\r\n    \r\n    static getSupSeq0(...subSeqArray) {\r\n        const resultList = [];\r\n        for (let i = 0; i < subSeqArray.length; i++) {\r\n            resultList.push(1);\r\n            if (this.isEmpty(subSeqArray[i])) {\r\n                continue;\r\n            }\r\n            const param_i = subSeqArray[i];\r\n            for (let j = 0; j < param_i.length; j++) {\r\n                const param_i_j = param_i[j];\r\n                resultList.push(param_i_j + 1);\r\n            }\r\n        }\r\n        return resultList;\r\n    }\r\n\r\n    static getSupSeq00(subSeqArray) {\r\n        const resultList = [];\r\n        for (let i = 0; i < subSeqArray.length; i++) {\r\n            resultList.push(1);\r\n            if (this.isEmpty(subSeqArray[i])) {\r\n                continue;\r\n            }\r\n            const param_i = subSeqArray[i];\r\n            for (let j = 0; j < param_i.length; j++) {\r\n                const param_i_j = param_i[j];\r\n                resultList.push(param_i_j + 1);\r\n            }\r\n        }\r\n        return resultList;\r\n    }\r\n\r\n    static getRealCore(seq){\r\n\t\tif(this.isOne(seq)) {\r\n\t\t\treturn seq;\r\n\t\t}\r\n\t\tconst subSeqs = this.getSubSeq(seq);\r\n\t\tconst a = subSeqs[subSeqs.length-1];\r\n\t\tconst b = subSeqs.length>1?subSeqs[subSeqs.length-2]:null;\r\n\t\tif(this.compareL2(b, a) > 0 && this.isLimit(a)) {\r\n\t\t\treturn a;\r\n\t\t}else {\r\n\t\t\treturn this.getRealCore(a);\r\n\t\t}\r\n\t}\r\n\r\n    static getAddCore(seq){\r\n\t\tif(this.isOne(seq)) {\r\n\t\t\treturn seq;\r\n\t\t}\r\n\t\tconst subSeqs = this.getSubSeq(seq);\r\n\t\tconst a = subSeqs[subSeqs.length-1];\r\n\t\tconst b = subSeqs.length>1?subSeqs[subSeqs.length-2]:null;\r\n\t\tif(this.isLimit(b)) {\r\n\t\t\treturn seq;\r\n\t\t}else {\r\n\t\t\treturn this.getAddCore(a);\r\n\t\t}\r\n\t}\r\n    \r\n    static getSuccessorPartIntValue(seq) {\r\n        let result = 0;\r\n        let tmpSeq = seq;\r\n        while (true) {\r\n            if (this.isLimit(tmpSeq)) {\r\n                return result;\r\n            }\r\n            tmpSeq = this.expand(tmpSeq);\r\n            result++;\r\n        }\r\n    }\r\n    \r\n    static getLimitPart(seq) {\r\n        let result = seq;\r\n        while (true) {\r\n            if (this.isLimit(result)) {\r\n                return result;\r\n            }\r\n            result = this.expand(result);\r\n        }\r\n    }\r\n    \r\n    static isEmpty(seq) {\r\n        return seq == null || seq.length === 0;\r\n    }\r\n    \r\n    static isLimit(seq) {\r\n        if (this.isEmpty(seq)) {\r\n            return true;\r\n        }\r\n        if (this.isOne(seq)) {\r\n            return false;\r\n        }\r\n        const subSeqs = this.getSubSeq(seq);\r\n        \r\n        const a = subSeqs[subSeqs.length - 1];\r\n        const b = subSeqs.length > 1 ? subSeqs[subSeqs.length - 2] : null;\r\n        return this.isLimit(b) || this.isLimit(a);\r\n    }\r\n    \r\n    static isOne(seq) {\r\n        if (seq == null || seq.length < this.M) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < this.M + 1 && i < seq.length; i++) {\r\n            if (seq[i] !== 1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    static getSeq(n) {\r\n        if (n === 0) {\r\n            return null;\r\n        }\r\n        const one = this.getOne();\r\n        let result = one;\r\n        for (let i = 0; i < n - 1; i++) {\r\n            result = this.getSupSeq0(one, result);\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    static getOne() {\r\n        const one = new Array(this.M);\r\n        for (let i = 0; i < this.M; i++) {\r\n            one[i] = 1;\r\n        }\r\n        return one;\r\n    }\r\n\r\n    static getOumiga() {\r\n\t\treturn this.getSupSeq0(this.getOne());\r\n\t}\r\n\t\r\n    static getEpsilon0() {\r\n\t\treturn this.getSupSeq0(this.getOumiga());\r\n\t}\r\n\r\n    static getSuccessor(seq) {\r\n\t\tif (this.isEmpty(seq)) {\r\n\t\t\treturn this.getOne();\r\n\t\t}\r\n\t\tif (this.isOne(seq)) {\r\n\t\t\treturn this.getSupSeq0(seq, seq);\r\n\t\t}\r\n\t\tconst subSeq = this.getSubSeq(seq);\r\n\t\tconst successor = this.getSuccessor(subSeq[subSeq.length - 1]);\r\n\t\tif (this.isLimit(seq)) {\r\n\t\t\treturn this.getSupSeq1(subSeq, subSeq.length - 1, successor, successor);\r\n\t\t} else {\r\n\t\t\treturn this.getSupSeq1(subSeq, subSeq.length - 1, successor);\r\n\t\t}\r\n\t}\r\n\r\n    static minus(seq1, seq2) {\r\n        if (this.compare(seq1, seq2) < 0) {\r\n            throw new Error(\"Runtime Exception\");\r\n        }\r\n        if (this.compare(seq1, seq2) === 0) {\r\n            return [];\r\n        }\r\n        \r\n        let list1 = this.fseq2Items(seq1);\r\n        list1.sort((e1, e2) => this.compare(e2, e1));\r\n        let list2 = this.fseq2Items(seq2);\r\n        list2.sort((e1, e2) => this.compare(e2, e1));\r\n        \r\n        let startIndex = 0;\r\n        for (let i = 0; i < Math.min(list1.length, list2.length); i++) {\r\n            if (this.compare(list1[i], list2[i]) > 0) {\r\n                break;\r\n            } else {\r\n                startIndex = i + 1;\r\n            }\r\n        }\r\n        let preResult = list1.slice(startIndex);\r\n        return this.items2Fseq(preResult);\r\n    }\r\n    \r\n    static add(seq1, seq2) {\r\n        if (this.isEmpty(seq1) || this.isEmpty(seq2)) {\r\n            return this.isEmpty(seq1) ? seq2 : seq1;\r\n        }\r\n\r\n        let list1 = this.fseq2Items(seq1);\r\n        list1.sort((e1, e2) => this.compare(e2, e1));\r\n        let list2 = this.fseq2Items(seq2);\r\n        list2.sort((e1, e2) => this.compare(e2, e1));\r\n        let preResult = [];\r\n        for (let item of list1) {\r\n            if (this.compare(item, list2[0]) >= 0) {\r\n                preResult.push(item);\r\n            }\r\n        }\r\n        preResult.push(...list2);\r\n        return this.items2Fseq(preResult);\r\n    }\r\n\r\n    static fseq2Items(seq) {\r\n        let result = [];\r\n        if (this.isEmpty(seq)) {\r\n            return result;\r\n        }\r\n        if (this.isOne(seq)) {\r\n            result.push(seq);\r\n            return result;\r\n        }\r\n        \r\n        if (this.isTwo(seq)) {\r\n            let one = this.getOne();\r\n            result.push(one);\r\n            result.push(one);\r\n            return result;\r\n        }\r\n        \r\n        let subSeqs = this.getSubSeq(seq);\r\n        let a = subSeqs[subSeqs.length - 1];\r\n        let b = subSeqs.length > 1 ? subSeqs[subSeqs.length - 2] : null;\r\n        \r\n        if (this.isLimit(b)) {\r\n            result.push(seq);\r\n            return result;\r\n        } else {\r\n            let b_pre = this.expand(b);\r\n            let items = this.fseq2Items(this.minus(a, b_pre));\r\n            let item = this.getSupSeq1(subSeqs, subSeqs.length - 2, b_pre);\r\n            items.push(item);\r\n            return items;\r\n        }\r\n    }\r\n\r\n    static items2Fseq(preResult) {\r\n        preResult.sort((e1, e2) => this.compare(e1, e2));\r\n        let result = [];\r\n        for (let is of preResult) {\r\n            if (this.isEmpty(result)) {\r\n                result = is;\r\n                continue;\r\n            }\r\n            if (this.isOne(is)) {\r\n                result = this.getSuccessor(result);\r\n            } else {\r\n                let subSeqs = this.getSubSeq(is);\r\n                let a = subSeqs[subSeqs.length - 1];\r\n                let successor_a = this.getSuccessor(a);\r\n                let new_a = this.add(a, result);\r\n                result = this.getSupSeq1(subSeqs, subSeqs.length - 1, successor_a, new_a);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static isTwo(seq) {\r\n        return this.compare(seq, this.getTwo()) === 0;\r\n    }\r\n\r\n    static getTwo() {\r\n        return this.getSupSeq0(this.getOne(), this.getOne());\r\n    }\r\n}\n\n//# sourceURL=webpack://fseq/./src/FSeq.js?");

/***/ }),

/***/ "./src/FSeqConverter.js":
/*!******************************!*\
  !*** ./src/FSeqConverter.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FSeqConverter)\n/* harmony export */ });\n/* harmony import */ var antlr4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antlr4 */ \"./node_modules/antlr4/dist/antlr4.web.mjs\");\n/* harmony import */ var _FFFZParser_FFFZLexer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FFFZParser/FFFZLexer.js */ \"./src/FFFZParser/FFFZLexer.js\");\n/* harmony import */ var _FFFZParser_FFFZParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FFFZParser/FFFZParser.js */ \"./src/FFFZParser/FFFZParser.js\");\n/* harmony import */ var _FFFZParser_FFFZ2SeqListener_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FFFZParser/FFFZ2SeqListener.js */ \"./src/FFFZParser/FFFZ2SeqListener.js\");\n/* harmony import */ var _FFFZParser_FFFZErrorListener_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./FFFZParser/FFFZErrorListener.js */ \"./src/FFFZParser/FFFZErrorListener.js\");\n/* harmony import */ var _FFFZParser_CNFNode_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FFFZParser/CNFNode.js */ \"./src/FFFZParser/CNFNode.js\");\n/* harmony import */ var _FFFZParser_CNFUtil_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FFFZParser/CNFUtil.js */ \"./src/FFFZParser/CNFUtil.js\");\n/* harmony import */ var _FSeq_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FSeq.js */ \"./src/FSeq.js\");\n\r\n\r\n\r\n\r\n\r\n//import FFFZErrorStrategy from \"./FFFZParser/FFFZErrorStrategy.js\"\r\n\r\n\r\n\r\n\r\nclass FSeqConverter {\r\n    \r\n    static fffz2FSeq(express) {\r\n        const input = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InputStream(express);\r\n        const lexer = new _FFFZParser_FFFZLexer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](input);\r\n        const tokens = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CommonTokenStream(lexer);\r\n        const parser = new _FFFZParser_FFFZParser_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](tokens);\r\n        const errorlistener = new _FFFZParser_FFFZErrorListener_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()\r\n        parser.removeErrorListeners();\r\n        parser.addErrorListener(errorlistener);\r\n        const expr = parser.root();\r\n        const listener = new _FFFZParser_FFFZ2SeqListener_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n        antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tree.ParseTreeWalker.DEFAULT.walk(listener, expr);\r\n        const seq = listener.getSeq(expr);\r\n        return seq;\r\n    }\r\n\r\n    static validateFFFZ(express) {\r\n        const errorlistener = new _FFFZParser_FFFZErrorListener_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n        //const errorStrategy = new FFFZErrorStrategy();\r\n        const input = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InputStream(express);\r\n        const lexer = new _FFFZParser_FFFZLexer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](input);\r\n        lexer.addErrorListener(errorlistener)\r\n        //lexer._errHandler = errorStrategy;\r\n        const tokens = new antlr4__WEBPACK_IMPORTED_MODULE_0__[\"default\"].CommonTokenStream(lexer);\r\n        const parser = new _FFFZParser_FFFZParser_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](tokens);\r\n        parser.addErrorListener(errorlistener);\r\n        //parser._errHandler = errorStrategy;\r\n        parser.root();\r\n        return errorlistener.errors;\r\n    }\r\n\r\n    static validateSeq(seq) {\r\n        let errors = [];\r\n        for (let i = 1; i < seq.length; i++) {\r\n            if(seq[i]<=0 || seq[i]-seq[i-1]>1){\r\n                errors.push(\"fseq Input validate fail !\")\r\n            }\r\n        }    \r\n        return errors;\r\n    }\r\n\r\n    static validateFake(seq) {\r\n        let errors = [];\r\n        const subSeqs = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getSubSeq(seq);\r\n        let temp_subSeqs = [];\r\n        let temp_subSeqStrs = [];\r\n        temp_subSeqs.push(subSeqs[0]);\r\n        temp_subSeqStrs.push(this.fSeq2FFFZ(subSeqs[0],0))\r\n        for (let i = 1; i < subSeqs.length-1; i++) {\r\n            temp_subSeqs.push(subSeqs[i]);\r\n            temp_subSeqStrs.push(this.fSeq2FFFZ(subSeqs[i],0))\r\n            if(_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].compareL(temp_subSeqs)<=0){\r\n                errors.push(`fake validate fail [${temp_subSeqStrs}] not exist !`);\r\n            }\r\n        }    \r\n        return errors;\r\n    }\r\n    \r\n    static fSeq2FFFZ(seq, n) {\r\n        if (seq == null) {\r\n            return \"0\";\r\n        }\r\n        if (seq.length === 0) {\r\n            return \"0\";\r\n        }\r\n        if (n <= 0) {\r\n            if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isOne(seq)) {\r\n                return \"1\";\r\n            }\r\n            const direct = this.convertCNFStr(seq);\r\n            if (direct != null) {\r\n                return direct;\r\n            }\r\n        }\r\n        const subSeqs = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getSubSeq(seq);\r\n        let builder = \"ψZ\";\r\n        if (subSeqs.length === 1) {\r\n            builder += \"(\";\r\n            const a = this.fSeq2FFFZ(subSeqs[subSeqs.length - 1], n - 1);\r\n            builder += a;\r\n            builder += \")\";\r\n            return builder;\r\n        }\r\n        builder += \"[\";\r\n        for (let i = 0; i < subSeqs.length - 2; i++) {\r\n            const convert = this.fSeq2FFFZ(subSeqs[i], n - 1);\r\n            builder += convert + \",\";\r\n        }\r\n        const b = this.fSeq2FFFZ(subSeqs[subSeqs.length - 2], n - 1);\r\n        builder += b + \"](\";\r\n        const a = this.fSeq2FFFZ(subSeqs[subSeqs.length - 1], n - 1);\r\n        builder += a + \")\";\r\n        return builder;\r\n    }\r\n\r\n    static convertCNFStr(seq) {\r\n        const epsilon0 = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getEpsilon0();\r\n        if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].compare(seq, epsilon0) > 0) {\r\n            return null;\r\n        }\r\n        if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].compare(seq, epsilon0) === 0) {\r\n            return \"ε0\";\r\n        }\r\n        const cnf = this.convertToCNF(seq);\r\n        return _FFFZParser_CNFUtil_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].toString(cnf);\r\n    }\r\n    \r\n    static convertToCNF(seq) {\r\n        const convertToInteger = this.convertToInteger(seq);\r\n        if (convertToInteger != null) {\r\n            const result = [];\r\n            result.push(new _FFFZParser_CNFNode_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](null, convertToInteger));\r\n            return result;\r\n        }\r\n        const subSeq = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getSubSeq(seq);\r\n        const a = subSeq[subSeq.length - 1];\r\n        const b = subSeq.length > 1 ? subSeq[subSeq.length - 2] : null;\r\n        const cnf_a = this.convertToCNF(a);\r\n        if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isLimit(b)) {\r\n            const result = [];\r\n            result.push(new _FFFZParser_CNFNode_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](cnf_a, 1));\r\n            return result;\r\n        }\r\n        const pre_b = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].expand(b);\r\n        const cnf_pre_b = this.convertToCNF(pre_b);\r\n        const cnf2 = _FFFZParser_CNFUtil_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].minus(cnf_a, cnf_pre_b);\r\n        const cnf1 = this.convertToCNF(_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getSupSeq1(subSeq, subSeq.length - 2, pre_b));\r\n        return _FFFZParser_CNFUtil_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].add1(cnf1, cnf2);\r\n    }\r\n    \r\n    static convertToInteger(seq) {\r\n        if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(seq)) {\r\n            return 0;\r\n        }\r\n        if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isOne(seq)) {\r\n            return 1;\r\n        }\r\n        const oumiga = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getOumiga();\r\n        if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].compare(seq, oumiga) >= 0) {\r\n            return null;\r\n        }\r\n        let result = 0;\r\n        let tmpSeq = seq;\r\n        while (true) {\r\n            if (_FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isLimit(tmpSeq)) {\r\n                return _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].isEmpty(tmpSeq) ? result : null;\r\n            }\r\n            tmpSeq = _FSeq_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].expand(tmpSeq);\r\n            result++;\r\n        }\r\n    }\r\n    \r\n\r\n}\n\n//# sourceURL=webpack://fseq/./src/FSeqConverter.js?");

/***/ }),

/***/ "./src/FakeTest.js":
/*!*************************!*\
  !*** ./src/FakeTest.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FakeTest)\n/* harmony export */ });\n/* harmony import */ var _FSeq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FSeq.js */ \"./src/FSeq.js\");\n\r\n\r\nclass FakeTest {\r\n    \r\n    static map = new Map();\r\n    \r\n    static getSuccessor(seq) {\r\n        return _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSuccessor(FakeTest.map.get(seq));\r\n    }\r\n    \r\n    static getSupSeq(...ordinals) {\r\n        const subSeqs = new Array(ordinals.length);\r\n        for (let i = 0; i < ordinals.length; i++) {\r\n            subSeqs[i] = FakeTest.map.get(ordinals[i]);\r\n            if (subSeqs[i] === undefined) {\r\n                console.log(`${ordinals[i]} 不存在`);\r\n            }\r\n        }\r\n        return _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getSupSeq00(subSeqs);\r\n    }\r\n\tstatic test(ordinal1, ordinal2, assertResult) {\r\n\t\tthis.test1(ordinal1, ordinal2, assertResult);\r\n\t\tthis.test1(ordinal2, ordinal1, 0-assertResult);\r\n\t}\t\r\n\r\n    \r\n    static test1(ordinal1, ordinal2, assertResult) {\r\n        const seq1 = FakeTest.map.get(ordinal1);\r\n        const seq2 = FakeTest.map.get(ordinal2);\r\n        if (seq1 === undefined) {\r\n            console.log(`${ordinal1} 不存在`);\r\n        }\r\n        if (seq2 === undefined) {\r\n            console.log(`${ordinal2} 不存在`);\r\n        }\r\n\t\tlet assertResultMsg = assertResult===1?\"存在\":\"不存在\";\r\n        if (seq1 !== undefined && seq2 !== undefined) {\r\n            const compareL = _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareL2(seq1, seq2);\r\n\t\t\tlet compareLMsg = compareL===1?\"存在\":\"不存在\";\r\n\t\t\tif((compareL >0 && assertResult > 0) \r\n\t\t\t\t|| (compareL === 0 && assertResult === 0)\r\n\t\t\t    || (compareL < 0 && assertResult < 0)\r\n\t\t\t){\r\n\t\t\t\tconsole.log(`[${ordinal1},${ordinal2}] ${compareLMsg} ，符合预期结果 ${assertResultMsg}`);\r\n\t\t\t} else if ((compareL>0 && assertResult<=0) ||(compareL<=0 && assertResult>0)  ){\r\n\t\t\t\tconsole.error(`[${ordinal1},${ordinal2}] ${compareLMsg}， 不符合预期结果 ${assertResultMsg}`);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn(`[${ordinal1},${ordinal2}] ${compareLMsg}${compareL}， 不符合预期结果 ${assertResultMsg}${assertResult}`);\r\n\t\t\t}\r\n        }\r\n    }\r\n\r\n\tstatic test2(assertResult, ...ordinals) {\r\n\t\tconst seqs = new Array(ordinals.length);\r\n\t\tlet i = 0;\r\n\t\tfor (const ordinal of ordinals) {\r\n\t\t\tconst seq = FakeTest.map.get(ordinal);\r\n\t\t\tif (seq === null) {\r\n\t\t\t\tconsole.log(`${ordinal}不存在`);\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tseqs[i] = seq;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst compareL = _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compareL(seqs);\r\n\t\tconst compareLMsg = compareL > 0 ? \"\" : \"不\";\r\n\t\tconst assertMsg = assertResult > 0 ? \"\" : \"不\";\r\n\t\r\n\t\tconst join = ordinals.join(\",\");\r\n\t\tif ((compareL > 0 && assertResult > 0) \r\n\t\t\t|| (compareL === 0 && assertResult === 0)\r\n\t\t\t|| (compareL < 0 && assertResult < 0)) {\r\n\t\t\tconsole.log(`[${join}] ${compareLMsg}存在，符合预期结果 ${assertMsg}存在`);\t\t\t\r\n\t\t} else if ((compareL > 0 && assertResult <= 0) || (compareL <= 0 && assertResult > 0)) {\r\n\t\t\tconsole.log(`[${join}]:${compareL}${compareLMsg}存在 不符合预期结果 ${assertResult}${assertMsg}存在`);\r\n\t\t} else {\r\n\t\t\tconsole.log(`[${join}]:${compareL}${compareLMsg}存在 不符合预期结果 ${assertResult}${assertMsg}存在`);\r\n\t\t}\r\n\t}\r\n    \r\n    static test0() {\r\n\t\tconsole.log(\"====================================================================================\");\r\n\t\tconsole.log(\"Fake测试\");\r\n\t\tconsole.log(\"====================================================================================\");\r\n        this.test(\"\", \"1\", 1);\r\n        this.test(\"\", \"1\", 1);\r\n\t\tthis.test(\"ω\", \"ω+1\", 1);\r\n\t\tthis.test(\"ω\", \"ω+2\", 1);\r\n\t\tthis.test(\"ω2\", \"ω2+1\", 1);\r\n\t\tthis.test(\"ω2\", \"ω2+2\", 1);\r\n\t\tthis.test(\"ω2\", \"ε0+1\", 1);\r\n\t\tthis.test(\"ω3\", \"ω3+1\", 1);\r\n\t\tthis.test(\"ω^2\", \"ω^2+1\", 1);\r\n\t\tthis.test(\"ω^2\", \"ω^2+1\", 1);\r\n\t\tthis.test(\"ω^2\", \"ω^2+ω\", 1);\r\n\t\tthis.test(\"ω^2+ω\",\"ω^2+ω+1\", 1);\r\n\t\tthis.test(\"ω^2+ω\",\"(ω^2)*2+1\", 1);\r\n\t\tthis.test(\"ω^2\", \"ω^2+ω+1\", 1);\r\n\t\tthis.test(\"ω^2\", \"ω^2+ω2\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω+1\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω+ω\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ω^(ω+1)\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^(ω+1)\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0*ω\", 1);\r\n\t\tthis.test(\"ω^(ω2)\", \"Γ0*ω\", 1);\r\n\t\tthis.test(\"ε0\", \"ε0+1\", 1);\r\n\t\tthis.test(\"ε0\", \"ε0+ω\", 1);\r\n\t\tthis.test(\"ε0\", \"ε0*ω\", 1);\r\n\t\tthis.test(\"ε0\", \"ε0^ω\", 1);\r\n\t\tthis.test(\"ε0\", \"ε(ω)\", 1);\r\n\t\tthis.test(\"ε0\", \"ε(ω2)\", 1);\r\n\t\tthis.test(\"ε0\", \"ε(ω^2)\", 1);\r\n\t\tthis.test(\"ε0\", \"ε(ω^ω)\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε0*2+ω\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε0*ω\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε0^ω\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε(ω)\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε(ω2)\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε(ω^2)\", 1);\r\n\t\tthis.test(\"ε0*2\", \"ε(ω^ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ε0*ω2\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ε0*ω^2\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ε0*ω^ω\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ε0^ω\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ε(ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ψ(Ω_ω*ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ψ(Ω_ω*ω2)\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ψ(Ω_ω*ω^2)\", 1);\r\n\t\tthis.test(\"ε0*(ω+1)\", \"ψ(Ω_ω*ω^ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω+2)\", \"ψ(Ω_ω*ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω^2+1)\", \"ψ((Ω_ω)^2*ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω^2+1)\", \"ψ((Ω_ω)^2*ω2)\", 1);\r\n\t\tthis.test(\"ε0*(ω^2+1)\", \"ψ((Ω_ω)^2*ω^2)\", 1);\r\n\t\tthis.test(\"ε0*(ω^2+1)\", \"ψ((Ω_ω)^2*ω^ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω^ω+1)\", \"ψ((Ω_ω)^ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω^ω+1)\", \"ψ((Ω_ω)^ω2)\", 1);\r\n\t\tthis.test(\"ε0*(ω^ω+1)\", \"ψ((Ω_ω)^ω*ω)\", 1);\r\n\t\tthis.test(\"ε0*(ω^ω+1)\", \"ψ((Ω_ω)^(ω2))\", 1);\r\n\t\tthis.test(\"ε0*(ω^ω+1)\", \"ψ((Ω_ω)^(ω^2))\", 1);\r\n\t\tthis.test(\"ε0*(ω^ω+1)\", \"ψ((Ω_ω)^(ω^ω))\", 1);\r\n\r\n\r\n\t\tthis.test(\"ω\", \"ω2\", 0);\r\n\t\tthis.test(\"ω\", \"ω^2\", -1);\r\n\t\tthis.test(\"ω\", \"ω^2+ω\", 0);\r\n\t\tthis.test(\"ω\", \"ω^(ω+1)\", -1);\r\n\t\tthis.test(\"ω\", \"ω^ω\", -1);\r\n\t\tthis.test(\"ω\", \"ω^ω+ω^2\", -1);\r\n\t\tthis.test(\"ω\", \"ω^(ω+2)\", -1);\r\n\t\tthis.test(\"ω\", \"ω^ω^ω\", -1);\r\n\t\tthis.test(\"ω2\", \"ω3\", 0);\r\n\t\tthis.test(\"ω2\", \"ω^2+ω\", 0);\r\n\t\tthis.test(\"ω2\", \"ω^ω\", -1);\r\n\t\tthis.test(\"ω2\", \"ω^ω+ω^2\", -1);\r\n\t\tthis.test(\"ω2\", \"ω^(ω+1)\", -1);\r\n\t\tthis.test(\"ω2\", \"ω^(ω+2)\", -1);\r\n\t\tthis.test(\"ω2\", \"ω^ω^ω\", -1);\r\n\t\tthis.test(\"ω2\", \"ε0\", -1);\r\n\t\tthis.test(\"ω2\", \"ε0+ω\", 0);\r\n\t\tthis.test(\"ω2\", \"ε0*2\", -1);\r\n\t\tthis.test(\"ω2\", \"ε0*ω\", -1);\r\n\t\tthis.test(\"ω2\", \"ε0*ω^2\", -1);\r\n\t\tthis.test(\"ω3\", \"ω^2\", -1);\r\n\t\tthis.test(\"ω3\", \"ω^ω\", -1);\r\n\t\tthis.test(\"ω3\", \"ε0\", -1);\r\n\t\tthis.test(\"ω3\", \"ε1\", -1);\r\n\t\tthis.test(\"ω3\", \"ε1^2\", -1);\r\n\t\tthis.test(\"ω3\", \"ε1^ε1\", -1);\r\n\t\tthis.test(\"ω3\", \"ω4\", 0);\r\n\t\tthis.test(\"ω^2\", \"(ω^2)*2\",0);\r\n\t\tthis.test(\"ω^2\", \"(ω^2)*3\",0);\r\n\t\tthis.test(\"ω^2\", \"ω^3\",-1);\r\n\t\tthis.test(\"ω^2\", \"ω^ω\",-1);\r\n\t\tthis.test(\"ω^2\", \"ω^ω+ω^2\",0);\r\n\t\tthis.test(\"ω^2\", \"(ω^ω)*2+ω^2\",0);\r\n\t\tthis.test(\"ω^2\", \"ω^(ω+1)\",-1);//20240821修改\r\n\t\tthis.test(\"ω^2\", \"ω^(ω+2)\",-1);\r\n\t\tthis.test(\"ω^2\", \"ω^(ω+3)\",-1);\r\n\t\tthis.test(\"ω^2\", \"ω^(ω2+2)\",-1);\r\n\t\tthis.test(\"ω^2\", \"ω^(ω2+3)\",-1);\r\n\t\tthis.test(\"ω^2\", \"ε0\", -1);\r\n\t\tthis.test(\"ω^2\", \"ε0*ω\", -1);//20240821修改\r\n\t\tthis.test(\"ω^2\", \"ε0*ω^2\", -1);\r\n\t\tthis.test(\"ω^2\", \"ε0*ω^3\", -1);\r\n\t\tthis.test(\"ω^2\", \"ε(ε0)\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ω^2+ω2\", 0);\r\n\t\tthis.test(\"ω^2+ω\", \"(ω^2)*2\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"(ω^2)*2+ω\", 0);\r\n\t\tthis.test(\"ω^2+ω\", \"(ω^2)*3\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ω^3\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ω^ω\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ε0\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ε(ω)\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ε(ω)^2\", -1);\r\n\t\tthis.test(\"ω^2+ω\", \"ε(ω)^ε(ω)\", -1);\r\n\t\tthis.test(\"ω^2+ω2\", \"ε(ω)\", -1);\r\n\t\tthis.test(\"ω^2+ω2\", \"ε(ω+1)\", -1);\r\n\t\tthis.test(\"ω^2+ω2\", \"ε(ω+1)^2\", -1);\r\n\t\tthis.test(\"ω^2+ω2\", \"ε(ω+1)^ε(ω+1)\", -1);\r\n\t\tthis.test(\"(ω^2)*2\", \"(ω^2)*3\",0);\r\n\t\tthis.test(\"(ω^2)*2\", \"ω^ω\",-1);\r\n\t\tthis.test(\"(ω^2)*2\", \"ω^ω+ω^2\",0);\r\n\t\tthis.test(\"(ω^2)*2\", \"(ω^ω)*2+ω^2\",0);\r\n\t\tthis.test(\"(ω^2)*2\", \"ω^(ω+2)\",-1);\r\n\t\tthis.test(\"(ω^2)*2\", \"ω^(ω+3)\",-1);\r\n\t\tthis.test(\"(ω^2)*2\", \"ω^(ω2+2)\",-1);\r\n\t\tthis.test(\"(ω^2)*2\", \"ω^(ω2+3)\",-1);\r\n\t\tthis.test(\"(ω^2)*2\", \"ε0*ω\", -1);//20240821修改\r\n\t\tthis.test(\"(ω^2)*2\", \"ε0*ω^2\", -1);\r\n\t\tthis.test(\"(ω^2)*2\", \"ε0*ω^3\", -1);\r\n\t\tthis.test(\"ω^ω\", \"(ω^ω)*2\", 0);\r\n\t\tthis.test(\"ω^ω\", \"(ω^ω)*3\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^(ω2)\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^2\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^ω\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^ω+ω^ω\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^ω+(ω^ω)*2\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^(ω^ω+ω)\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^(ω^ω+ω2)\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^(ω^ω+ω^2)\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^(ω+1)\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^(ω^2+1)\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^(ω^ω+1)\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ε0\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω^ω\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω^ω^2\", -1);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω^(ω2)\", 0);\r\n\t\tthis.test(\"ω^ω\", \"φ(ω,0)\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"(ω^ω)*3\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^(ω2)\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^ω\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^ω+ω^ω\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^ω+(ω^ω)*2\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^(ω^ω+ω)\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^(ω^ω+ω2)\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^(ω^ω+ω^2)\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^(ω+1)\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^(ω^2+1)\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^(ω^ω+1)\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω^ω\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω^(ω2)\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω^ω^2\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0*2\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0*ω^ω\", 0);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0*ε0\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0^2\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"Γ0^Γ0\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε(Γ0+1)\", -1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"φ(ε(Γ0+1),0)\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^ω\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"(ω^(ω+1))*2\", 0);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^(ω+2)\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^(ω2)\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^(ω2+1)\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^(ω3)\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^ω^2\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^ω^ω\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ε0\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"φ(ω,0)\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"Γ0\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"Γ0*2\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"Γ0*ω\", -1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"φ(ω,Γ0+1)\", -1);\r\n\t\tthis.test(\"(ω^(ω+1))*2\", \"(ω^(ω+1))*3\", 0);\r\n\t\tthis.test(\"ω^ω^ω\", \"ω^ω^ω2\", 0);\r\n\t\tthis.test(\"ω^ω^ω2+ω^ω\", \"ω^ω^ω2*2\", -1);//20240821修改\r\n\t\tthis.test(\"ε0\", \"ε0*2\", 0);\r\n\t\tthis.test(\"ε0\", \"ε1\", 0);\r\n\t\tthis.test(\"ε0\", \"ε(ω+1)\", 0);\r\n\t\tthis.test(\"ε0\", \"ε(ω^2+1)\", 0);\r\n\t\tthis.test(\"ε0\", \"ε(ε0)\", 0);\r\n\t\tthis.test(\"ε0\", \"ζ0\", -1);\r\n\t\tthis.test(\"ε0\", \"η0\", -1);\r\n\t\tthis.test(\"ε0\", \"Γ0\", -1);\r\n\t\tthis.test(\"ε0\", \"LVO\", -1);\r\n\t\tthis.test(\"ε0\", \"ψ(Ω_2)\", 0);\r\n\t\tthis.test(\"ε0\", \"ψ(Ω_3)\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ε0*3\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ε0^2\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ε0^ε0\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ε1\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ε(ω+1)\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ε(ε0)\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ζ0\", -1);\r\n\t\tthis.test(\"ε0*2\", \"η0\", -1);\r\n\t\tthis.test(\"ε0*2\", \"Γ0\", -1);\r\n\t\tthis.test(\"ε0*2\", \"LVO\", -1);\r\n\t\tthis.test(\"ε0*2\", \"ψ(Ω_2)\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ψ(Ω_3)\", 0);\r\n\t\tthis.test(\"ε0*2\", \"ψ(Ω_ω)\", -1);\r\n\t\tthis.test(\"ε1\", \"ε(ω^2+1)\", 0);\r\n\t\tthis.test(\"ε1\", \"ε(ω^ω+1)\", 0);\r\n\t\tthis.test(\"ε1\", \"ψ(Ω_2)\", 0);\r\n\t\tthis.test(\"ε(ω)\", \"ε(ω^2+ω)\", 0);\r\n\t\tthis.test(\"ω^ω\", \"ω^ω^ω+ω\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ω^(ω^ω+1)\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω^2\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω^(ω+1)\", 1);\r\n\t\tthis.test(\"ω^ω\", \"ε0*ω^(ω2+1)\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^ω^ω+ω\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ω^(ω^ω+1)\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω^2\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω^(ω+1)\", 1);\r\n\t\tthis.test(\"(ω^ω)*2\", \"ε0*ω^(ω2+1)\", 1);\r\n\t\tthis.test(\"ω^(ω+1)\", \"ω^(ω+1)+ω^ω\", 1);\r\n\t\tthis.test(\"ω^(ω+1)+ω^ω\", \"(ω^(ω+1))*2\", 1);\r\n\t\tthis.test(\"(ω^(ω+1))*2\", \"(ω^(ω+1))*2+ω^ω\", 1);\r\n\t\tthis.test(\"(ω^(ω+1))*2+ω^ω\", \"(ω^(ω+1))*3\", 1);\r\n\t\tthis.test(\"ω^ω^(ω+1)\", \"ω^ω^(ω+1)+ω^ω\", 1);//20240821修改\r\n\t\tthis.test(\"ω^ω^(ω+1)+ω^ω\", \"ω^ω^(ω+1)*2\", -1);//20240821修改\r\n\t\tthis.test(\"ω^ω^(ω+1)\", \"ω^(ω^(ω+1)+ω^ω)\", 1);\r\n\t\tthis.test(\"ω^(ω^(ω+1)+ω^ω)\", \"ω^(ω^(ω+1)*2)\", 1);\r\n\t\tthis.test(\"ω^ω^ω2\", \"ω^ω^ω2+ω^ω\", 1);//20240821修改\r\n\t\tthis.test(\"ε0\", \"φ(ω,0)\", 1);\r\n\t\tthis.test(\"ε0\", \"SVO\", 1);\r\n\t\tthis.test(\"ε0\", \"SHO\", 1);\r\n\t\tthis.test(\"ε0*2\", \"φ(ω,0)\", 1);\r\n\t\tthis.test(\"ε0*2\", \"SVO\", 1);\r\n\t\tthis.test(\"ε1\", \"ε(ω)\", 1);\r\n\t\tthis.test(\"ε1\", \"SHO\", 1);\r\n\t\tthis.test(\"ε(ω)\", \"ε(ω+1)\", 1);\r\n\t\tthis.test(\"ε(ω+1)\", \"SHO\", 1);\r\n\t\tthis.test(\"ζ0\", \"ε(ζ0+1)\", 1);\r\n\r\n\r\n\t\tthis.test2(1, \"ω^(ω+1)\",\"ω^(ω+1)+ω^ω\",\"ω^(ω+1)*2\");\r\n\t\tthis.test2(-1, \"ω^(ω+1)+ω^ω\",\"ω^(ω+1)*2\",\"ω^(ω+1)*2+ω^ω\");\r\n\t\tthis.test2(-1, \"ω^(ω+1)\",\"ω^(ω+1)+ω^ω\",\"ω^(ω+1)*2\",\"ω^(ω+1)*2+ω^ω\");\r\n\t\tthis.test2(1, \"ω^(ω2)\",\"ω^(ω2)+ω^(ω+1)\",\"ω^(ω2)+ω^(ω+1)+ω^ω\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n    static {\r\n        FakeTest.map.set(\"\", []);\r\n\t\tFakeTest.map.set(\"1\", _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getOne());\r\n\t\tFakeTest.map.set(\"2\", this.getSuccessor(\"1\"));\r\n\t\tFakeTest.map.set(\"3\", this.getSuccessor(\"2\"));\r\n\t\tFakeTest.map.set(\"4\", this.getSuccessor(\"3\"));\r\n\t\tFakeTest.map.set(\"ω\", this.getSupSeq(\"1\"));\r\n\t\tFakeTest.map.set(\"ω+1\", this.getSupSeq(\"2\",\"2\"));\r\n\t\tFakeTest.map.set(\"ω+2\", this.getSupSeq(\"2\",\"3\"));\r\n\t\tFakeTest.map.set(\"ω+3\", this.getSupSeq(\"2\",\"4\"));\r\n\t\tFakeTest.map.set(\"ω2\", this.getSupSeq(\"2\",\"ω\"));\r\n\t\tFakeTest.map.set(\"ω2+1\", this.getSupSeq(\"2\",\"ω+1\"));\r\n\t\tFakeTest.map.set(\"ω2+2\", this.getSupSeq(\"2\",\"ω+2\"));\r\n\t\tFakeTest.map.set(\"ω2+3\", this.getSupSeq(\"2\",\"ω+3\"));\r\n\t\tFakeTest.map.set(\"ω3\", this.getSupSeq(\"2\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ω3+1\", this.getSupSeq(\"2\",\"ω2+1\"));\r\n\t\tFakeTest.map.set(\"ω3+2\", this.getSupSeq(\"2\",\"ω2+2\"));\r\n\t\tFakeTest.map.set(\"ω4\", this.getSupSeq(\"2\",\"ω3\"));\r\n\t\tFakeTest.map.set(\"ω^2\", this.getSupSeq(\"2\"));\r\n\t\tFakeTest.map.set(\"ω^2+1\", this.getSupSeq(\"3\",\"3\"));\r\n\t\tFakeTest.map.set(\"ω^2+ω\", this.getSupSeq(\"3\",\"ω\"));\r\n\t\tFakeTest.map.set(\"ω^2+ω+1\", this.getSupSeq(\"3\",\"ω+1\"));\r\n\t\tFakeTest.map.set(\"ω^2+ω2\", this.getSupSeq(\"3\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"(ω^2)*2\", this.getSupSeq(\"3\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"(ω^2)*2+1\", this.getSupSeq(\"3\",\"ω^2+1\"));\r\n\t\tFakeTest.map.set(\"(ω^2)*2+ω\", this.getSupSeq(\"3\",\"ω^2+ω\"));\r\n\t\tFakeTest.map.set(\"(ω^2)*3\", this.getSupSeq(\"3\",\"(ω^2)*2\"));\r\n\t\tFakeTest.map.set(\"ω^3\", this.getSupSeq(\"3\"));\r\n\t\tFakeTest.map.set(\"ω^3+ω\", this.getSupSeq(\"4\",\"ω\"));\r\n\t\tFakeTest.map.set(\"ω^3+ω^2\", this.getSupSeq(\"4\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ω^ω\", this.getSupSeq(\"ω\",\"ω\"));\r\n\t\tFakeTest.map.set(\"ω^ω+1\", this.getSupSeq(\"ω\",\"ω+1\",\"ω+1\"));\r\n\t\tFakeTest.map.set(\"ω^ω+ω\", this.getSupSeq(\"ω\",\"ω+1\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ω^ω+ω2\", this.getSupSeq(\"ω\",\"ω+1\",\"ω3\"));\r\n\t\tFakeTest.map.set(\"ω^ω+ω^2\", this.getSupSeq(\"ω\",\"ω+1\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"(ω^ω)*2\", this.getSupSeq(\"ω\",\"ω+1\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"(ω^ω)*2+ω^2\", this.getSupSeq(\"ω\",\"ω+1\",\"ω^ω+1\",\"ω^ω+ω^2\"));\r\n\t\tFakeTest.map.set(\"(ω^ω)*3\", this.getSupSeq(\"ω\",\"ω+1\",\"(ω^ω)*2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)\", this.getSupSeq(\"ω\",\"ω+1\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)+1\", this.getSupSeq(\"ω\",\"ω+2\",\"ω+2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)+ω\", this.getSupSeq(\"ω\",\"ω+2\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)+ω^2\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)+ω^ω\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)*2\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^(ω+1)\"));\r\n\t\tFakeTest.map.set(\"(ω^(ω+1))*2\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^(ω+1)\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)*2+ω^ω\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^(ω+1)+ω^ω\"));\r\n\t\tFakeTest.map.set(\"(ω^(ω+1))*2+ω^ω\", this.getSupSeq(\"ω\",\"ω+2\",\"ω^(ω+1)+ω^ω\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+1)*3\", this.getSupSeq(\"ω\",\"ω+2\",\"(ω^(ω+1))*2\"));\r\n\t\tFakeTest.map.set(\"(ω^(ω+1))*3\", this.getSupSeq(\"ω\",\"ω+2\",\"(ω^(ω+1))*2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+2)\", this.getSupSeq(\"ω\",\"ω+2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω+3)\", this.getSupSeq(\"ω\",\"ω+3\"));\r\n\t\tFakeTest.map.set(\"ω^(ω2)\", this.getSupSeq(\"ω\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω2)+ω^(ω+1)\", this.getSupSeq(\"ω\",\"ω2+1\",\"ω^(ω+1)\"));\r\n\t\tFakeTest.map.set(\"ω^(ω2)+ω^(ω+1)+ω^ω\", this.getSupSeq(\"ω\",\"ω2+1\",\"ω^(ω+1)+ω^ω\"));\r\n\t\tFakeTest.map.set(\"ω^(ω2+1)\", this.getSupSeq(\"ω\",\"ω2+1\"));\r\n\t\tFakeTest.map.set(\"ω^(ω2+2)\", this.getSupSeq(\"ω\",\"ω2+2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω2+3)\", this.getSupSeq(\"ω\",\"ω2+3\"));\r\n\t\tFakeTest.map.set(\"ω^(ω3)\", this.getSupSeq(\"ω\",\"ω3\"));\r\n\t\tFakeTest.map.set(\"ω^ω^2\", this.getSupSeq(\"ω\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω^2+1)\", this.getSupSeq(\"ω\",\"ω^2+1\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω\", this.getSupSeq(\"ω\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω+1\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"ω^ω+1\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω+ω\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"ω^ω+ω\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω+ω^ω\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"(ω^ω)*2\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω+(ω^ω)*2\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"(ω^ω)*3\"));\r\n\t\tFakeTest.map.set(\"ω^(ω^ω+1)\", this.getSupSeq(\"ω\",\"ω^ω+1\"));\r\n\t\tFakeTest.map.set(\"ω^(ω^ω+ω)\", this.getSupSeq(\"ω\",\"ω^ω+ω\"));\r\n\t\tFakeTest.map.set(\"ω^(ω^ω+ω2)\", this.getSupSeq(\"ω\",\"ω^ω+ω2\"));\r\n\t\tFakeTest.map.set(\"ω^(ω^ω+ω^2)\", this.getSupSeq(\"ω\",\"ω^ω+ω^2\"));\r\n\t\tFakeTest.map.set(\"ω^ω^(ω+1)\", this.getSupSeq(\"ω\",\"ω^(ω+1)\"));\t\r\n\t\tFakeTest.map.set(\"ω^ω^(ω+1)+ω^ω\", this.getSupSeq(\"ω\",\"ω^(ω+1)+1\",\"ω^(ω+1)+ω^ω\"));\t\r\n\t\tFakeTest.map.set(\"ω^ω^(ω+1)*2\", this.getSupSeq(\"ω\",\"ω^(ω+1)+1\",\"ω^ω^(ω+1)\"));\t\r\n\t\tFakeTest.map.set(\"ω^(ω^(ω+1)+ω^ω)\", this.getSupSeq(\"ω\",\"ω^(ω+1)+ω^ω\"));\t\r\n\t\tFakeTest.map.set(\"ω^(ω^(ω+1)*2)\", this.getSupSeq(\"ω\",\"(ω^(ω+1))*2\"));\t\r\n\t\tFakeTest.map.set(\"ω^ω^(ω^2+1)\", this.getSupSeq(\"ω\",\"ω^(ω^2+1)\"));\t\t\r\n\t\tFakeTest.map.set(\"ω^ω^(ω^ω+1)\", this.getSupSeq(\"ω\",\"ω^(ω^ω+1)\"));\t\t\r\n\t\tFakeTest.map.set(\"ω^ω^ω2\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"ω^ω^ω\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω2+ω^ω\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"ω^ω^ω+1\",\"ω^ω^ω+ω^ω\"));\r\n\t\tFakeTest.map.set(\"ω^ω^ω2*2\", this.getSupSeq(\"ω\",\"ω^ω+1\",\"ω^ω^ω+1\",\"ω^ω^ω2\"));\r\n\t\tFakeTest.map.set(\"ε0\", this.getSupSeq(\"ω\"));\r\n\t\tFakeTest.map.set(\"ε0+1\", this.getSupSeq(\"ω+1\",\"ω+1\"));\r\n\t\tFakeTest.map.set(\"ε0+ω\", this.getSupSeq(\"ω+1\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ε0+ω^2\", this.getSupSeq(\"ω+1\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ε0+ω^ω\", this.getSupSeq(\"ω+1\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"ε0*2\", this.getSupSeq(\"ω+1\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ε0*2+ω\", this.getSupSeq(\"ω+1\",\"ε0+1\",\"ε0+ω\"));\r\n\t\tFakeTest.map.set(\"ε0*3\", this.getSupSeq(\"ω+1\",\"ε0*2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω\", this.getSupSeq(\"ω+1\"));\r\n\t\tFakeTest.map.set(\"ε0*ω+1\", this.getSupSeq(\"ω+2\",\"ω+2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω+ω\", this.getSupSeq(\"ω+2\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω+ω^2\", this.getSupSeq(\"ω+2\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω+ω^ω\", this.getSupSeq(\"ω+2\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"ε0*(ω+1)\", this.getSupSeq(\"ω+2\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ε0*(ω+2)\", this.getSupSeq(\"ω+2\",\"ε0*2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω2\", this.getSupSeq(\"ω+2\",\"ε0*ω\"));\r\n\t\tFakeTest.map.set(\"ε0*ω3\", this.getSupSeq(\"ω+2\",\"ε0*ω2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^2\", this.getSupSeq(\"ω+2\"));\r\n\t\tFakeTest.map.set(\"ε0*(ω^2+1)\", this.getSupSeq(\"ω+3\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^2*2\", this.getSupSeq(\"ω+3\",\"ε0*ω^2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^3\", this.getSupSeq(\"ω+3\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^ω\", this.getSupSeq(\"ω2\",\"ω2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^ω+1\", this.getSupSeq(\"ω2\",\"ω2+1\",\"ω2+1\"));\r\n\t\tFakeTest.map.set(\"ε0*(ω^ω+1)\", this.getSupSeq(\"ω2\",\"ω2+1\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ε0*(ω^ω+ω)\", this.getSupSeq(\"ω2\",\"ω2+1\",\"ε0*ω\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^ω2\", this.getSupSeq(\"ω2\",\"ω2+1\",\"ε0*ω^ω\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω+1)\", this.getSupSeq(\"ω2\",\"ω2+1\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω+1)+1\", this.getSupSeq(\"ω2\",\"ω2+2\",\"ω2+2\"));\r\n\t\tFakeTest.map.set(\"ε0*(ω^(ω+1)+1)\", this.getSupSeq(\"ω2\",\"ω2+2\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω+1)*2\", this.getSupSeq(\"ω2\",\"ω2+2\",\"ε0*ω^(ω+1)\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω+2)\", this.getSupSeq(\"ω2\",\"ω2+2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω+3)\", this.getSupSeq(\"ω2\",\"ω2+3\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω2)\", this.getSupSeq(\"ω2\",\"ω3\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^(ω2+1)\", this.getSupSeq(\"ω2\",\"ω3+1\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^ω^2\", this.getSupSeq(\"ω2\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ε0*ω^ω^ω\", this.getSupSeq(\"ω2\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"ε0^2\", this.getSupSeq(\"ω2\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ε0^ω\", this.getSupSeq(\"ω2\",\"ε0*ω\"));\r\n\t\tFakeTest.map.set(\"ε0^ε0\", this.getSupSeq(\"ω2\",\"ε0^2\"));\r\n\t\tFakeTest.map.set(\"ε1\", this.getSupSeq(\"ω2\"));\r\n\t\tFakeTest.map.set(\"ε1^2\", this.getSupSeq(\"ω3\",\"ε1\"));\r\n\t\tFakeTest.map.set(\"ε1^ε1\", this.getSupSeq(\"ω3\",\"ε1^2\"));\r\n\t\tFakeTest.map.set(\"ε(ω)\", this.getSupSeq(\"ω^2\",\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ε(ω)^2\", this.getSupSeq(\"ω^2\",\"ω^2+ω\",\"ε(ω)\"));\r\n\t\tFakeTest.map.set(\"ε(ω)^ε(ω)\", this.getSupSeq(\"ω^2\",\"ω^2+ω\",\"ε(ω)^2\"));\r\n\t\tFakeTest.map.set(\"ε(ω+1)\", this.getSupSeq(\"ω^2\",\"ω^2+ω\"));\r\n\t\tFakeTest.map.set(\"ε(ω+1)^2\", this.getSupSeq(\"ω^2\",\"ω^2+ω2\",\"ε(ω+1)\"));\r\n\t\tFakeTest.map.set(\"ε(ω+1)^ε(ω+1)\", this.getSupSeq(\"ω^2\",\"ω^2+ω2\",\"ε(ω+1)^2\"));\r\n\t\tFakeTest.map.set(\"ε(ω2)\", this.getSupSeq(\"ω^2\",\"(ω^2)*2\"));\r\n\t\tFakeTest.map.set(\"ε(ω3)\", this.getSupSeq(\"ω^2\",\"(ω^2)*3\"));\r\n\t\tFakeTest.map.set(\"ε(ω^2)\", this.getSupSeq(\"ω^2\",\"ω^3\"));\r\n\t\tFakeTest.map.set(\"ε(ω^2+1)\", this.getSupSeq(\"ω^2\",\"ω^3+ω\"));\r\n\t\tFakeTest.map.set(\"ε(ω^2+ω)\", this.getSupSeq(\"ω^2\",\"ω^3+ω^2\"));\r\n\t\tFakeTest.map.set(\"ε(ω^ω)\", this.getSupSeq(\"ω^2\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"ε(ω^ω+1)\", this.getSupSeq(\"ω^2\",\"ω^ω+ω\"));\r\n\t\tFakeTest.map.set(\"ε(ε0)\", this.getSupSeq(\"ω^2\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ζ0\", this.getSupSeq(\"ω^2\"));\r\n\t\tFakeTest.map.set(\"ε(ζ0+1)\", this.getSupSeq(\"ω^2+ω\"));\r\n\t\tFakeTest.map.set(\"η0\", this.getSupSeq(\"ω^3\"));\r\n\t\tFakeTest.map.set(\"φ(ω,0)\", this.getSupSeq(\"ω^ω\",\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"Γ0\", this.getSupSeq(\"ω^ω\"));\r\n\t\tFakeTest.map.set(\"Γ0*2\", this.getSupSeq(\"ω^ω+1\",\"Γ0\"));\r\n\t\tFakeTest.map.set(\"Γ0*ω\", this.getSupSeq(\"ω^ω+1\"));\r\n\t\tFakeTest.map.set(\"Γ0*ω^ω\", this.getSupSeq(\"ω^ω+ω\",\"ω^ω+ω\"));\r\n\t\tFakeTest.map.set(\"Γ0*ε0\", this.getSupSeq(\"ω^ω+ω\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"Γ0^2\", this.getSupSeq(\"ω^ω+ω\",\"Γ0\"));\r\n\t\tFakeTest.map.set(\"Γ0^Γ0\", this.getSupSeq(\"ω^ω+ω\",\"Γ0^2\"));\r\n\t\tFakeTest.map.set(\"ε(Γ0+1)\", this.getSupSeq(\"ω^ω+ω\"));\r\n\t\tFakeTest.map.set(\"φ(ω,Γ0+1)\", this.getSupSeq(\"ω^ω\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"φ(ε(Γ0+1),0)\", this.getSupSeq(\"(ω^ω)*2\",\"ε(Γ0+1)\"));\r\n\t\tFakeTest.map.set(\"SVO\", this.getSupSeq(\"ω^ω^ω\",\"ω^ω^ω\"));\r\n\t\tFakeTest.map.set(\"LVO\", this.getSupSeq(\"ω^ω^ω\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_2)\", this.getSupSeq(\"ε0\",\"ε0\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_3)\", this.getSupSeq(\"ε0\",\"ψ(Ω_2)\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_ω)\", this.getSupSeq(\"ε0\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_ω*ω)\", this.getSupSeq(\"ε0*ω\",\"ε0*ω\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_ω*ω2)\", this.getSupSeq(\"ε0*ω\",\"ε0*ω2\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_ω*ω^2)\", this.getSupSeq(\"ε0*ω\",\"ε0*ω^2\"));\r\n\t\tFakeTest.map.set(\"ψ(Ω_ω*ω^ω)\", this.getSupSeq(\"ε0*ω\",\"ε0*ω^ω\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^2*ω)\", this.getSupSeq(\"ε0*ω^2\",\"ε0*ω^2\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^2*ω2)\", this.getSupSeq(\"ε0*ω^2\",\"ε0*ω^2*2\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^2*ω^2)\", this.getSupSeq(\"ε0*ω^2\",\"ε0*ω^3\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^2*ω^ω)\", this.getSupSeq(\"ε0*ω^2\",\"ε0*ω^ω\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^ω)\", this.getSupSeq(\"ε0*ω^ω\",\"ε0*ω^ω\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^ω2)\", this.getSupSeq(\"ε0*ω^ω\",\"ε0*ω^ω2\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^ω*ω)\", this.getSupSeq(\"ε0*ω^ω\",\"ε0*ω^(ω+1)\",\"ε0*ω^(ω+1)\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^(ω2))\", this.getSupSeq(\"ε0*ω^ω\",\"ε0*ω^(ω2)\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^(ω^2))\", this.getSupSeq(\"ε0*ω^ω\",\"ε0*ω^ω^2\"));\r\n\t\tFakeTest.map.set(\"ψ((Ω_ω)^(ω^ω))\", this.getSupSeq(\"ε0*ω^ω\",\"ε0*ω^ω^ω\"));\r\n\t\tFakeTest.map.set(\"SHO\", this.getSupSeq(\"ε(ω)\",\"ε(ω)\"));\r\n    }\r\n}\n\n//# sourceURL=webpack://fseq/./src/FakeTest.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FSeq: () => (/* reexport safe */ _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   FSeqConverter: () => (/* reexport safe */ _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   FakeTest: () => (/* reexport safe */ _FakeTest_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _FSeq_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FSeq.js */ \"./src/FSeq.js\");\n/* harmony import */ var _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FSeqConverter.js */ \"./src/FSeqConverter.js\");\n/* harmony import */ var _FakeTest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FakeTest.js */ \"./src/FakeTest.js\");\n/* harmony import */ var _FFFZ2FSeqTest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FFFZ2FSeqTest.js */ \"./src/FFFZ2FSeqTest.js\");\n//import \"@babel/polyfill\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction isEmpty(obj){\r\n    if(typeof obj == \"undefined\" || obj == null || obj == \"\"){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\nvar inputPattern=/^1(,\\d+)*$/g\r\nvar numberPattern=/^\\d+$/g\r\n\r\n function expand0(){\r\n    let input_fffz = document.getElementById(\"input_fffz\").value;\r\n    let input_seq = document.getElementById(\"input_fffz\").value;\r\n    let input_n = document.getElementById(\"input_n\").value;\r\n\r\n    numberPattern.lastIndex = 0;\r\n    if (!numberPattern.test(input_n))  return;\r\n    //let input_m = document.getElementById(\"input_m\").value;\r\n    _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].N = parseInt(input_n);\r\n    //FSeq.M = parseInt(input_m);\r\n    let seq = [];\r\n    if(isEmpty(input_fffz)){\r\n        inputPattern.lastIndex = 0;\r\n        if (!inputPattern.test(input_seq))  {\r\n            document.getElementById(\"output_fffz\").value = `fseq Input validate fail !`;\r\n            document.getElementById(\"output_seq\").value = \"\";\r\n            return;\r\n        }\r\n        const errors = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateSeq(input_seq);\r\n        if(errors.length > 0){\r\n            document.getElementById(\"output_fffz\").value = errors.join(\"\\n\");\r\n            document.getElementById(\"output_seq\").value = \"\";\r\n            return;\r\n        }\r\n        seq = input_seq;\r\n        input_fffz = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fSeq2FFFZ(seq,1);\r\n    }else{\r\n        const errors = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateFFFZ(input_fffz);\r\n        if(errors.length > 0){\r\n            document.getElementById(\"output_fffz\").value = errors.join(\"\\n\");\r\n            document.getElementById(\"output_seq\").value = \"\";\r\n            return;\r\n        }\r\n        seq = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fffz2FSeq(input_fffz);\r\n    }\r\n    const errors = _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].validateFake(seq);\r\n    if(errors.length > 0){\r\n        document.getElementById(\"output_fffz\").value = errors.join(\"\\n\");\r\n        document.getElementById(\"output_seq\").value = \"\";\r\n        return;\r\n    }\r\n    let expand =  _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].expand(seq);\r\n    let expandFFFZ =  _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].fSeq2FFFZ(expand,1);\r\n\r\n\r\n    document.getElementById(\"input_fffz\").value = input_fffz;\r\n    document.getElementById(\"input_seq\").value = _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(seq)?\"\":seq.join(\",\");\r\n    document.getElementById(\"output_fffz\").value = expandFFFZ;\r\n    document.getElementById(\"output_seq\").value = _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isEmpty(expand)?\"\":expand.join(\",\");\r\n}\r\n\r\ndocument.getElementById(\"expand_button\").onclick = expand0;\r\n\r\nwindow.onload=function (){\r\n    console.clear();\r\n    console.log(\"index.js\");\r\n    _FakeTest_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].test0();\r\n    _FFFZ2FSeqTest_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].test();\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({FSeq: _FSeq_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],FSeqConverter: _FSeqConverter_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],FakeTest: _FakeTest_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]});\r\n\r\n\r\n\n\n//# sourceURL=webpack://fseq/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;